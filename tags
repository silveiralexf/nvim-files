!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/80dbe5f/
#all	plugged/editorconfig-vim/tests/spec/editorconfig_spec.rb	/^  describe '#all' do$/;"	d
$(DOCKER_STREAMS)	plugged/neomake/Makefile	/^    -v $(PWD):\/testplugin \\$/;"	t
$(PWD)	plugged/neomake/Makefile	/^    -v $(PWD):\/testplugin \\$/;"	t
$(TESTS_FUGITIVE_DIR)	plugged/neomake/Makefile	/^$(TESTS_FUGITIVE_DIR):$/;"	t
$(TESTS_VADER_DIR)	plugged/neomake/Makefile	/^$(TESTS_VADER_DIR):$/;"	t
$(_DOCKER_VIM_TARGETS)	plugged/neomake/Makefile	/^$(_DOCKER_VIM_TARGETS):$/;"	t
$(_TESTS_REL_AND_ABS)	plugged/neomake/Makefile	/^$(_TESTS_REL_AND_ABS):$/;"	t
$NVIM_CONFIG	init.vim	/^let $NVIM_CONFIG= join([$NVIM_HOME, "config.d"], "\/")$/;"	v
$NVIM_HOME	init.vim	/^let $NVIM_HOME="~\/.config\/nvim"$/;"	v
$NVIM_LOG_FILE	plugged/neomake/tests/vim/vimrc	/^let $NVIM_LOG_FILE='\/dev\/stderr'$/;"	v
$NVIM_PLUGGED	init.vim	/^let $NVIM_PLUGGED= join([$NVIM_HOME, "plugged"], "\/")$/;"	v
--rm	plugged/neomake/Makefile	/^    -v $(PWD):\/testplugin \\$/;"	t
-e	plugged/neomake/Makefile	/^VIMLINT_OPTIONS=-u -e EVL102.l:_=1$/;"	t
-u	plugged/neomake/Makefile	/^VIMLINT_OPTIONS=-u -e EVL102.l:_=1$/;"	t
-v	plugged/neomake/Makefile	/^    -v $(PWD):\/testplugin \\$/;"	t
./vim-themis/bin	plugged/deoplete.nvim/Makefile	/^PATH := .\/vim-themis\/bin:$(PATH)$/;"	t
.coverage.covimerage	plugged/neomake/Makefile	/^.coverage.covimerage: .coveragerc $(shell find . -name '*.vim')$/;"	t
0	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/INPUTS/compile_commands.json	/^{$/;"	o
0	plugged/deoplete-clang/tests/clang/tests/cindex/INPUTS/compile_commands.json	/^{$/;"	o
0	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	o	array:message.children
0	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	o	array:message.spans
0	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	o	array:message.spans.0.expansion.def_site_span.text
0	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	o	array:message.spans.0.expansion.span.text
0	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	o	array:message.spans.0.text
0	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	array:target.kind
0	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	o	array:message.children
0	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	o	array:message.spans
0	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	o	array:message.spans.0.expansion.span.text
0	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	o	array:message.spans.0.text
0	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	s	array:target.kind
0	plugged/neomake/tests/fixtures/rust/cargo_error_without_span.json	/^ {"message":{"children":[],"code":null,"level":"error","message":"aborting due to 18 previous er/;"	s	array:target.kind
0	plugged/neomake/tests/fixtures/rust/cargo_info.json	/^{"features":["default"],"filenames":["\/home\/jelte\/fun\/derive_more\/target\/debug\/deps\/libu/;"	s	array:features
0	plugged/neomake/tests/fixtures/rust/cargo_info.json	/^{"features":["default"],"filenames":["\/home\/jelte\/fun\/derive_more\/target\/debug\/deps\/libu/;"	s	array:filenames
0	plugged/neomake/tests/fixtures/rust/cargo_info.json	/^{"features":["default"],"filenames":["\/home\/jelte\/fun\/derive_more\/target\/debug\/deps\/libu/;"	s	array:target.kind
0	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	o	array:message.spans
0	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	o	array:message.spans.0.text
0	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	s	array:target.kind
1	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/INPUTS/compile_commands.json	/^{$/;"	o
1	plugged/deoplete-clang/tests/clang/tests/cindex/INPUTS/compile_commands.json	/^{$/;"	o
1	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	o	array:message.children
1	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	o	array:message.spans.0.expansion.def_site_span.text
2	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/INPUTS/compile_commands.json	/^{$/;"	o
2	plugged/deoplete-clang/tests/clang/tests/cindex/INPUTS/compile_commands.json	/^{$/;"	o
2	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	o	array:message.spans.0.expansion.def_site_span.text
3	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	o	array:message.spans.0.expansion.def_site_span.text
3-space indentation	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/indentation.rst	/^3-space indentation$/;"	S	section:Space-based indentation
4	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	o	array:message.spans.0.expansion.def_site_span.text
4-space indentation with tab width of 8	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/indentation.rst	/^4-space indentation with tab width of 8$/;"	S	section:Space-based indentation
5	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	o	array:message.spans.0.expansion.def_site_span.text
6	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	o	array:message.spans.0.expansion.def_site_span.text
7	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	o	array:message.spans.0.expansion.def_site_span.text
8	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	o	array:message.spans.0.expansion.def_site_span.text
9	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	o	array:message.spans.0.expansion.def_site_span.text
:VdebugOpt	plugged/vdebug/spec/options_command_spec.rb	/^describe ":VdebugOpt" do$/;"	d
;b	config.d/fzf.vim	/^nmap ;b :Buffers<CR>$/;"	m
;c	config.d/fzf.vim	/^nmap ;c :Commits<CR>$/;"	m
;f	config.d/fzf.vim	/^nmap ;f :Files<CR>$/;"	m
<2-LeftMouse>	plugged/tagbar/autoload/tagbar.vim	/^    inoremap <script> <silent> <buffer> <2-LeftMouse>$/;"	m
<2-LeftMouse>	plugged/tagbar/autoload/tagbar.vim	/^    nnoremap <script> <silent> <buffer> <2-LeftMouse>$/;"	m
<BS>	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^  snoremap <BS>     a<BS>$/;"	m
<C-L>	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^    nmap <silent> <C-L>  <Plug>GoldenViewSplit$/;"	m
<C-L>	plugged/vim-sensible/plugin/sensible.vim	/^  nnoremap <silent> <C-L> :nohlsearch<C-R>=has('diff')?'<Bar>diffupdate':''<CR><CR><C-L>$/;"	m
<C-N>	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^    nmap <silent> <C-N>  <Plug>GoldenViewNext$/;"	m
<C-P>	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^    nmap <silent> <C-P>  <Plug>GoldenViewPrevious$/;"	m
<C-U>	plugged/vim-sensible/plugin/sensible.vim	/^inoremap <C-U> <C-G>u<C-U>$/;"	m
<C-h>	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^  snoremap <C-h>    a<BS>$/;"	m
<C-k>	config.d/neosnippet.vim	/^imap <C-k> <Plug>(neosnippet_expand_or_jump)$/;"	m
<C-k>	config.d/neosnippet.vim	/^smap <C-k> <Plug>(neosnippet_expand_or_jump)$/;"	m
<C-k>	config.d/neosnippet.vim	/^xmap <C-k> <Plug>(neosnippet_expand_target)$/;"	m
<CR>	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^  snoremap <CR>     a<BS>$/;"	m
<D-R>	plugged/rust.vim/ftplugin/rust.vim	/^nnoremap <buffer> <D-R> :RustRun! <C-r>=join(b:rust_last_rustc_args)<CR><C-\\>erust#AppendCmdLin/;"	m
<D-r>	plugged/rust.vim/ftplugin/rust.vim	/^nnoremap <silent> <buffer> <D-r> :RustRun<CR>$/;"	m
<Del>	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^  snoremap <Del>    a<BS>$/;"	m
<F8>	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^    nmap <silent> <F8>   <Plug>GoldenViewSwitchMain$/;"	m
<Leader>hp	plugged/vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hp <Plug>GitGutterPreviewHunk$/;"	m
<Leader>hs	plugged/vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hs <Plug>GitGutterStageHunk$/;"	m
<Leader>hu	plugged/vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hu <Plug>GitGutterUndoHunk$/;"	m
<LeftRelease>	plugged/tagbar/autoload/tagbar.vim	/^    inoremap <script> <silent> <buffer> <LeftRelease>$/;"	m
<LeftRelease>	plugged/tagbar/autoload/tagbar.vim	/^    nnoremap <script> <silent> <buffer> <LeftRelease>$/;"	m
<Plug>(-fzf-complete-trigger)	plugged/fzf.vim/autoload/fzf/vim.vim	/^inoremap <silent> <Plug>(-fzf-complete-trigger) <c-o>:call <sid>complete_trigger()<cr>$/;"	m
<Plug>(multiple-cursors-apply)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(multiple-cursors-apply) <C-o>:call <SID>apply_user_input_next('i')<CR>$/;"	m
<Plug>(multiple-cursors-apply)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-apply) :call <SID>apply_user_input_next('n')<CR>$/;"	m
<Plug>(multiple-cursors-apply)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^xnoremap <silent> <Plug>(multiple-cursors-apply) :<C-u>call <SID>apply_user_input_next('v')<CR>$/;"	m
<Plug>(multiple-cursors-detect)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(multiple-cursors-detect) <C-o>:call <SID>detect_bad_input()<CR>$/;"	m
<Plug>(multiple-cursors-detect)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-detect) :call <SID>detect_bad_input()<CR>$/;"	m
<Plug>(multiple-cursors-detect)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^xnoremap <silent> <Plug>(multiple-cursors-detect) :<C-u>call <SID>detect_bad_input()<CR>$/;"	m
<Plug>(multiple-cursors-input)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(multiple-cursors-input) <C-o>:call <SID>process_user_input()<CR>$/;"	m
<Plug>(multiple-cursors-input)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-input) :call <SID>process_user_input()<CR>$/;"	m
<Plug>(multiple-cursors-input)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^xnoremap <silent> <Plug>(multiple-cursors-input) :<C-u>call <SID>process_user_input()<CR>$/;"	m
<Plug>(multiple-cursors-new)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-new) :<C-u>call multiple_cursors#new('v', 0)<CR>$/;"	m
<Plug>(multiple-cursors-new-word)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-new-word) :<C-u>call multiple_cursors#new('v', 1)<CR>$/;"	m
<Plug>(multiple-cursors-prev)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-prev) :<C-u>call multiple_cursors#prev()<CR>$/;"	m
<Plug>(multiple-cursors-skip)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-skip) :<C-u>call multiple_cursors#skip()<CR>$/;"	m
<Plug>(multiple-cursors-wait)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(multiple-cursors-wait) <C-o>:call <SID>wait_for_user_input('')<CR>$/;"	m
<Plug>(multiple-cursors-wait)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-wait) :call <SID>wait_for_user_input('')<CR>$/;"	m
<Plug>(multiple-cursors-wait)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^xnoremap <silent> <Plug>(multiple-cursors-wait) :<C-u>call <SID>wait_for_user_input('')<CR>$/;"	m
<Plug>(neosnippet_expand)	plugged/neosnippet.vim/plugin/neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_expand)$/;"	m
<Plug>(neosnippet_expand)	plugged/neosnippet.vim/plugin/neosnippet.vim	/^snoremap <silent><expr> <Plug>(neosnippet_expand)$/;"	m
<Plug>(neosnippet_expand_or_jump)	plugged/neosnippet.vim/plugin/neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_expand_or_jump)$/;"	m
<Plug>(neosnippet_expand_or_jump)	plugged/neosnippet.vim/plugin/neosnippet.vim	/^snoremap <silent><expr> <Plug>(neosnippet_expand_or_jump)$/;"	m
<Plug>(neosnippet_expand_target)	plugged/neosnippet.vim/plugin/neosnippet.vim	/^xnoremap <silent> <Plug>(neosnippet_expand_target)$/;"	m
<Plug>(neosnippet_get_selected_text)	plugged/neosnippet.vim/plugin/neosnippet.vim	/^xnoremap <silent> <Plug>(neosnippet_get_selected_text)$/;"	m
<Plug>(neosnippet_jump)	plugged/neosnippet.vim/plugin/neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_jump)$/;"	m
<Plug>(neosnippet_jump)	plugged/neosnippet.vim/plugin/neosnippet.vim	/^snoremap <silent><expr> <Plug>(neosnippet_jump)$/;"	m
<Plug>(neosnippet_jump_or_expand)	plugged/neosnippet.vim/plugin/neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_jump_or_expand)$/;"	m
<Plug>(neosnippet_jump_or_expand)	plugged/neosnippet.vim/plugin/neosnippet.vim	/^snoremap <silent><expr> <Plug>(neosnippet_jump_or_expand)$/;"	m
<Plug>(neosnippet_register_oneshot_snippet)	plugged/neosnippet.vim/plugin/neosnippet.vim	/^xnoremap <silent> <Plug>(neosnippet_register_oneshot_snippet)$/;"	m
<Plug>(neosnippet_start_unite_snippet)	plugged/neosnippet.vim/plugin/neosnippet.vim	/^inoremap <expr><silent> <Plug>(neosnippet_start_unite_snippet)$/;"	m
<Plug>AirlineSelectNextTab	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    noremap <silent> <Plug>AirlineSelectNextTab :<C-u>call <SID>jump_to_tab(v:count1)<CR>$/;"	m
<Plug>AirlineSelectNextTab	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  noremap <silent> <Plug>AirlineSelectNextTab :<C-U>exe repeat(':tabn\\|', v:count1)<cr>$/;"	m
<Plug>AirlineSelectPrevTab	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    noremap <silent> <Plug>AirlineSelectPrevTab :<C-u>call <SID>jump_to_tab(-v:count1)<CR>$/;"	m
<Plug>AirlineSelectPrevTab	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  noremap <silent> <Plug>AirlineSelectPrevTab gT$/;"	m
<Plug>AirlineSelectTab1	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    noremap <silent> <Plug>AirlineSelectTab1 :call <SID>select_tab(0)<CR>$/;"	m
<Plug>AirlineSelectTab1	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  noremap <silent> <Plug>AirlineSelectTab1 :1tabn<CR>$/;"	m
<Plug>AirlineSelectTab2	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    noremap <silent> <Plug>AirlineSelectTab2 :call <SID>select_tab(1)<CR>$/;"	m
<Plug>AirlineSelectTab2	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  noremap <silent> <Plug>AirlineSelectTab2 :2tabn<CR>$/;"	m
<Plug>AirlineSelectTab3	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    noremap <silent> <Plug>AirlineSelectTab3 :call <SID>select_tab(2)<CR>$/;"	m
<Plug>AirlineSelectTab3	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  noremap <silent> <Plug>AirlineSelectTab3 :3tabn<CR>$/;"	m
<Plug>AirlineSelectTab4	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    noremap <silent> <Plug>AirlineSelectTab4 :call <SID>select_tab(3)<CR>$/;"	m
<Plug>AirlineSelectTab4	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  noremap <silent> <Plug>AirlineSelectTab4 :4tabn<CR>$/;"	m
<Plug>AirlineSelectTab5	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    noremap <silent> <Plug>AirlineSelectTab5 :call <SID>select_tab(4)<CR>$/;"	m
<Plug>AirlineSelectTab5	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  noremap <silent> <Plug>AirlineSelectTab5 :5tabn<CR>$/;"	m
<Plug>AirlineSelectTab6	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    noremap <silent> <Plug>AirlineSelectTab6 :call <SID>select_tab(5)<CR>$/;"	m
<Plug>AirlineSelectTab6	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  noremap <silent> <Plug>AirlineSelectTab6 :6tabn<CR>$/;"	m
<Plug>AirlineSelectTab7	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    noremap <silent> <Plug>AirlineSelectTab7 :call <SID>select_tab(6)<CR>$/;"	m
<Plug>AirlineSelectTab7	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  noremap <silent> <Plug>AirlineSelectTab7 :7tabn<CR>$/;"	m
<Plug>AirlineSelectTab8	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    noremap <silent> <Plug>AirlineSelectTab8 :call <SID>select_tab(7)<CR>$/;"	m
<Plug>AirlineSelectTab8	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  noremap <silent> <Plug>AirlineSelectTab8 :8tabn<CR>$/;"	m
<Plug>AirlineSelectTab9	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    noremap <silent> <Plug>AirlineSelectTab9 :call <SID>select_tab(8)<CR>$/;"	m
<Plug>AirlineSelectTab9	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  noremap <silent> <Plug>AirlineSelectTab9 :9tabn<CR>$/;"	m
<Plug>GitGutterNextHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterNextHunk &diff ? ']c' : ":\\<C-U>execute v:count1 . 'Git/;"	m
<Plug>GitGutterPrevHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterPrevHunk &diff ? '[c' : ":\\<C-U>execute v:count1 . 'Git/;"	m
<Plug>GitGutterPreviewHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterPreviewHunk :GitGutterPreviewHunk<CR>$/;"	m
<Plug>GitGutterStageHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterStageHunk   :GitGutterStageHunk<CR>$/;"	m
<Plug>GitGutterTextObjectInnerPending	plugged/vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>GitGutterTextObjectInnerPending :<C-U>call gitgutter#hunk#text_object(1)/;"	m
<Plug>GitGutterTextObjectInnerVisual	plugged/vim-gitgutter/plugin/gitgutter.vim	/^xnoremap <silent> <Plug>GitGutterTextObjectInnerVisual  :<C-U>call gitgutter#hunk#text_object(1)/;"	m
<Plug>GitGutterTextObjectOuterPending	plugged/vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>GitGutterTextObjectOuterPending :<C-U>call gitgutter#hunk#text_object(0)/;"	m
<Plug>GitGutterTextObjectOuterVisual	plugged/vim-gitgutter/plugin/gitgutter.vim	/^xnoremap <silent> <Plug>GitGutterTextObjectOuterVisual  :<C-U>call gitgutter#hunk#text_object(0)/;"	m
<Plug>GitGutterUndoHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterUndoHunk    :GitGutterUndoHunk<CR>$/;"	m
<Plug>GoldenViewNext	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^nnoremap <Plug>GoldenViewNext$/;"	m
<Plug>GoldenViewPrevious	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^nnoremap <Plug>GoldenViewPrevious$/;"	m
<Plug>GoldenViewResize	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^nnoremap <Plug>GoldenViewResize$/;"	m
<Plug>GoldenViewSplit	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^nnoremap <Plug>GoldenViewSplit$/;"	m
<Plug>GoldenViewSwitchMain	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^nnoremap <Plug>GoldenViewSwitchMain$/;"	m
<Plug>GoldenViewSwitchToggle	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^nnoremap <Plug>GoldenViewSwitchToggle$/;"	m
<Plug>GoldenViewSwitchWithLargest	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^nnoremap <Plug>GoldenViewSwitchWithLargest$/;"	m
<Plug>GoldenViewSwitchWithSmallest	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^nnoremap <Plug>GoldenViewSwitchWithSmallest$/;"	m
<Plug>ToggleGoldenViewAutoResize	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^nnoremap <Plug>ToggleGoldenViewAutoResize$/;"	m
<Plug>_	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^  inoremap <silent> <Plug>_$/;"	m
<S-F8>	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^    nmap <silent> <S-F8> <Plug>GoldenViewSwitchToggle$/;"	m
<cr>	autoload/plug.vim	/^    nnoremap <silent> <buffer> <cr> :silent! call <SID>preview_commit()<cr>$/;"	m
<cr>	plugged/nerdtree/lib/nerdtree/creator.vim	/^    nnoremap <silent> <buffer> <cr> :call nerdtree#ui_glue#invokeKeyMap(g:NERDTreeMapActivateNod/;"	m
<leader>b	config.d/tagbar.vim	/^nmap <leader>b :TagbarToggle<CR>$/;"	m
<leader>ch	config.d/bindings.vim	/^nnoremap <silent> <leader>ch :CloseHiddenBuffers<CR>	 " Close hidden buffers$/;"	m
<leader>f	config.d/phpcs.vim	/^nnoremap <silent><leader>f :call PhpCsFixerFixFile()<CR>$/;"	m
<leader>gn	config.d/goldenratio.vim	/^nmap <silent> <leader>gn <Plug>GoldenViewNext$/;"	m
<leader>gp	config.d/goldenratio.vim	/^nmap <silent> <leader>gp <Plug>GoldenViewPrevious$/;"	m
<leader>gr	config.d/goldenratio.vim	/^nmap <silent> <leader>gr <Plug>GoldenViewResize$/;"	m
<leader>gs	config.d/goldenratio.vim	/^nmap <silent> <leader>gs <Plug>GoldenViewSplit$/;"	m
<leader>n	config.d/nerdtree.vim	/^noremap <leader>n :NERDTreeToggle<CR>$/;"	m
<leader>nf	config.d/nerdtree.vim	/^noremap <leader>nf :NERDTreeFind<CR>$/;"	m
<leader>pcd	plugged/vim-php-cs-fixer/plugin/php_cs_fixer.vim	/^    nnoremap <silent><leader>pcd :call PhpCsFixerFixDirectory()<CR>$/;"	m
<leader>pcf	plugged/vim-php-cs-fixer/plugin/php_cs_fixer.vim	/^    nnoremap <silent><leader>pcf :call PhpCsFixerFixFile()<CR>$/;"	m
<leader>sh	config.d/bindings.vim	/^nnoremap <silent> <leader>sh :terminal<CR>               " Open terminal$/;"	m
<plug>(-fzf-vim-do)	plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-vim-do) :execute g:__fzf_command<cr>$/;"	m
<plug>(fzf-complete-buffer-line)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-buffer-line) fzf#vim#complete#buffer_line()$/;"	m
<plug>(fzf-complete-file)	plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path("find . -path '*\/\\.*' -/;"	m
<plug>(fzf-complete-file)	plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path('dir \/s\/b\/a:-d')$/;"	m
<plug>(fzf-complete-file-ag)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-file-ag)     fzf#vim#complete#path('ag -l -g ""')$/;"	m
<plug>(fzf-complete-line)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-line)        fzf#vim#complete#line()$/;"	m
<plug>(fzf-complete-path)	plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path("find . -path '*\/\\.*' -/;"	m
<plug>(fzf-complete-path)	plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path('dir \/s\/b')$/;"	m
<plug>(fzf-complete-word)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-word)        fzf#vim#complete#word()$/;"	m
<plug>(fzf-maps-i)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <silent> <plug>(fzf-maps-i) <c-o>:call fzf#vim#maps('i', 0)<cr>$/;"	m
<plug>(fzf-maps-n)	plugged/fzf.vim/plugin/fzf.vim	/^nnoremap <silent> <plug>(fzf-maps-n) :<c-u>call fzf#vim#maps('n', 0)<cr>$/;"	m
<plug>(fzf-maps-o)	plugged/fzf.vim/plugin/fzf.vim	/^onoremap <silent> <plug>(fzf-maps-o) <c-c>:<c-u>call fzf#vim#maps('o', 0)<cr>$/;"	m
<plug>(fzf-maps-x)	plugged/fzf.vim/plugin/fzf.vim	/^xnoremap <silent> <plug>(fzf-maps-x) :<c-u>call fzf#vim#maps('x', 0)<cr>$/;"	m
<plug>(startify-open-buffers)	plugged/vim-startify/plugin/startify.vim	/^nnoremap <silent><plug>(startify-open-buffers) :<c-u>call startify#open_buffers()<cr>$/;"	m
<plug>NERDCommenterAltDelims	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <plug>NERDCommenterAltDelims :call <SID>SwitchToAlternativeDelimiters(1)<cr>$/;"	m
<plug>NERDCommenterInsert	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^inoremap <silent> <plug>NERDCommenterInsert <SPACE><BS><ESC>:call NERDComment('i', "insert")<CR>$/;"	m
A	plugged/vim-php-cs-fixer/tests/fixtures/misc/single_import_per_statement,ordered_imports.php	/^use some\\{Z, A};$/;"	a	typeref:unknown:some\\A
A	plugged/vim-php-cs-fixer/tests/results/misc/single_import_per_statement,ordered_imports.php	/^use some\\{Z, A};$/;"	a	typeref:unknown:some\\A
ALLSPHINXOPTS	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^ALLSPHINXOPTS   = -d $(BUILDDIR)\/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .$/;"	m
ALLSPHINXOPTS	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/make.bat	/^	set ALLSPHINXOPTS=-D latex_paper_size=%PAPER% %ALLSPHINXOPTS%$/;"	v
ALLSPHINXOPTS	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/make.bat	/^set ALLSPHINXOPTS=-d %BUILDDIR%\/doctrees %SPHINXOPTS% .$/;"	v
Aaa	plugged/vim-php-cs-fixer/tests/fixtures/misc/class_definition,no_trailing_whitespace.php	/^class Aaa implements$/;"	c
Aaa	plugged/vim-php-cs-fixer/tests/results/misc/class_definition,no_trailing_whitespace.php	/^class Aaa implements$/;"	c
Abc	plugged/vim-php-cs-fixer/tests/fixtures/misc/imports.php	/^use Abc, \\Barr, \\Zzzz;$/;"	a	namespace:Acme	typeref:unknown:Abc
Abc	plugged/vim-php-cs-fixer/tests/results/misc/imports.php	/^use Abc;$/;"	a	namespace:Acme	typeref:unknown:Abc
AccessSpecifier	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class AccessSpecifier(BaseEnumeration):$/;"	c
AccessSpecifier	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class AccessSpecifier(BaseEnumeration):$/;"	c
Acme	plugged/vim-php-cs-fixer/tests/fixtures/misc/imports.php	/^namespace Acme;$/;"	n
Acme	plugged/vim-php-cs-fixer/tests/results/misc/imports.php	/^namespace Acme;$/;"	n
AddHighlighting	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^augroup AddHighlighting$/;"	a
AirlineRefresh	plugged/vim-airline/plugin/airline.vim	/^command! -bar AirlineRefresh call s:airline_refresh()$/;"	c
AirlineTheme	plugged/vim-airline/plugin/airline.vim	/^command! -bar -nargs=? -complete=customlist,<sid>get_airline_themes AirlineTheme call <sid>airli/;"	c
AirlineToggle	plugged/vim-airline/plugin/airline.vim	/^command! -bar AirlineToggle call s:airline_toggle()$/;"	c
AirlineToggleWhitespace	plugged/vim-airline/plugin/airline.vim	/^command! -bar AirlineToggleWhitespace call airline#extensions#whitespace#toggle()$/;"	c
AirlineWebDevIcons	plugged/vim-devicons/plugin/webdevicons.vim	/^function! AirlineWebDevIcons(...)$/;"	f
Align	plugged/vim-gitgutter/test/runner.vim	/^function Align(left, right)$/;"	f
Api	plugged/vdebug/pythonx/vdebug/dbgp.py	/^class Api:$/;"	c
ApiTest	plugged/vdebug/tests/test_dbgp_api.py	/^class ApiTest(unittest.TestCase):$/;"	c
ArgumentsIterator	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^        class ArgumentsIterator(collections.Sequence):$/;"	c	member:Type.argument_types	file:
ArgumentsIterator	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^        class ArgumentsIterator(collections.Sequence):$/;"	c	member:Type.argument_types	file:
AssertNeomakeMessage	plugged/neomake/tests/include/init.vim	/^command! -nargs=+ AssertNeomakeMessage call s:AssertNeomakeMessage(<args>)$/;"	c
AssertNeomakeMessageAbsent	plugged/neomake/tests/include/init.vim	/^command! -nargs=+ AssertNeomakeMessageAbsent call s:AssertNeomakeMessageAbsent(<args>)$/;"	c
Availability	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    class Availability:$/;"	c	class:CompletionString
Availability	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    class Availability:$/;"	c	class:CompletionString
BASE_DIR	plugged/deoplete.nvim/test/conftest.py	/^BASE_DIR = os.path.dirname(os.path.dirname(__file__))$/;"	v
BLUE	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang/profiler.py	/^    BLUE = '\\033[1;44m'$/;"	v	class:Colors
BUILDDIR	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^BUILDDIR      = _build$/;"	m
BUILDDIR	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/make.bat	/^set BUILDDIR=_build$/;"	v
BackgroundListener	plugged/vdebug/pythonx/vdebug/listener.py	/^class BackgroundListener:$/;"	c
BackgroundSocketCreator	plugged/vdebug/pythonx/vdebug/connection.py	/^class BackgroundSocketCreator(threading.Thread):$/;"	c
Bar	plugged/vim-php-cs-fixer/tests/fixtures/misc/imports.php	/^use BBB\\Bar;$/;"	a	namespace:Acme	typeref:unknown:BBB\\Bar
Bar	plugged/vim-php-cs-fixer/tests/results/misc/imports.php	/^use BBB\\Bar;$/;"	a	namespace:Acme	typeref:unknown:BBB\\Bar
Barr	plugged/vim-php-cs-fixer/tests/fixtures/misc/imports.php	/^use Abc, \\Barr, \\Zzzz;$/;"	a	namespace:Acme	typeref:unknown:\\Barr
Barr	plugged/vim-php-cs-fixer/tests/results/misc/imports.php	/^use \\Barr;$/;"	a	namespace:Acme	typeref:unknown:\\Barr
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/base.py	/^class Base(LoggingMixin):$/;"	c
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^class Base(LoggingMixin):$/;"	c
BaseEnumeration	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class BaseEnumeration:$/;"	c
BaseEnumeration	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class BaseEnumeration:$/;"	c
Bookmark	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=? Bookmark :call nerdtree#ui_glue#bookmarkNode('<args>')$/;"	c
BookmarkToRoot	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=+ BookmarkToRoot cal/;"	c
Breakpoint	plugged/vdebug/plugin/vdebug.vim	/^command! -nargs=? -complete=customlist,s:BreakpointTypes Breakpoint python3 debugger.set_breakpo/;"	c
Breakpoint	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^class Breakpoint:$/;"	c
BreakpointError	plugged/vdebug/pythonx/vdebug/error.py	/^class BreakpointError(Exception):$/;"	c
BreakpointRemove	plugged/vdebug/plugin/vdebug.vim	/^command! -nargs=? BreakpointRemove python3 debugger.remove_breakpoint(<q-args>)$/;"	c
BreakpointSetResponse	plugged/vdebug/pythonx/vdebug/dbgp.py	/^class BreakpointSetResponse(Response):$/;"	c
BreakpointTest	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^class BreakpointTest(unittest.TestCase):$/;"	c
BreakpointWindow	plugged/vdebug/plugin/vdebug.vim	/^command! BreakpointWindow python3 debugger.toggle_breakpoint_window()$/;"	c
BreakpointWindow	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^class BreakpointWindow(Window):$/;"	c
BufferNotFound	plugged/vdebug/rubylib/vdebug.rb	/^  class BufferNotFound < StandardError; end;$/;"	c	class:Vdebug
Bundling EditorConfig Python Core with Plugin	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/plugins.rst	/^Bundling EditorConfig Python Core with Plugin$/;"	s	chapter:Writing Plugins
Bundling as a Submodule in Git	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/plugins.rst	/^Bundling as a Submodule in Git$/;"	S	section:Bundling EditorConfig Python Core with Plugin
Bundling as a Subtree in Git	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/plugins.rst	/^Bundling as a Subtree in Git$/;"	S	section:Bundling EditorConfig Python Core with Plugin
CBLACK	plugged/deoplete-clang/mk/color.mk	/^CBLACK := \\x1b[30;01m$/;"	m
CBLUE	plugged/deoplete-clang/mk/color.mk	/^CBLUE := \\x1b[34;01m$/;"	m
CCRStructure	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class CCRStructure(Structure):$/;"	c
CCRStructure	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class CCRStructure(Structure):$/;"	c
CCYAN	plugged/deoplete-clang/mk/color.mk	/^CCYAN := \\x1b[36;01m$/;"	m
CDPATH	plugged/neomake/Makefile	/^CDPATH:=$/;"	m
CGREEN	plugged/deoplete-clang/mk/color.mk	/^CGREEN := \\x1b[32;01m$/;"	m
CLANG_DATA	plugged/deoplete-clang/Makefile	/^CLANG_DATA := ${RPLUGIN_PATH}\/deoplete_clang\/clang_data.py$/;"	m
CMAGENTA	plugged/deoplete-clang/mk/color.mk	/^CMAGENTA := \\x1b[35;01m$/;"	m
COVERAGE_VADER_ARGS	plugged/neomake/Makefile	/^testcoverage: COVERAGE_VADER_ARGS:=tests\/main.vader $(wildcard tests\/isolated\/*.vader)$/;"	m
CRED	plugged/deoplete-clang/mk/color.mk	/^CRED := \\x1b[31;01m$/;"	m
CRESET	plugged/deoplete-clang/mk/color.mk	/^CRESET := \\x1b[0m$/;"	m
CSCOPE_ARGS	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -R$/;"	v
CSCOPE_ARGS	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -i %TAGS_FILE%.files$/;"	v
CSCOPE_ARGS	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=$/;"	v
CSCOPE_EXE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_EXE=%~2$/;"	v
CSCOPE_EXE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_EXE=cscope$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% --append "%UPDATED_SOURCE%"$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% -L %TAGS_FILE%.files$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% "%PROJECT_ROOT%"$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% %~2$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --exclude=%2$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --options=%2$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_ARGS=$/;"	v
CTAGS_EXE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_EXE=%~2$/;"	v
CTAGS_EXE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_EXE=ctags$/;"	v
CWHITE	plugged/deoplete-clang/mk/color.mk	/^CWHITE := \\x1b[37;01m$/;"	m
CYAN	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang/profiler.py	/^    CYAN = '\\033[1;46m'$/;"	v	class:Colors
CYELLOW	plugged/deoplete-clang/mk/color.mk	/^CYELLOW := \\x1b[33;01m$/;"	m
CachedProperty	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class CachedProperty(object):$/;"	c
CachedProperty	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class CachedProperty(object):$/;"	c
CallBreakpoint	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^class CallBreakpoint(Breakpoint):$/;"	c
CallBreakpointTest	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^class CallBreakpointTest(unittest.TestCase):$/;"	c
CallNeomake	plugged/neomake/tests/include/init.vim	/^command! -nargs=* CallNeomake call neomake#Make(<args>)$/;"	c
Cargo	plugged/rust.vim/plugin/rust.vim	/^command! -nargs=* Cargo call cargo#cmd(<q-args>)$/;"	c
Cbench	plugged/rust.vim/plugin/rust.vim	/^command! -nargs=* Cbench call cargo#bench(<q-args>)$/;"	c
Cbuild	plugged/rust.vim/plugin/rust.vim	/^command! -nargs=* Cbuild call cargo#build(<q-args>)$/;"	c
Cclean	plugged/rust.vim/plugin/rust.vim	/^command! -nargs=* Cclean call cargo#clean(<q-args>)$/;"	c
Cdoc	plugged/rust.vim/plugin/rust.vim	/^command! -nargs=* Cdoc call cargo#doc(<q-args>)$/;"	c
Checking for Final Newline	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/insert_final_newline.rst	/^Checking for Final Newline$/;"	s	chapter:Insert Final Newline Property
Child	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^class Child(logger.LoggingMixin):$/;"	c
Cinit	plugged/rust.vim/plugin/rust.vim	/^command! -nargs=* Cinit call cargo#init(<q-args>)$/;"	c
Cinstall	plugged/rust.vim/plugin/rust.vim	/^command! -nargs=* Cinstall call cargo#install(<q-args>)$/;"	c
ClangObject	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class ClangObject(object):$/;"	c
ClangObject	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class ClangObject(object):$/;"	c
ClearAllBookmarks	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 ClearAllBookmarks call g:NERDTreeBookmark.ClearAll() <bar> call b:/;"	c
ClearBookmarks	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=* ClearBookmarks cal/;"	c
CloseHiddenBuffers	config.d/commands.vim	/^command! CloseHiddenBuffers call s:CloseHiddenBuffers()$/;"	c
CmdNotImplementedError	plugged/vdebug/pythonx/vdebug/dbgp.py	/^class CmdNotImplementedError(Exception):$/;"	c
Cnew	plugged/rust.vim/plugin/rust.vim	/^command! -nargs=* Cnew call cargo#new(<q-args>)$/;"	c
CodeCompletionResult	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class CodeCompletionResult(Structure):$/;"	c
CodeCompletionResult	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class CodeCompletionResult(Structure):$/;"	c
CodeCompletionResults	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class CodeCompletionResults(ClangObject):$/;"	c
CodeCompletionResults	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class CodeCompletionResults(ClangObject):$/;"	c
Colors	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang/profiler.py	/^class Colors(object):$/;"	c
Command Line Usage	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/command_line_usage.rst	/^Command Line Usage$/;"	c
CompilationDatabase	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class CompilationDatabase(ClangObject):$/;"	c
CompilationDatabase	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class CompilationDatabase(ClangObject):$/;"	c
CompilationDatabaseError	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class CompilationDatabaseError(Exception):$/;"	c
CompilationDatabaseError	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class CompilationDatabaseError(Exception):$/;"	c
CompileCommand	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class CompileCommand(object):$/;"	c
CompileCommand	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class CompileCommand(object):$/;"	c
CompileCommands	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class CompileCommands(object):$/;"	c
CompileCommands	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class CompileCommands(object):$/;"	c
CompilerSet	plugged/rust.vim/compiler/cargo.vim	/^	command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/rust.vim/compiler/rustc.vim	/^	command -nargs=* CompilerSet setlocal <args>$/;"	c
CompletionChunk	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class CompletionChunk:$/;"	c
CompletionChunk	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class CompletionChunk:$/;"	c
CompletionString	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class CompletionString(ClangObject):$/;"	c
CompletionString	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class CompletionString(ClangObject):$/;"	c
ConditionalBreakpoint	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^class ConditionalBreakpoint(LineBreakpoint):$/;"	c
ConditionalBreakpointTest	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^class ConditionalBreakpointTest(unittest.TestCase):$/;"	c
Config	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class Config:$/;"	c
Config	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class Config:$/;"	c
ConnectionHandler	plugged/vdebug/pythonx/vdebug/connection.py	/^class ConnectionHandler:$/;"	c
ConnectionTest	plugged/vdebug/tests/test_connection.py	/^class ConnectionTest(unittest.TestCase):$/;"	c
ContextGetAlternateTest	plugged/vdebug/tests/test_dbgp_response.py	/^class ContextGetAlternateTest(unittest.TestCase):$/;"	c
ContextGetResponse	plugged/vdebug/pythonx/vdebug/dbgp.py	/^class ContextGetResponse(Response):$/;"	c
ContextGetResponseRenderer	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^class ContextGetResponseRenderer(ResponseRenderer):$/;"	c
ContextGetTest	plugged/vdebug/tests/test_dbgp_response.py	/^class ContextGetTest(unittest.TestCase):$/;"	c
ContextNamesResponse	plugged/vdebug/pythonx/vdebug/dbgp.py	/^class ContextNamesResponse(Response):$/;"	c
ContextProperty	plugged/vdebug/pythonx/vdebug/dbgp.py	/^class ContextProperty:$/;"	c
ContextPropertyAltTest	plugged/vdebug/tests/test_dbgp_context_property.py	/^class ContextPropertyAltTest(unittest.TestCase):$/;"	c
ContextPropertyDefaultTest	plugged/vdebug/tests/test_dbgp_context_property.py	/^class ContextPropertyDefaultTest(unittest.TestCase):$/;"	c
Cpublish	plugged/rust.vim/plugin/rust.vim	/^command! -nargs=* Cpublish call cargo#publish(<q-args>)$/;"	c
Crun	plugged/rust.vim/plugin/rust.vim	/^command! -nargs=* Crun call cargo#run(<q-args>)$/;"	c
Csearch	plugged/rust.vim/plugin/rust.vim	/^command! -nargs=* Csearch  call cargo#search(<q-args>)$/;"	c
Ctest	plugged/rust.vim/plugin/rust.vim	/^command! -nargs=* Ctest call cargo#test(<q-args>)$/;"	c
Cupdate	plugged/rust.vim/plugin/rust.vim	/^command! -nargs=* Cupdate call cargo#update(<q-args>)$/;"	c
CurrentLineWhitespaceOff	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! -nargs=* CurrentLineWhitespaceOff call <SID>CurrentLineWhitespaceOff( <f-args> )$/;"	c
CurrentLineWhitespaceOn	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! CurrentLineWhitespaceOn call <SID>CurrentLineWhitespaceOn()$/;"	c
Cursor	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class Cursor(Structure):$/;"	c
Cursor	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class Cursor(Structure):$/;"	c
CursorEvalEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class CursorEvalEvent(Event):$/;"	c
CursorKind	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class CursorKind(BaseEnumeration):$/;"	c
CursorKind	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class CursorKind(BaseEnumeration):$/;"	c
D	autoload/plug.vim	/^  nnoremap <silent> <buffer> D  :PlugDiff<cr>$/;"	m
DBGPError	plugged/vdebug/pythonx/vdebug/dbgp.py	/^class DBGPError(Exception):$/;"	c
DB_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set DB_FILE=%~2$/;"	v
DB_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set DB_FILE=cscope.out$/;"	v
DECL_ONE	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/INPUTS/parse_arguments.c	/^int DECL_ONE = 1;$/;"	v	typeref:typename:int
DECL_ONE	plugged/deoplete-clang/tests/clang/tests/cindex/INPUTS/parse_arguments.c	/^int DECL_ONE = 1;$/;"	v	typeref:typename:int
DECL_TWO	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/INPUTS/parse_arguments.c	/^int DECL_TWO = 2;$/;"	v	typeref:typename:int
DECL_TWO	plugged/deoplete-clang/tests/clang/tests/cindex/INPUTS/parse_arguments.c	/^int DECL_TWO = 2;$/;"	v	typeref:typename:int
DEOPLETE_CLANG	plugged/deoplete-clang/Makefile	/^DEOPLETE_CLANG := ${RPLUGIN_PATH}${MODULE_NAME}$/;"	m
DEP_PLUGINS	plugged/neomake/Makefile	/^DEP_PLUGINS=$(TESTS_VADER_DIR) $(TESTS_FUGITIVE_DIR)$/;"	m
DOCKER	plugged/neomake/Makefile	/^    -v $(PWD):\/testplugin \\$/;"	t
DOCKER	plugged/neomake/Makefile	/^DOCKER=docker run $(DOCKER_STREAMS) --rm \\$/;"	m
DOCKER_IMAGE	plugged/neomake/Makefile	/^DOCKER_IMAGE:=$(if $(NEOMAKE_DOCKER_IMAGE),$(NEOMAKE_DOCKER_IMAGE),$(DOCKER_REPO):$(DOCKER_TAG))$/;"	m
DOCKER_MAKE_TARGET	plugged/neomake/Makefile	/^_docker_test: DOCKER_MAKE_TARGET=$(DOCKER_MAKE_TEST_TARGET) \\$/;"	m
DOCKER_MAKE_TARGET	plugged/neomake/Makefile	/^docker_check: DOCKER_MAKE_TARGET=check_docker$/;"	m
DOCKER_MAKE_TEST_TARGET	plugged/neomake/Makefile	/^docker_test: DOCKER_MAKE_TEST_TARGET:=test$/;"	m
DOCKER_MAKE_TEST_TARGET	plugged/neomake/Makefile	/^docker_test_interactive: DOCKER_MAKE_TEST_TARGET:=test_interactive$/;"	m
DOCKER_REPO	plugged/neomake/Makefile	/^DOCKER_REPO:=neomake\/vims-for-tests$/;"	m
DOCKER_RUN	plugged/neomake/Makefile	/^docker_make: DOCKER_RUN=make $(DOCKER_MAKE_TARGET)$/;"	m
DOCKER_STREAMS	plugged/neomake/Makefile	/^DOCKER_STREAMS:=-ti$/;"	m
DOCKER_STREAMS	plugged/neomake/Makefile	/^docker_test: DOCKER_STREAMS:=-t$/;"	m
DOCKER_STREAMS	plugged/neomake/Makefile	/^docker_test_interactive: DOCKER_STREAMS:=-ti$/;"	m
DOCKER_TAG	plugged/neomake/Makefile	/^DOCKER_TAG:=23$/;"	m
DOCKER_VIM	plugged/neomake/Makefile	/^_docker_test: DOCKER_VIM:=vim-master$/;"	m
DOCKER_VIMS	plugged/neomake/Makefile	/^DOCKER_VIMS:=vim73 vim74-trusty vim74-xenial vim-8.0.586 vim-master neovim-v0.1.7 neovim-v0.2.0 /;"	m
DebuggerInterface	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^class DebuggerInterface:$/;"	c
Deoplete	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^class Deoplete(logger.LoggingMixin):$/;"	c
DeopleteHandlers	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    class DeopleteHandlers(object):$/;"	c
DeopleteLogFilter	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^class DeopleteLogFilter(logging.Filter):$/;"	c
DetachEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class DetachEvent(Event):$/;"	c
DiagIterator	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^        class DiagIterator:$/;"	c	member:TranslationUnit.diagnostics	file:
DiagIterator	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^        class DiagIterator:$/;"	c	member:TranslationUnit.diagnostics	file:
Diagnostic	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class Diagnostic(object):$/;"	c
Diagnostic	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class Diagnostic(object):$/;"	c
DiagnosticsItr	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^        class DiagnosticsItr:$/;"	c	member:CodeCompletionResults.diagnostics	file:
DiagnosticsItr	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^        class DiagnosticsItr:$/;"	c	member:CodeCompletionResults.diagnostics	file:
DictCacheItem	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^DictCacheItem = namedtuple('DictCacheItem', 'mtime candidates')$/;"	v
DisableGoldenViewAutoResize	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^command! -nargs=0 DisableGoldenViewAutoResize$/;"	c
DisableStripWhitespaceOnSave	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! DisableStripWhitespaceOnSave call <SID>DisableStripWhitespaceOnSave()$/;"	c
DisableWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! DisableWhitespace call <SID>DisableWhitespace()$/;"	c
Discovering EditorConfig properties	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/command_line_usage.rst	/^Discovering EditorConfig properties$/;"	s	chapter:Command Line Usage
Discovering EditorConfig properties	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/usage.rst	/^Discovering EditorConfig properties$/;"	s	chapter:Usage
Dispatcher	plugged/vdebug/pythonx/vdebug/event.py	/^class Dispatcher:$/;"	c
DoneParseArgs	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:DoneParseArgs$/;"	l
DoneParseArgs	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:DoneParseArgs$/;"	l
ENDC	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang/profiler.py	/^    ENDC = '\\033[0m'$/;"	v	class:Colors
ERROR_CANNOTLOADDATABASE	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    ERROR_CANNOTLOADDATABASE = 1$/;"	v	class:CompilationDatabaseError
ERROR_CANNOTLOADDATABASE	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    ERROR_CANNOTLOADDATABASE = 1$/;"	v	class:CompilationDatabaseError
ERROR_INVALID_TU	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    ERROR_INVALID_TU = 3$/;"	v	class:TranslationUnitSaveError
ERROR_INVALID_TU	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    ERROR_INVALID_TU = 3$/;"	v	class:TranslationUnitSaveError
ERROR_TRANSLATION_ERRORS	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    ERROR_TRANSLATION_ERRORS = 2$/;"	v	class:TranslationUnitSaveError
ERROR_TRANSLATION_ERRORS	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    ERROR_TRANSLATION_ERRORS = 2$/;"	v	class:TranslationUnitSaveError
ERROR_UNKNOWN	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    ERROR_UNKNOWN = 0$/;"	v	class:CompilationDatabaseError
ERROR_UNKNOWN	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    ERROR_UNKNOWN = 1$/;"	v	class:TranslationUnitSaveError
ERROR_UNKNOWN	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    ERROR_UNKNOWN = 0$/;"	v	class:CompilationDatabaseError
ERROR_UNKNOWN	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    ERROR_UNKNOWN = 1$/;"	v	class:TranslationUnitSaveError
ET	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    import elementtree.ElementTree as ET$/;"	I
ET	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    import xml.etree.ElementTree as ET$/;"	I
ET	plugged/vdebug/tests/test_dbgp_context_property.py	/^import xml.etree.ElementTree as ET$/;"	I
ET	plugged/vdebug/tests/test_dbgp_eval_property.py	/^import xml.etree.ElementTree as ET$/;"	I
EVL102.l	plugged/neomake/Makefile	/^VIMLINT_OPTIONS=-u -e EVL102.l:_=1$/;"	t
EditorConfig Project	plugged/editorconfig-vim/plugin/editorconfig-core-py/README.rst	/^EditorConfig Project$/;"	c
EditorConfig Python Core	plugged/editorconfig-vim/plugin/editorconfig-core-py/README.rst	/^EditorConfig Python Core$/;"	c
EditorConfig Python Core -- Process EditorConfig Files With Python	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/index.rst	/^EditorConfig Python Core -- Process EditorConfig Files With Python$/;"	c
EditorConfigError	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/exceptions.py	/^class EditorConfigError(Exception):$/;"	c
EditorConfigHandler	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/handler.py	/^class EditorConfigHandler(object):$/;"	c
EditorConfigParser	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/ini.py	/^class EditorConfigParser(object):$/;"	c
EditorConfigReload	plugged/editorconfig-vim/plugin/editorconfig.vim	/^command! EditorConfigReload call s:UseConfigFiles() " Reload EditorConfig files$/;"	c
EnableGoldenViewAutoResize	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^command! -nargs=0 EnableGoldenViewAutoResize$/;"	c
EnableStripWhitespaceOnSave	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! EnableStripWhitespaceOnSave call <SID>EnableStripWhitespaceOnSave()$/;"	c
EnableWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! EnableWhitespace call <SID>EnableWhitespace()$/;"	c
Environment	plugged/vdebug/pythonx/vdebug/util.py	/^class Environment:$/;"	c
EnvironmentTest	plugged/vdebug/tests/test_util_environment.py	/^class EnvironmentTest(unittest.TestCase):$/;"	c
Error	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    Error   = 3$/;"	v	class:Diagnostic
Error	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    Error   = 3$/;"	v	class:Diagnostic
EvalError	plugged/vdebug/pythonx/vdebug/dbgp.py	/^class EvalError(Exception):$/;"	c
EvalEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class EvalEvent(Event):$/;"	c
EvalProperty	plugged/vdebug/pythonx/vdebug/dbgp.py	/^class EvalProperty(ContextProperty):$/;"	c
EvalPropertyTest	plugged/vdebug/tests/test_dbgp_eval_property.py	/^class EvalPropertyTest(unittest.TestCase):$/;"	c
EvalResponse	plugged/vdebug/pythonx/vdebug/dbgp.py	/^class EvalResponse(ContextGetResponse):$/;"	c
Event	plugged/vdebug/pythonx/vdebug/event.py	/^class Event:$/;"	c
EventError	plugged/vdebug/pythonx/vdebug/error.py	/^class EventError(Exception):$/;"	c
Exception	plugged/vim-gitgutter/test/runner.vim	/^function Exception()$/;"	f
Exception handling example	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/usage.rst	/^Exception handling example$/;"	S	section:Handling Exceptions
ExceptionBreakpoint	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^class ExceptionBreakpoint(Breakpoint):$/;"	c
ExceptionBreakpointTest	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^class ExceptionBreakpointTest(unittest.TestCase):$/;"	c
ExceptionHandler	plugged/vdebug/pythonx/vdebug/util.py	/^class ExceptionHandler:$/;"	c
Exceptions module reference	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/usage.rst	/^Exceptions module reference$/;"	S	section:Handling Exceptions
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD_IS_ABSOLUTE=1$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD_IS_ABSOLUTE=0$/;"	v
FILE_TEST_TARGET	plugged/neomake/Makefile	/^FILE_TEST_TARGET=test$(TEST_VIM)$/;"	m
Fatal	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    Fatal   = 4$/;"	v	class:Diagnostic
Fatal	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    Fatal   = 4$/;"	v	class:Diagnostic
FeatureGetResponse	plugged/vdebug/pythonx/vdebug/dbgp.py	/^class FeatureGetResponse(Response):$/;"	c
FeatureResponseTest	plugged/vdebug/tests/test_dbgp_response.py	/^class FeatureResponseTest(unittest.TestCase):$/;"	c
File	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class File(ClangObject):$/;"	c
File	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class File(ClangObject):$/;"	c
FileInclusion	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class FileInclusion(object):$/;"	c
FileInclusion	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class FileInclusion(object):$/;"	c
FileLogger	plugged/vdebug/pythonx/vdebug/log.py	/^class FileLogger(Logger):$/;"	c
FileLoggerTest	plugged/vdebug/tests/test_log.py	/^class FileLoggerTest(unittest.TestCase):$/;"	c
FilePath	plugged/vdebug/pythonx/vdebug/util.py	/^class FilePath:$/;"	c
FilePathError	plugged/vdebug/pythonx/vdebug/error.py	/^class FilePathError(Exception):$/;"	c
Filename	plugged/neosnippet.vim/autoload/neosnippet/init.vim	/^    function! Filename(...) abort$/;"	f
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_paren.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_paren.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_abbr.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_kind.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_menu.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_fuzzy.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_head.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_length.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_word.py	/^class Filter(Base):$/;"	c
Filter	plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^class Filter(Base):$/;"	c
Finding Trailing Whitespace	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/trim_trailing_whitespace.rst	/^Finding Trailing Whitespace$/;"	s	chapter:Trim Trailing Whitespace Property
FixIt	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class FixIt(object):$/;"	c
FixIt	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class FixIt(object):$/;"	c
FixItIterator	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^        class FixItIterator:$/;"	c	member:Diagnostic.fixits	file:
FixItIterator	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^        class FixItIterator:$/;"	c	member:Diagnostic.fixits	file:
Foo	plugged/neomake/tests/fixtures/vim/func-with-errors.vim	/^function! Foo()$/;"	f
Foo	plugged/vim-php-cs-fixer/tests/fixtures/misc/imports.php	/^use \\Foo;$/;"	a	namespace:Acme	typeref:unknown:\\Foo
Foo	plugged/vim-php-cs-fixer/tests/fixtures/misc/phpdocs.test.php	/^class Foo {$/;"	c
Foo	plugged/vim-php-cs-fixer/tests/results/misc/imports.php	/^use \\Foo;$/;"	a	namespace:Acme	typeref:unknown:\\Foo
Foo	plugged/vim-php-cs-fixer/tests/results/misc/phpdocs.test.php	/^class Foo$/;"	c
ForegroundListener	plugged/vdebug/pythonx/vdebug/listener.py	/^class ForegroundListener:$/;"	c
FriendlyName	plugged/vim-gitgutter/test/runner.vim	/^function FriendlyName(test_name)$/;"	f
GREEN	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang/profiler.py	/^    GREEN = '\\033[1;42m'$/;"	v	class:Colors
GetContextEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class GetContextEvent(Event):$/;"	c
GetRustIndent	plugged/rust.vim/indent/rust.vim	/^function GetRustIndent(lnum)$/;"	f
Getting Help	plugged/editorconfig-vim/plugin/editorconfig-core-py/README.rst	/^Getting Help$/;"	c
GitGutter	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutter    call gitgutter#process_buffer(bufnr(''), 1)$/;"	c
GitGutterAll	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterAll call gitgutter#all(1)$/;"	c
GitGutterDebug	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterDebug call gitgutter#debug#debug()$/;"	c
GitGutterDisable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterDisable call gitgutter#disable()$/;"	c
GitGutterEnable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterEnable  call gitgutter#enable()$/;"	c
GitGutterGetHunkSummary	plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunkSummary()$/;"	f
GitGutterGetHunks	plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunks()$/;"	f
GitGutterLineHighlightsDisable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsDisable call gitgutter#highlight#line_disable()$/;"	c
GitGutterLineHighlightsEnable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsEnable  call gitgutter#highlight#line_enable()$/;"	c
GitGutterLineHighlightsToggle	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsToggle  call gitgutter#highlight#line_toggle()$/;"	c
GitGutterNextHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -count=1 GitGutterNextHunk call gitgutter#hunk#next_hunk(<count>)$/;"	c
GitGutterPrevHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -count=1 GitGutterPrevHunk call gitgutter#hunk#prev_hunk(<count>)$/;"	c
GitGutterPreviewHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterPreviewHunk call gitgutter#hunk#preview()$/;"	c
GitGutterSignsDisable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsDisable call gitgutter#sign#disable()$/;"	c
GitGutterSignsEnable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsEnable  call gitgutter#sign#enable()$/;"	c
GitGutterSignsToggle	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsToggle  call gitgutter#sign#toggle()$/;"	c
GitGutterStageHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterStageHunk   call gitgutter#hunk#stage()$/;"	c
GitGutterToggle	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterToggle  call gitgutter#toggle()$/;"	c
GitGutterUndoHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterUndoHunk    call gitgutter#hunk#undo()$/;"	c
GoldenView	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^    augroup GoldenView$/;"	a
GoldenView#Diff	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#Diff()$/;"	f
GoldenView#DisableAutoResize	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#DisableAutoResize()$/;"	f
GoldenView#EnableAutoResize	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#EnableAutoResize()$/;"	f
GoldenView#Enter	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#Enter(...)$/;"	f
GoldenView#ExtendProfile	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#ExtendProfile(name, def)$/;"	f
GoldenView#GoldenHeight	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#GoldenHeight(...)$/;"	f
GoldenView#GoldenMinHeight	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#GoldenMinHeight(...)$/;"	f
GoldenView#GoldenMinWidth	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#GoldenMinWidth(...)$/;"	f
GoldenView#GoldenWidth	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#GoldenWidth(...)$/;"	f
GoldenView#Info	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#Info()$/;"	f
GoldenView#Init	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#Init()$/;"	f
GoldenView#IsIgnore	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#IsIgnore()$/;"	f
GoldenView#IsRestore	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#IsRestore()$/;"	f
GoldenView#Leave	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#Leave(...)$/;"	f
GoldenView#ResetResize	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#ResetResize()$/;"	f
GoldenView#Resize	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#Resize(...)$/;"	f
GoldenView#Split	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#Split()$/;"	f
GoldenView#SwitchMain	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#SwitchMain(...)$/;"	f
GoldenView#TextWidth	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#TextWidth(...)$/;"	f
GoldenView#ToggleAutoResize	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#ToggleAutoResize()$/;"	f
GoldenView#Trace	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#Trace(...)$/;"	f
GoldenView#initialize_tab_variable	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! GoldenView#initialize_tab_variable()$/;"	f
GoldenView#zl#list#sort	plugged/GoldenView.Vim/autoload/GoldenView/zl/list.vim	/^function! GoldenView#zl#list#sort(list, expr)$/;"	f
GoldenView#zl#list#sort_by	plugged/GoldenView.Vim/autoload/GoldenView/zl/list.vim	/^function! GoldenView#zl#list#sort_by(list, expr)$/;"	f
GoldenView#zl#list#uniq	plugged/GoldenView.Vim/autoload/GoldenView/zl/list.vim	/^function! GoldenView#zl#list#uniq(list, ...)$/;"	f
GoldenView#zl#list#unique_sort	plugged/GoldenView.Vim/autoload/GoldenView/zl/list.vim	/^function! GoldenView#zl#list#unique_sort(list, ...)$/;"	f
GoldenView#zl#log#debug	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^    function! GoldenView#zl#log#debug(...)$/;"	f
GoldenView#zl#log#debug	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^function! GoldenView#zl#log#debug(...)$/;"	f
GoldenView#zl#log#error	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^    function! GoldenView#zl#log#error(...)$/;"	f
GoldenView#zl#log#error	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^function! GoldenView#zl#log#error(...)$/;"	f
GoldenView#zl#log#fatal	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^    function! GoldenView#zl#log#fatal(...)$/;"	f
GoldenView#zl#log#fatal	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^function! GoldenView#zl#log#fatal(...)$/;"	f
GoldenView#zl#log#info	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^    function! GoldenView#zl#log#info(...)$/;"	f
GoldenView#zl#log#info	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^function! GoldenView#zl#log#info(...)$/;"	f
GoldenView#zl#log#level_debug	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^    function! GoldenView#zl#log#level_debug(...)$/;"	f
GoldenView#zl#log#level_debug	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^function! GoldenView#zl#log#level_debug()$/;"	f
GoldenView#zl#log#level_error	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^    function! GoldenView#zl#log#level_error(...)$/;"	f
GoldenView#zl#log#level_error	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^function! GoldenView#zl#log#level_error()$/;"	f
GoldenView#zl#log#level_fatal	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^    function! GoldenView#zl#log#level_fatal(...)$/;"	f
GoldenView#zl#log#level_fatal	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^function! GoldenView#zl#log#level_fatal()$/;"	f
GoldenView#zl#log#level_info	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^    function! GoldenView#zl#log#level_info(...)$/;"	f
GoldenView#zl#log#level_info	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^function! GoldenView#zl#log#level_info()$/;"	f
GoldenView#zl#log#level_warn	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^    function! GoldenView#zl#log#level_warn(...)$/;"	f
GoldenView#zl#log#level_warn	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^function! GoldenView#zl#log#level_warn()$/;"	f
GoldenView#zl#log#warn	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^    function! GoldenView#zl#log#warn(...)$/;"	f
GoldenView#zl#log#warn	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^function! GoldenView#zl#log#warn(...)$/;"	f
GoldenView#zl#print#echomsg	plugged/GoldenView.Vim/autoload/GoldenView/zl/print.vim	/^function! GoldenView#zl#print#echomsg(message, ...)$/;"	f
GoldenView#zl#print#error	plugged/GoldenView.Vim/autoload/GoldenView/zl/print.vim	/^function! GoldenView#zl#print#error(message)$/;"	f
GoldenView#zl#print#moremsg	plugged/GoldenView.Vim/autoload/GoldenView/zl/print.vim	/^function! GoldenView#zl#print#moremsg(message)$/;"	f
GoldenView#zl#print#warning	plugged/GoldenView.Vim/autoload/GoldenView/zl/print.vim	/^function! GoldenView#zl#print#warning(message)$/;"	f
GoldenView#zl#rc#init	plugged/GoldenView.Vim/autoload/GoldenView/zl/rc.vim	/^function! GoldenView#zl#rc#init() abort$/;"	f
GoldenView#zl#rc#init_python	plugged/GoldenView.Vim/autoload/GoldenView/zl/rc.vim	/^function! GoldenView#zl#rc#init_python()$/;"	f
GoldenView#zl#rc#load_guard	plugged/GoldenView.Vim/autoload/GoldenView/zl/rc.vim	/^function! GoldenView#zl#rc#load_guard(prefix, vim_version, GoldenView_zl_version,exprs,...)$/;"	f
GoldenView#zl#rc#script_force_reload	plugged/GoldenView.Vim/autoload/GoldenView/zl/rc.vim	/^function! GoldenView#zl#rc#script_force_reload(...)$/;"	f
GoldenView#zl#rc#set_default	plugged/GoldenView.Vim/autoload/GoldenView/zl/rc.vim	/^function! GoldenView#zl#rc#set_default(var, ...)$/;"	f
GoldenView#zl#regex#escape	plugged/GoldenView.Vim/autoload/GoldenView/zl/regex.vim	/^function! GoldenView#zl#regex#escape(text, ...) " (text, ?magic='m')            ⟨⟨⟨2$/;"	f
GoldenView#zl#regex#or	plugged/GoldenView.Vim/autoload/GoldenView/zl/regex.vim	/^function! GoldenView#zl#regex#or(list, ...) "⟨⟨⟨$/;"	f
GoldenView#zl#rule#is_false	plugged/GoldenView.Vim/autoload/GoldenView/zl/rule.vim	/^function! GoldenView#zl#rule#is_false(nrule, ...)$/;"	f
GoldenView#zl#rule#is_true	plugged/GoldenView.Vim/autoload/GoldenView/zl/rule.vim	/^function! GoldenView#zl#rule#is_true(nrule, ...)$/;"	f
GoldenView#zl#rule#logic_and	plugged/GoldenView.Vim/autoload/GoldenView/zl/rule.vim	/^function! GoldenView#zl#rule#logic_and(nrule, ...)$/;"	f
GoldenView#zl#rule#logic_expr	plugged/GoldenView.Vim/autoload/GoldenView/zl/rule.vim	/^function! GoldenView#zl#rule#logic_expr(nrule, ...)$/;"	f
GoldenView#zl#rule#logic_or	plugged/GoldenView.Vim/autoload/GoldenView/zl/rule.vim	/^function! GoldenView#zl#rule#logic_or(nrule, ...)$/;"	f
GoldenView#zl#rule#norm	plugged/GoldenView.Vim/autoload/GoldenView/zl/rule.vim	/^function! GoldenView#zl#rule#norm(urule, ...)$/;"	f
GoldenView#zl#sys#is_cygwin	plugged/GoldenView.Vim/autoload/GoldenView/zl/sys.vim	/^function! GoldenView#zl#sys#is_cygwin()$/;"	f
GoldenView#zl#sys#is_linux	plugged/GoldenView.Vim/autoload/GoldenView/zl/sys.vim	/^function! GoldenView#zl#sys#is_linux()$/;"	f
GoldenView#zl#sys#is_mac	plugged/GoldenView.Vim/autoload/GoldenView/zl/sys.vim	/^function! GoldenView#zl#sys#is_mac()$/;"	f
GoldenView#zl#sys#is_win	plugged/GoldenView.Vim/autoload/GoldenView/zl/sys.vim	/^function! GoldenView#zl#sys#is_win()$/;"	f
GoldenView#zl#sys#ostype	plugged/GoldenView.Vim/autoload/GoldenView/zl/sys.vim	/^function! GoldenView#zl#sys#ostype()$/;"	f
GoldenView#zl#var#is_dict	plugged/GoldenView.Vim/autoload/GoldenView/zl/var.vim	/^function! GoldenView#zl#var#is_dict(Value)$/;"	f
GoldenView#zl#var#is_float	plugged/GoldenView.Vim/autoload/GoldenView/zl/var.vim	/^function! GoldenView#zl#var#is_float(Value)$/;"	f
GoldenView#zl#var#is_funcref	plugged/GoldenView.Vim/autoload/GoldenView/zl/var.vim	/^function! GoldenView#zl#var#is_funcref(Value)$/;"	f
GoldenView#zl#var#is_integer	plugged/GoldenView.Vim/autoload/GoldenView/zl/var.vim	/^function! GoldenView#zl#var#is_integer(Value)$/;"	f
GoldenView#zl#var#is_list	plugged/GoldenView.Vim/autoload/GoldenView/zl/var.vim	/^function! GoldenView#zl#var#is_list(Value)$/;"	f
GoldenView#zl#var#is_number	plugged/GoldenView.Vim/autoload/GoldenView/zl/var.vim	/^function! GoldenView#zl#var#is_number(Value)$/;"	f
GoldenView#zl#var#is_numeric	plugged/GoldenView.Vim/autoload/GoldenView/zl/var.vim	/^function! GoldenView#zl#var#is_numeric(Value)$/;"	f
GoldenView#zl#var#is_string	plugged/GoldenView.Vim/autoload/GoldenView/zl/var.vim	/^function! GoldenView#zl#var#is_string(Value)$/;"	f
GoldenView#zl#vim#context	plugged/GoldenView.Vim/autoload/GoldenView/zl/vim.vim	/^function! GoldenView#zl#vim#context()$/;"	f
GoldenView#zl#window#alternate_buffer	plugged/GoldenView.Vim/autoload/GoldenView/zl/window.vim	/^function! GoldenView#zl#window#alternate_buffer()$/;"	f
GoldenView#zl#window#golden_ratio_height	plugged/GoldenView.Vim/autoload/GoldenView/zl/window.vim	/^function! GoldenView#zl#window#golden_ratio_height()$/;"	f
GoldenView#zl#window#golden_ratio_width	plugged/GoldenView.Vim/autoload/GoldenView/zl/window.vim	/^function! GoldenView#zl#window#golden_ratio_width()$/;"	f
GoldenView#zl#window#is_last_visible	plugged/GoldenView.Vim/autoload/GoldenView/zl/window.vim	/^function! GoldenView#zl#window#is_last_visible()$/;"	f
GoldenView#zl#window#next_window_or_tab	plugged/GoldenView.Vim/autoload/GoldenView/zl/window.vim	/^function! GoldenView#zl#window#next_window_or_tab()$/;"	f
GoldenView#zl#window#nicely_split_cmd	plugged/GoldenView.Vim/autoload/GoldenView/zl/window.vim	/^function! GoldenView#zl#window#nicely_split_cmd(...)$/;"	f
GoldenView#zl#window#previous_window_or_tab	plugged/GoldenView.Vim/autoload/GoldenView/zl/window.vim	/^function! GoldenView#zl#window#previous_window_or_tab()$/;"	f
GoldenView#zl#window#save_view_command	plugged/GoldenView.Vim/autoload/GoldenView/zl/window.vim	/^function! GoldenView#zl#window#save_view_command(command) range$/;"	f
GoldenView#zl#window#scroll_other_window	plugged/GoldenView.Vim/autoload/GoldenView/zl/window.vim	/^function! GoldenView#zl#window#scroll_other_window(direction)$/;"	f
GoldenView#zl#window#sort_by	plugged/GoldenView.Vim/autoload/GoldenView/zl/window.vim	/^function! GoldenView#zl#window#sort_by(...)$/;"	f
GoldenView#zl#window#split_nicely	plugged/GoldenView.Vim/autoload/GoldenView/zl/window.vim	/^function! GoldenView#zl#window#split_nicely()$/;"	f
GoldenView#zl#window#switch_buffer	plugged/GoldenView.Vim/autoload/GoldenView/zl/window.vim	/^function! GoldenView#zl#window#switch_buffer(bufnr1, bufnr2)$/;"	f
GoldenView#zl#window#switch_buffer_toggle	plugged/GoldenView.Vim/autoload/GoldenView/zl/window.vim	/^function! GoldenView#zl#window#switch_buffer_toggle(...)$/;"	f
GoldenView#zl#window#switch_buffer_with_largest	plugged/GoldenView.Vim/autoload/GoldenView/zl/window.vim	/^function! GoldenView#zl#window#switch_buffer_with_largest(...)$/;"	f
GoldenView#zl#window#switch_buffer_with_smallest	plugged/GoldenView.Vim/autoload/GoldenView/zl/window.vim	/^function! GoldenView#zl#window#switch_buffer_with_smallest(...)$/;"	f
GoldenView#zl#window#switch_buffer_with_sorted_by_size_index	plugged/GoldenView.Vim/autoload/GoldenView/zl/window.vim	/^function! GoldenView#zl#window#switch_buffer_with_sorted_by_size_index(index, ...)$/;"	f
GoldenView#zl#window#textwidth	plugged/GoldenView.Vim/autoload/GoldenView/zl/window.vim	/^function! GoldenView#zl#window#textwidth()$/;"	f
GoldenView#zl#window#toggle_split	plugged/GoldenView.Vim/autoload/GoldenView/zl/window.vim	/^function! GoldenView#zl#window#toggle_split()$/;"	f
GoldenViewResize	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^command! -nargs=0 GoldenViewResize$/;"	c
GoldenViewTrace	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^command! -nargs=* -complete=expression GoldenViewTrace$/;"	c
GutentagsToggleEnabled	plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleEnabled :let g:gutentags_enabled=!g:gutentags_enabled$/;"	c
GutentagsToggleFake	plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleFake    :call gutentags#fake()$/;"	c
GutentagsToggleTrace	plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleTrace   :call gutentags#toggletrace()$/;"	c
GutentagsUpdate	plugged/vim-gutentags/autoload/gutentags.vim	/^    command! -buffer -bang GutentagsUpdate :call s:manual_update_tags(<bang>0)$/;"	c
HEADER1	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/INPUTS/header1.h	/^#define HEADER1$/;"	d
HEADER1	plugged/deoplete-clang/tests/clang/tests/cindex/INPUTS/header1.h	/^#define HEADER1$/;"	d
HEADER2	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/INPUTS/header2.h	/^#define HEADER2$/;"	d
HEADER2	plugged/deoplete-clang/tests/clang/tests/cindex/INPUTS/header2.h	/^#define HEADER2$/;"	d
HELPER	plugged/deoplete-clang/Makefile	/^HELPER := ${RPLUGIN_PATH}\/deoplete_clang\/helper.py$/;"	m
Handling Exceptions	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/usage.rst	/^Handling Exceptions$/;"	s	chapter:Usage
HiLink	plugged/vim-javascript-syntax/syntax/javascript.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-javascript-syntax/syntax/javascript.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiddenBuffer	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^class HiddenBuffer:$/;"	c
Hoge	plugged/vim-php-cs-fixer/tests/fixtures/misc/phpdocs.test.php	/^    public function Hoge ($fo, $bar, array $baz, $qux) {}$/;"	f	class:Foo
Hoge	plugged/vim-php-cs-fixer/tests/results/misc/phpdocs.test.php	/^    public function Hoge($fo, $bar, array $baz, $qux)$/;"	f	class:Foo
INDEX_WHOLE_PROJECT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set INDEX_WHOLE_PROJECT=0$/;"	v
INDEX_WHOLE_PROJECT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set INDEX_WHOLE_PROJECT=1$/;"	v
INTP_VER	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^INTP_VER = sys.version_info[:2]$/;"	v
IS_NEOVIM	plugged/neomake/Makefile	/^IS_NEOVIM=$(findstring nvim,$(TEST_VIM))$(findstring neovim,$(TEST_VIM))$/;"	m
Ignored	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    Ignored = 0$/;"	v	class:Diagnostic
Ignored	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    Ignored = 0$/;"	v	class:Diagnostic
Index	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class Index(ClangObject):$/;"	c
Index	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class Index(ClangObject):$/;"	c
InputStream	plugged/vdebug/pythonx/vdebug/util.py	/^class InputStream:$/;"	c
Insert Final Newline Property	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/insert_final_newline.rst	/^Insert Final Newline Property$/;"	c
Installation	plugged/editorconfig-vim/plugin/editorconfig-core-py/README.rst	/^Installation$/;"	c
Installation	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/usage.rst	/^Installation$/;"	s	chapter:Usage
JavaScriptFold	plugged/vim-javascript-syntax/syntax/javascript.vim	/^function! JavaScriptFold()$/;"	f
Keymapper	plugged/vdebug/pythonx/vdebug/util.py	/^class Keymapper:$/;"	c
Kind	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    class Kind:$/;"	c	class:CompletionChunk
Kind	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    class Kind:$/;"	c	class:CompletionChunk
L	autoload/plug.vim	/^    nnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
L	autoload/plug.vim	/^    xnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
LEFT_BRACE	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/fnmatch.py	/^LEFT_BRACE = re.compile($/;"	v
LINES_ABOVE	plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^LINES_ABOVE = 20$/;"	v
LINES_BELOW	plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^LINES_BELOW = 20$/;"	v
LINT_ARGS	plugged/neomake/Makefile	/^LINT_ARGS:=.\/plugin .\/autoload$/;"	m
LOGGER_GET_COMPILATION_DATABASE_AFTER	plugged/deoplete-clang/mk/debug_code.mk	/^LOGGER_GET_COMPILATION_DATABASE_AFTER := logger.debug(params)$/;"	m
LOGGER_GET_COMPILATION_DATABASE_AFTER_SUFFIX	plugged/deoplete-clang/mk/debug_code.mk	/^LOGGER_GET_COMPILATION_DATABASE_AFTER_SUFFIX := self.database\\[fname\\] = params$/;"	m
LOGGER_GET_COMPILATION_DATABASE_BEFORE	plugged/deoplete-clang/mk/debug_code.mk	/^LOGGER_GET_COMPILATION_DATABASE_BEFORE := logger.debug(list(self.compilation_database.getCompile/;"	m
LOGGER_GET_COMPILATION_DATABASE_BEFORE_SUFFIX	plugged/deoplete-clang/mk/debug_code.mk	/^LOGGER_GET_COMPILATION_DATABASE_BEFORE_SUFFIX := if self.compilation_database:$/;"	m
LOGGER_GET_COMPILATION_DATABASE_BEFORE_SUFFIX	plugged/deoplete-clang/mk/debug_code.mk	/^LOGGER_GET_COMPILATION_DATABASE_BEFORE_SUFFIX := if self.compilation_database:$/;"	t
LOGGER_GET_COMPILE_PARAMS	plugged/deoplete-clang/mk/debug_code.mk	/^LOGGER_GET_COMPILE_PARAMS := logger.debug(params)$/;"	m
LOGGER_GET_COMPILE_PARAMS_SUFFIX	plugged/deoplete-clang/mk/debug_code.mk	/^LOGGER_GET_COMPILE_PARAMS_SUFFIX := self.params\\[fname\\] = params$/;"	m
LOG_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set LOG_FILE=$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set LOG_FILE=$/;"	v
Latin1 Character Set	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/charset.rst	/^Latin1 Character Set$/;"	s	chapter:Tests for Newlines
Latin1 Character Set with Unicode	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/charset.rst	/^Latin1 Character Set with Unicode$/;"	s	chapter:Tests for Newlines
LibclangError	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class LibclangError(Exception):$/;"	c
LibclangError	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class LibclangError(Exception):$/;"	c
License	plugged/editorconfig-vim/plugin/editorconfig-core-py/README.rst	/^License$/;"	c
LineBreakpoint	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^class LineBreakpoint(Breakpoint):$/;"	c
LineBreakpointTest	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^class LineBreakpointTest(unittest.TestCase):$/;"	c
ListenEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class ListenEvent(Event):$/;"	c
Listener	plugged/vdebug/pythonx/vdebug/listener.py	/^class Listener:$/;"	c
LocalFilePath	plugged/vdebug/pythonx/vdebug/util.py	/^class LocalFilePath(FilePath):$/;"	c
LocalFilePathTest	plugged/vdebug/tests/test_util_filepath.py	/^class LocalFilePathTest(unittest.TestCase):$/;"	c
Log	plugged/vdebug/pythonx/vdebug/log.py	/^class Log:$/;"	c
Log	plugged/vim-gitgutter/test/runner.vim	/^function Log(msg)$/;"	f
LogError	plugged/vdebug/pythonx/vdebug/error.py	/^class LogError(Exception):$/;"	c
LogWindow	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^class LogWindow(Window):$/;"	c
Logger	plugged/vdebug/pythonx/vdebug/log.py	/^class Logger(object):$/;"	c
LoggerTest	plugged/vdebug/tests/test_log.py	/^class LoggerTest(unittest.TestCase):$/;"	c
LoggingMixin	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^class LoggingMixin(object):$/;"	c
LoopParseArgs	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:LoopParseArgs$/;"	l
LoopParseArgs	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:LoopParseArgs$/;"	l
MAGENTA	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang/profiler.py	/^    MAGENTA = '\\033[1;45m'$/;"	v	class:Colors
MAKEFLAGS	plugged/deoplete-clang/Makefile	/^MAKEFLAGS := -j 1$/;"	m
MODULE_NAME	plugged/deoplete-clang/Makefile	/^MODULE_NAME := \/deoplete_clang.py$/;"	m
MismatchingSeparatorsTest	plugged/vdebug/tests/test_util_filepath.py	/^class MismatchingSeparatorsTest(unittest.TestCase):$/;"	c
ModifiedBufferError	plugged/vdebug/pythonx/vdebug/error.py	/^class ModifiedBufferError(Exception):$/;"	c
Multiple Cursors	plugged/vim-multiple-cursors/spec/benchmark_spec.rb	/^describe "Multiple Cursors" do$/;"	d
Multiple Cursors misc	plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^describe "Multiple Cursors misc" do$/;"	d
Multiple Cursors op pending & exit from insert|visual mode	plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^describe "Multiple Cursors op pending & exit from insert|visual mode" do$/;"	d
Multiple Cursors when changing the line count	plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^describe "Multiple Cursors when changing the line count" do$/;"	d
Multiple Cursors when normal_maps is empty	plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^describe "Multiple Cursors when normal_maps is empty" do$/;"	d
Multiple Cursors when using insert mapings	plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^describe "Multiple Cursors when using insert mapings" do$/;"	d
Multiple Cursors when visual_maps is empty	plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^describe "Multiple Cursors when visual_maps is empty" do$/;"	d
MultipleCursorsFind	plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^command! -nargs=1 -range=% MultipleCursorsFind$/;"	c
Multiple_cursors_after	config.d/deoplete.vim	/^function g:Multiple_cursors_after()$/;"	f
Multiple_cursors_before	config.d/deoplete.vim	/^function g:Multiple_cursors_before()$/;"	f
MyAppend1	plugged/vim-airline/t/airline.vim	/^function! MyAppend1(...)$/;"	f
MyAppend2	plugged/vim-airline/t/airline.vim	/^function! MyAppend2(...)$/;"	f
MyFuncref	plugged/vim-airline/t/airline.vim	/^function! MyFuncref(...)$/;"	f
MyIgnoreFuncref	plugged/vim-airline/t/airline.vim	/^function! MyIgnoreFuncref(...)$/;"	f
N	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><expr> N 'j '[v:searchforward].'N'$/;"	m
NEOMAKE_DOCKER_IMAGE	plugged/neomake/Makefile	/^NEOMAKE_DOCKER_IMAGE?=$/;"	m
NEOMAKE_LOG	plugged/neomake/Makefile	/^NEOMAKE_LOG:=\/tmp\/neomake.log$/;"	m
NEOMAKE_TESTS_DEP_PLUGINS_DIR	plugged/neomake/Makefile	/^NEOMAKE_TESTS_DEP_PLUGINS_DIR?=build\/vim\/plugins$/;"	m
NERDComment	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function! NERDComment(mode, type) range$/;"	f
NERDCommentIsLineCommented	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function! NERDCommentIsLineCommented(lineNo)$/;"	f
NERDCommenter	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^augroup NERDCommenter$/;"	a
NERDTree	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=dir -bar NERDTree :call g:NERDTreeCreator.CreateTabTree('<args>')$/;"	c
NERDTree	plugged/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTreeAddKeyMap	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddPathFilter	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f
NERDTreeAddSubmenu	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeCWD call NERDTreeCWD()$/;"	c
NERDTreeCWD	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeClose	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeClose :call g:NERDTree.Close()$/;"	c
NERDTreeCopyNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeExecuteFileLinux	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileLinux()$/;"	f
NERDTreeFind	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=file -bar NERDTreeFind call s:findAndRevealPath('<args>')$/;"	c
NERDTreeFocus	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeFocus call NERDTreeFocus()$/;"	c
NERDTreeFocus	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeFromBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=1 -complete=customlist,nerdtree#completeBookmarks -bar NERDTreeFromBookmark call/;"	c
NERDTreeGetCWDGitStatus	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! g:NERDTreeGetCWDGitStatus()$/;"	f
NERDTreeGetGitStatusPrefix	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! g:NERDTreeGetGitStatusPrefix(path)$/;"	f
NERDTreeGitStatusRefresh	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! g:NERDTreeGitStatusRefresh()$/;"	f
NERDTreeGitStatusRefreshListener	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! NERDTreeGitStatusRefreshListener(event)$/;"	f
NERDTreeHijackNetrw	plugged/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeListNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNode()$/;"	f
NERDTreeListNodeWin32	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNodeWin32()$/;"	f
NERDTreeMirror	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeMirror call g:NERDTreeCreator.CreateMirror()$/;"	c
NERDTreeMoveNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealFileLinux	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealFileLinux()$/;"	f
NERDTreeRevealInFinder	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeToggle	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=dir -bar NERDTreeToggle :call g:NERDTreeCreator.ToggleTabTree('<args/;"	c
NERDTreeWebDevIconsRefreshListener	plugged/vim-devicons/plugin/webdevicons.vim	/^function! NERDTreeWebDevIconsRefreshListener(event)$/;"	f
NUMERIC_RANGE	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/fnmatch.py	/^NUMERIC_RANGE = re.compile($/;"	v
NeoSnippetClearMarkers	plugged/neosnippet.vim/plugin/neosnippet.vim	/^command! -bar NeoSnippetClearMarkers$/;"	c
NeoSnippetEdit	plugged/neosnippet.vim/plugin/neosnippet.vim	/^      \\ NeoSnippetEdit$/;"	c
NeoSnippetMakeCache	plugged/neosnippet.vim/plugin/neosnippet.vim	/^      \\ NeoSnippetMakeCache$/;"	c
NeoSnippetSource	plugged/neosnippet.vim/plugin/neosnippet.vim	/^      \\ NeoSnippetSource$/;"	c
Neomake	plugged/neomake/plugin/neomake.vim	/^            \\ Neomake call neomake#Make(<bang>1, [<f-args>])$/;"	c
NeomakeAsyncTestsSetup	plugged/neomake/tests/include/init.vim	/^function! NeomakeAsyncTestsSetup()$/;"	f
NeomakeCancelJob	plugged/neomake/plugin/neomake.vim	/^            \\ NeomakeCancelJob call neomake#CancelJob(<q-args>, <bang>0)$/;"	c
NeomakeCancelJobs	plugged/neomake/plugin/neomake.vim	/^command! -bang NeomakeCancelJobs call neomake#CancelJobs(<bang>0)$/;"	c
NeomakeDisable	plugged/neomake/plugin/neomake.vim	/^command! -bar NeomakeDisable call s:disable(g:, 1)$/;"	c
NeomakeDisableBuffer	plugged/neomake/plugin/neomake.vim	/^command! -bar NeomakeDisableBuffer call s:disable(b:, 1)$/;"	c
NeomakeDisableTab	plugged/neomake/plugin/neomake.vim	/^command! -bar NeomakeDisableTab call s:disable(t:, 1)$/;"	c
NeomakeEnable	plugged/neomake/plugin/neomake.vim	/^command! -bar NeomakeEnable call s:disable(g:, 0)$/;"	c
NeomakeEnableBuffer	plugged/neomake/plugin/neomake.vim	/^command! -bar NeomakeEnableBuffer call s:disable(b:, 0)$/;"	c
NeomakeEnableTab	plugged/neomake/plugin/neomake.vim	/^command! -bar NeomakeEnableTab call s:disable(t:, 0)$/;"	c
NeomakeFile	plugged/neomake/plugin/neomake.vim	/^            \\ NeomakeFile Neomake <args>$/;"	c
NeomakeInfo	plugged/neomake/plugin/neomake.vim	/^command! -bang -bar NeomakeInfo call neomake#debug#display_info(<bang>0)$/;"	c
NeomakeListJobs	plugged/neomake/plugin/neomake.vim	/^command! NeomakeListJobs call neomake#ListJobs()$/;"	c
NeomakeProject	plugged/neomake/plugin/neomake.vim	/^            \\ NeomakeProject Neomake! <args>$/;"	c
NeomakeSetupAutocmdWrappers	plugged/neomake/tests/include/init.vim	/^function! g:NeomakeSetupAutocmdWrappers()$/;"	f
NeomakeSh	plugged/neomake/plugin/neomake.vim	/^            \\ NeomakeSh call neomake#ShCommand(<bang>0, <q-args>)$/;"	c
NeomakeStatus	plugged/neomake/plugin/neomake.vim	/^command! NeomakeStatus call s:display_status()$/;"	c
NeomakeTestsCommandMaker	plugged/neomake/tests/include/init.vim	/^function! NeomakeTestsCommandMaker(name, cmd)$/;"	f
NeomakeTestsCreateExe	plugged/neomake/tests/include/init.vim	/^function! g:NeomakeTestsCreateExe(name, ...)$/;"	f
NeomakeTestsFakeJobinfo	plugged/neomake/tests/include/init.vim	/^function! NeomakeTestsFakeJobinfo() abort$/;"	f
NeomakeTestsGetMakerWithOutput	plugged/neomake/tests/include/init.vim	/^function! NeomakeTestsGetMakerWithOutput(func, lines) abort$/;"	f
NeomakeTestsGetSigns	plugged/neomake/tests/include/init.vim	/^function! NeomakeTestsGetSigns()$/;"	f
NeomakeTestsGetVimMessages	plugged/neomake/tests/include/init.vim	/^function! NeomakeTestsGetVimMessages()$/;"	f
NeomakeTestsGlobalAfter	plugged/neomake/tests/include/init.vim	/^command! NeomakeTestsGlobalAfter call s:After()$/;"	c
NeomakeTestsLoadPlugin	plugged/neomake/tests/vim/vimrc	/^command! -nargs=1 NeomakeTestsLoadPlugin call s:load_plugin_on_demand(<args>)$/;"	c
NeomakeTestsResetMessages	plugged/neomake/tests/include/init.vim	/^command! NeomakeTestsResetMessages call s:NeomakeTestsResetMessages()$/;"	c
NeomakeTestsSetPATH	plugged/neomake/tests/include/init.vim	/^function! g:NeomakeTestsSetPATH(path) abort$/;"	f
NeomakeTestsSetVimMessagesMarker	plugged/neomake/tests/include/init.vim	/^function! NeomakeTestsSetVimMessagesMarker()$/;"	f
NeomakeTestsSkip	plugged/neomake/tests/include/init.vim	/^command! -nargs=1 NeomakeTestsSkip call vader#log('SKIP: ' . <args>)$/;"	c
NeomakeTestsWaitForFinishedJobs	plugged/neomake/tests/include/init.vim	/^command! NeomakeTestsWaitForFinishedJobs call s:wait_for_jobs("!get(v:val, 'finished')")$/;"	c
NeomakeTestsWaitForMessage	plugged/neomake/tests/include/init.vim	/^command! -nargs=+ NeomakeTestsWaitForMessage call s:wait_for_message(<args>)$/;"	c
NeomakeTestsWaitForNextFinishedJob	plugged/neomake/tests/include/init.vim	/^command! NeomakeTestsWaitForNextFinishedJob call s:wait_for_finished_job()$/;"	c
NeomakeTestsWaitForNextMessage	plugged/neomake/tests/include/init.vim	/^command! NeomakeTestsWaitForNextMessage call s:wait_for_next_message()$/;"	c
NeomakeTestsWaitForRemovedJobs	plugged/neomake/tests/include/init.vim	/^command! NeomakeTestsWaitForRemovedJobs call s:wait_for_jobs('')$/;"	c
NeomakeToggle	plugged/neomake/plugin/neomake.vim	/^command! -bar NeomakeToggle call s:toggle(g:)$/;"	c
NeomakeToggleBuffer	plugged/neomake/plugin/neomake.vim	/^command! -bar NeomakeToggleBuffer call s:toggle(b:)$/;"	c
NeomakeToggleTab	plugged/neomake/plugin/neomake.vim	/^command! -bar NeomakeToggleTab call s:toggle(t:)$/;"	c
NeosnippetSnippets_Goiferr	plugged/neosnippet-snippets/neosnippets/go.vim	/^function! g:NeosnippetSnippets_Goiferr() abort$/;"	f
NextTrailingWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! -range=% NextTrailingWhitespace call <SID>GotoTrailingWhitespace(0, <line1>, <line2>)$/;"	c
NoConnectionError	plugged/vdebug/pythonx/vdebug/error.py	/^class NoConnectionError(Exception):$/;"	c
Not Trimming Whitespace	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/trim_trailing_whitespace.rst	/^Not Trimming Whitespace$/;"	s	chapter:Trim Trailing Whitespace Property
Note	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    Note    = 1$/;"	v	class:Diagnostic
Note	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    Note    = 1$/;"	v	class:Diagnostic
OPTCRE	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/ini.py	/^    OPTCRE = re.compile($/;"	v	class:EditorConfigParser
Old Mac-style Newlines	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/end_of_line.rst	/^Old Mac-style Newlines$/;"	S	section:Tests for Newlines
OpenBookmark	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=1 OpenBookmark call /;"	c
Options	plugged/vdebug/pythonx/vdebug/opts.py	/^class Options:$/;"	c
OptionsError	plugged/vdebug/pythonx/vdebug/opts.py	/^class OptionsError(Exception):$/;"	c
OptionsTest	plugged/vdebug/tests/test_opts_options.py	/^class OptionsTest(unittest.TestCase):$/;"	c
OrderedDict	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^class OrderedDict(dict):$/;"	c
PAPER	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^PAPER         =$/;"	m
PAPER	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/make.bat	/^	echo.  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter$/;"	v
PAPEROPT_a4	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^PAPEROPT_a4     = -D latex_paper_size=a4$/;"	m
PAPEROPT_letter	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^PAPEROPT_letter = -D latex_paper_size=letter$/;"	m
PARSE_CACHE_COMPLETION_RESULTS	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    PARSE_CACHE_COMPLETION_RESULTS = 8$/;"	v	class:TranslationUnit
PARSE_CACHE_COMPLETION_RESULTS	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    PARSE_CACHE_COMPLETION_RESULTS = 8$/;"	v	class:TranslationUnit
PARSE_DETAILED_PROCESSING_RECORD	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    PARSE_DETAILED_PROCESSING_RECORD = 1$/;"	v	class:TranslationUnit
PARSE_DETAILED_PROCESSING_RECORD	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    PARSE_DETAILED_PROCESSING_RECORD = 1$/;"	v	class:TranslationUnit
PARSE_INCLUDE_BRIEF_COMMENTS_IN_CODE_COMPLETION	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    PARSE_INCLUDE_BRIEF_COMMENTS_IN_CODE_COMPLETION = 128$/;"	v	class:TranslationUnit
PARSE_INCLUDE_BRIEF_COMMENTS_IN_CODE_COMPLETION	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    PARSE_INCLUDE_BRIEF_COMMENTS_IN_CODE_COMPLETION = 128$/;"	v	class:TranslationUnit
PARSE_INCOMPLETE	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    PARSE_INCOMPLETE = 2$/;"	v	class:TranslationUnit
PARSE_INCOMPLETE	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    PARSE_INCOMPLETE = 2$/;"	v	class:TranslationUnit
PARSE_NONE	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    PARSE_NONE = 0$/;"	v	class:TranslationUnit
PARSE_NONE	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    PARSE_NONE = 0$/;"	v	class:TranslationUnit
PARSE_PRECOMPILED_PREAMBLE	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    PARSE_PRECOMPILED_PREAMBLE = 4$/;"	v	class:TranslationUnit
PARSE_PRECOMPILED_PREAMBLE	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    PARSE_PRECOMPILED_PREAMBLE = 4$/;"	v	class:TranslationUnit
PARSE_SKIP_FUNCTION_BODIES	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    PARSE_SKIP_FUNCTION_BODIES = 64$/;"	v	class:TranslationUnit
PARSE_SKIP_FUNCTION_BODIES	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    PARSE_SKIP_FUNCTION_BODIES = 64$/;"	v	class:TranslationUnit
PATH	plugged/deoplete.nvim/Makefile	/^PATH := .\/vim-themis\/bin:$(PATH)$/;"	m
PATH	plugged/deoplete.nvim/Makefile	/^PATH := .\/vim-themis\/bin:$(PATH)$/;"	t
PAUSE_BEFORE_EXIT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set PAUSE_BEFORE_EXIT=1$/;"	v
PAUSE_BEFORE_EXIT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set PAUSE_BEFORE_EXIT=0$/;"	v
POST_PROCESS_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set POST_PROCESS_CMD=%~2$/;"	v
POST_PROCESS_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set POST_PROCESS_CMD=$/;"	v
PROFILER	plugged/deoplete-clang/Makefile	/^PROFILER := ${RPLUGIN_PATH}\/deoplete_clang\/profiler.py$/;"	m
PROJECT_ROOT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set PROJECT_ROOT=%~2$/;"	v
PROJECT_ROOT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set PROJECT_ROOT=$/;"	v
PROJ_ROOT	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set PROJ_ROOT=%~2$/;"	v
PadawanGenerate	config.d/deoplete-padawan.vim	/^command! -bang PadawanGenerate call deoplete#sources#padawan#Generate(<bang>0)$/;"	c
PadawanInstall	config.d/deoplete-padawan.vim	/^command! PadawanInstall call deoplete#sources#padawan#InstallServer()$/;"	c
PadawanRestart	config.d/deoplete-padawan.vim	/^command! PadawanRestart call deoplete#sources#padawan#RestartServer()$/;"	c
PadawanStart	config.d/deoplete-padawan.vim	/^command! PadawanStart call deoplete#sources#padawan#StartServer()$/;"	c
PadawanStop	config.d/deoplete-padawan.vim	/^command! PadawanStop call deoplete#sources#padawan#StopServer()$/;"	c
PadawanUpdate	config.d/deoplete-padawan.vim	/^command! PadawanUpdate call deoplete#sources#padawan#UpdatePadawan()$/;"	c
Parent	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^class Parent(logger.LoggingMixin):$/;"	c
ParseArgs	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:ParseArgs$/;"	l
ParseArgs	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:ParseArgs$/;"	l
ParsingError	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/exceptions.py	/^class ParsingError(_ParsingError, EditorConfigError):$/;"	c
PathError	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/exceptions.py	/^class PathError(ValueError, EditorConfigError):$/;"	c
PhpCsFixerFix	plugged/vim-php-cs-fixer/plugin/php_cs_fixer.vim	/^fun! PhpCsFixerFix(path, dry_run)$/;"	f
PhpCsFixerFixDirectory	plugged/vim-php-cs-fixer/plugin/php_cs_fixer.vim	/^fun! PhpCsFixerFixDirectory()$/;"	f
PhpCsFixerFixFile	plugged/vim-php-cs-fixer/plugin/php_cs_fixer.vim	/^fun! PhpCsFixerFixFile()$/;"	f
Plug	autoload/plug.vim	/^  command! -nargs=+ -bar Plug call plug#(<args>)$/;"	c
PlugClean	autoload/plug.vim	/^  command! -nargs=0 -bar -bang PlugClean call s:clean(<bang>0)$/;"	c
PlugDiff	autoload/plug.vim	/^  command! -nargs=0 -bar PlugDiff    call s:diff()$/;"	c
PlugInstall	autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugInstall call s:install(<bang>0, /;"	c
PlugLOD	autoload/plug.vim	/^    augroup PlugLOD$/;"	a
PlugSnapshot	autoload/plug.vim	/^  command! -nargs=? -bar -bang -complete=file PlugSnapshot call s:snapshot(<bang>0, <f-args>)$/;"	c
PlugStatus	autoload/plug.vim	/^  command! -nargs=0 -bar PlugStatus  call s:status()$/;"	c
PlugUpdate	autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugUpdate  call s:update(<bang>0, [/;"	c
PlugUpgrade	autoload/plug.vim	/^  command! -nargs=0 -bar PlugUpgrade if s:upgrade() | execute 'source' s:esc(s:me) | endif$/;"	c
PrevTrailingWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! -range=% PrevTrailingWhitespace call <SID>GotoTrailingWhitespace(1, <line1>, <line2>)$/;"	c
Process	plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^class Process(asyncio.SubprocessProtocol):$/;"	c
R	autoload/plug.vim	/^  nnoremap <silent> <buffer> R  :call <SID>retry()<cr>$/;"	m
RED	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang/profiler.py	/^    RED = '\\033[1;41m'$/;"	v	class:Colors
RIGHT_BRACE	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/fnmatch.py	/^RIGHT_BRACE = re.compile($/;"	v
RPLUGIN_PATH	plugged/deoplete-clang/Makefile	/^RPLUGIN_PATH := .\/rplugin\/python3\/deoplete\/sources$/;"	m
Random	plugged/vim-gitgutter/test/runner.vim	/^function Random(min, max)$/;"	f
RangeIterator	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^        class RangeIterator:$/;"	c	member:Diagnostic.ranges	file:
RangeIterator	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^        class RangeIterator:$/;"	c	member:Diagnostic.ranges	file:
ReadBookmarks	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 ReadBookmarks call g:NERDTreeBookmark.CacheBookmarks(0) <bar> call/;"	c
ReadClasspathFile	plugged/neomake/autoload/neomake/makers/ft/java/classpath.py	/^def ReadClasspathFile(fn):$/;"	f
RedirectStream	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^class RedirectStream(io.IOBase):$/;"	c
RefQualifierKind	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class RefQualifierKind(BaseEnumeration):$/;"	c
RefQualifierKind	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class RefQualifierKind(BaseEnumeration):$/;"	c
RefreshEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class RefreshEvent(Event):$/;"	c
ReloadKeymappingsEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class ReloadKeymappingsEvent(Event):$/;"	c
RemoteFilePath	plugged/vdebug/pythonx/vdebug/util.py	/^class RemoteFilePath(FilePath):$/;"	c
RemotePathTest	plugged/vdebug/tests/test_util_filepath.py	/^class RemotePathTest(unittest.TestCase):$/;"	c
RemoteUnixLocalWinPathTest	plugged/vdebug/tests/test_util_filepath.py	/^class RemoteUnixLocalWinPathTest(unittest.TestCase):$/;"	c
RemoteWinLocalUnixPathTest	plugged/vdebug/tests/test_util_filepath.py	/^class RemoteWinLocalUnixPathTest(unittest.TestCase):$/;"	c
RemoveBreakpointEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class RemoveBreakpointEvent(Event):$/;"	c
Response	plugged/vdebug/pythonx/vdebug/dbgp.py	/^class Response:$/;"	c
ResponseError	plugged/vdebug/pythonx/vdebug/dbgp.py	/^class ResponseError(Exception):$/;"	c
ResponseRenderer	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^class ResponseRenderer:$/;"	c
ResponseTest	plugged/vdebug/tests/test_dbgp_response.py	/^class ResponseTest(unittest.TestCase):$/;"	c
ReturnBreakpoint	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^class ReturnBreakpoint(CallBreakpoint):$/;"	c
ReturnBreakpointTest	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^class ReturnBreakpointTest(unittest.TestCase):$/;"	c
RevealBookmark	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=1 RevealBookmark :ca/;"	c
Rg	plugged/vim-ripgrep/plugin/vim-ripgrep.vim	/^command! -nargs=* -complete=file Rg :call s:Rg(<q-args>)$/;"	c
RgRoot	plugged/vim-ripgrep/plugin/vim-ripgrep.vim	/^command! -complete=file RgRoot :call s:RgShowRoot()$/;"	c
RunEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class RunEvent(Event):$/;"	c
RunNeomake	plugged/neomake/tests/include/init.vim	/^command! -nargs=* RunNeomake Neomake <args>$/;"	c
RunNeomakeProject	plugged/neomake/tests/include/init.vim	/^command! -nargs=* RunNeomakeProject NeomakeProject <args>$/;"	c
RunNeomakeSh	plugged/neomake/tests/include/init.vim	/^command! -nargs=* RunNeomakeSh call RunNeomakeSh(<q-args>)$/;"	c
RunNeomakeSh	plugged/neomake/tests/include/init.vim	/^function! RunNeomakeSh(...)$/;"	f
RunTest	plugged/vim-gitgutter/test/runner.vim	/^function RunTest(test)$/;"	f
RunToCursorEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class RunToCursorEvent(Event):$/;"	c
Running Test Cases	plugged/editorconfig-vim/plugin/editorconfig-core-py/README.rst	/^Running Test Cases$/;"	c
Running Tests	plugged/editorconfig-vim/tests/spec/plugin_tests/README.rst	/^Running Tests$/;"	s	chapter:Tests for EditorConfig Plugins
RustEmitAsm	plugged/rust.vim/ftplugin/rust.vim	/^command! -nargs=* -buffer RustEmitAsm call rust#Emit("asm", <q-args>)$/;"	c
RustEmitIr	plugged/rust.vim/ftplugin/rust.vim	/^command! -nargs=* -buffer RustEmitIr call rust#Emit("llvm-ir", <q-args>)$/;"	c
RustExpand	plugged/rust.vim/ftplugin/rust.vim	/^command! -nargs=* -complete=customlist,rust#CompleteExpand -bang -buffer RustExpand call rust#Ex/;"	c
RustFmt	plugged/rust.vim/ftplugin/rust.vim	/^command! -buffer RustFmt call rustfmt#Format()$/;"	c
RustFmtRange	plugged/rust.vim/ftplugin/rust.vim	/^command! -range -buffer RustFmtRange call rustfmt#FormatRange(<line1>, <line2>)$/;"	c
RustPlay	plugged/rust.vim/ftplugin/rust.vim	/^command! -range=% RustPlay :call rust#Play(<count>, <line1>, <line2>, <f-args>)$/;"	c
RustRun	plugged/rust.vim/ftplugin/rust.vim	/^command! -nargs=* -complete=file -bang -buffer RustRun call rust#Run(<bang>0, <q-args>)$/;"	c
S	autoload/plug.vim	/^  nnoremap <silent> <buffer> S  :PlugStatus<cr>$/;"	m
SClose	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=0 -bar SClose call startify#session_close()$/;"	c
SDelete	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=? -bar -bang -complete=customlist,startify#session_list SDelete call startify#se/;"	c
SECTCRE	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/ini.py	/^    SECTCRE = re.compile($/;"	v	class:EditorConfigParser
SET_DEBUG	plugged/deoplete-clang/mk/debug_code.mk	/^SET_DEBUG := try:\\n            from helper import set_debug\\n            if self.vim.vars["deo/;"	m
SET_DEBUG	plugged/deoplete-clang/mk/debug_code.mk	/^SET_DEBUG := try:\\n            from helper import set_debug\\n            if self.vim.vars["deo/;"	t
SET_DEBUG_PREFIX	plugged/deoplete-clang/mk/debug_code.mk	/^SET_DEBUG_PREFIX := self.tu_data, self.params, self.database = dict(), dict(), dict()$/;"	m
SHELL	plugged/neomake/Makefile	/^SHELL:=$(bash) -o pipefail$/;"	m
SLoad	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=? -bar       -complete=customlist,startify#session_list SLoad   call startify#se/;"	c
SPHINXBUILD	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^SPHINXBUILD   = sphinx-build$/;"	m
SPHINXBUILD	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/make.bat	/^	set SPHINXBUILD=sphinx-build$/;"	v
SPHINXOPTS	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^SPHINXOPTS    =$/;"	m
SSave	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=? -bar -bang -complete=customlist,startify#session_list SSave   call startify#se/;"	c
ScriptRunner	plugged/vdebug/features/support/helpers.rb	/^module ScriptRunner$/;"	m
SectionSpec	plugged/vim-airline/t/section.vim	/^function! SectionSpec()$/;"	f
Session	plugged/vdebug/pythonx/vdebug/session.py	/^class Session:$/;"	c
SessionHandler	plugged/vdebug/pythonx/vdebug/session.py	/^class SessionHandler:$/;"	c
SetBreakpointEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class SetBreakpointEvent(Event):$/;"	c
SetEvalExpressionEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class SetEvalExpressionEvent(Event):$/;"	c
SetUp	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function SetUp()$/;"	f
SetupAutoCommands	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! <SID>SetupAutoCommands()$/;"	f
ShowUsage	plugged/vim-gutentags/plat/unix/update_scopedb.sh	/^ShowUsage() {$/;"	f
ShowUsage	plugged/vim-gutentags/plat/unix/update_tags.sh	/^ShowUsage() {$/;"	f
Shuffle	plugged/vim-gitgutter/test/runner.vim	/^function Shuffle(list)$/;"	f
SnippetsIndent	plugged/neosnippet.vim/indent/neosnippet.vim	/^function! SnippetsIndent() abort "{{{$/;"	f
SocketCreator	plugged/vdebug/pythonx/vdebug/connection.py	/^class SocketCreator:$/;"	c
SocketMock	plugged/vdebug/tests/test_connection.py	/^class SocketMock():$/;"	c
SocketMockError	plugged/vdebug/tests/test_connection.py	/^class SocketMockError():$/;"	c
SocketServer	plugged/vdebug/pythonx/vdebug/connection.py	/^class SocketServer:$/;"	c
Source	plugged/deoplete-clang/rplugin/python3/deoplete/sources/cmake.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^class Source(Base):$/;"	c
Source	plugged/neosnippet.vim/rplugin/python3/deoplete/sources/neosnippet.py	/^class Source(Base):$/;"	c
SourceInitError	plugged/deoplete.nvim/rplugin/python3/deoplete/exceptions.py	/^class SourceInitError(Exception):$/;"	c
SourceLocation	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class SourceLocation(Structure):$/;"	c
SourceLocation	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class SourceLocation(Structure):$/;"	c
SourceRange	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class SourceRange(Structure):$/;"	c
SourceRange	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class SourceRange(Structure):$/;"	c
SourceWindow	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^class SourceWindow(interface.Window):$/;"	c
Space-based indentation	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/indentation.rst	/^Space-based indentation$/;"	s	chapter:Tests for Indentation Properties
Space-based indentation with no size specified	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/indentation.rst	/^Space-based indentation with no size specified$/;"	S	section:Space-based indentation
SpellingCache	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^SpellingCache = {$/;"	v
SpellingCache	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^SpellingCache = {$/;"	v
StackGetResponse	plugged/vdebug/pythonx/vdebug/dbgp.py	/^class StackGetResponse(Response):$/;"	c
StackGetResponseRenderer	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^class StackGetResponseRenderer(ResponseRenderer):$/;"	c
StackGetTest	plugged/vdebug/tests/test_dbgp_response.py	/^class StackGetTest(unittest.TestCase):$/;"	c
StackWindow	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^class StackWindow(Window):$/;"	c
StackWindowLineSelectEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class StackWindowLineSelectEvent(Event):$/;"	c
Startify	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=0 -bar Startify call startify#insane_in_the_membrane()$/;"	c
StartifyDebug	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=0 -bar StartifyDebug call startify#debug()$/;"	c
StatusResponse	plugged/vdebug/pythonx/vdebug/dbgp.py	/^class StatusResponse(Response):$/;"	c
StatusResponseTest	plugged/vdebug/tests/test_dbgp_response.py	/^class StatusResponseTest(unittest.TestCase):$/;"	c
StatusWindow	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^class StatusWindow(Window):$/;"	c
StepIntoEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class StepIntoEvent(Event):$/;"	c
StepOutEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class StepOutEvent(Event):$/;"	c
StepOverEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class StepOverEvent(Event):$/;"	c
StorageClass	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class StorageClass(object):$/;"	c
StorageClass	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class StorageClass(object):$/;"	c
Store	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^class Store:$/;"	c
StripWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! -range=% StripWhitespace call <SID>StripWhitespace( <line1>, <line2> )$/;"	c
SwitchGoldenViewLargest	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^command! -nargs=0 SwitchGoldenViewLargest$/;"	c
SwitchGoldenViewMain	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^command! -nargs=0 SwitchGoldenViewMain$/;"	c
SwitchGoldenViewSmallest	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^command! -nargs=0 SwitchGoldenViewSmallest$/;"	c
SwitchGoldenViewToggle	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^command! -nargs=0 SwitchGoldenViewToggle$/;"	c
SyntaxCheckers_rust_cargo_GetLocList	plugged/rust.vim/syntax_checkers/rust/cargo.vim	/^function! SyntaxCheckers_rust_cargo_GetLocList() dict$/;"	f
SyntaxCheckers_rust_cargo_IsAvailable	plugged/rust.vim/syntax_checkers/rust/cargo.vim	/^function! SyntaxCheckers_rust_cargo_IsAvailable() dict$/;"	f
SyntaxCheckers_rust_rustc_GetLocList	plugged/rust.vim/syntax_checkers/rust/rustc.vim	/^function! SyntaxCheckers_rust_rustc_GetLocList() dict$/;"	f
TAGS_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set TAGS_FILE=%~2$/;"	v
TAGS_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set TAGS_FILE=tags$/;"	v
TESTS	plugged/neomake/Makefile	/^TESTS:=$(wildcard tests\/*.vader tests\/*\/*.vader)$/;"	m
TESTS_FUGITIVE_DIR	plugged/neomake/Makefile	/^TESTS_FUGITIVE_DIR:=$(NEOMAKE_TESTS_DEP_PLUGINS_DIR)\/vim-fugitive$/;"	m
TESTS_VADER_DIR	plugged/neomake/Makefile	/^TESTS_VADER_DIR:=$(NEOMAKE_TESTS_DEP_PLUGINS_DIR)\/vader$/;"	m
TEST_VIM	plugged/neomake/Makefile	/^  TEST_VIM:=nvim$/;"	m
TEST_VIM	plugged/neomake/Makefile	/^  TEST_VIM:=vim$/;"	m
TEST_VIM	plugged/neomake/Makefile	/^testnvim_interactive: TEST_VIM:=nvim$/;"	m
TEST_VIM	plugged/neomake/Makefile	/^testvim: TEST_VIM:=vim$/;"	m
TEST_VIM	plugged/neomake/Makefile	/^testvim_interactive: TEST_VIM:=vim -X$/;"	m
TEST_VIMRC	plugged/neomake/Makefile	/^TEST_VIMRC:=tests\/vim\/vimrc$/;"	m
TEST_VIM_PREFIX	plugged/neomake/Makefile	/^TEST_VIM_PREFIX:=SHELL=$(bash)$/;"	m
THEMIS_ARGS	plugged/deoplete.nvim/Makefile	/^export THEMIS_ARGS := -e -s --headless$/;"	m
THEMIS_HOME	plugged/deoplete.nvim/Makefile	/^export THEMIS_HOME := .\/vim-themis$/;"	m
THEMIS_VIM	plugged/deoplete.nvim/Makefile	/^export THEMIS_VIM  := nvim$/;"	m
TIMEIT_GATHER_CANDIDATES	plugged/deoplete-clang/mk/debug_code.mk	/^TIMEIT_GATHER_CANDIDATES := ${TIMEIT_PREFIX}"simple", [0.02000000, 0.05000000]${TIMEIT_SUFFIX}$/;"	m
TIMEIT_GET_COMPILATION_DATABASE	plugged/deoplete-clang/mk/debug_code.mk	/^TIMEIT_GET_COMPILATION_DATABASE := ${TIMEIT_PREFIX}"simple", [0.00200000, 0.00300000]${TIMEIT_SU/;"	m
TIMEIT_GET_COMPILE_PARAMS	plugged/deoplete-clang/mk/debug_code.mk	/^TIMEIT_GET_COMPILE_PARAMS := ${TIMEIT_PREFIX}"simple", [0.00200000, 0.00300000]${TIMEIT_SUFFIX}$/;"	m
TIMEIT_GET_COMPLETE_POSITION	plugged/deoplete-clang/mk/debug_code.mk	/^TIMEIT_GET_COMPLETE_POSITION := ${TIMEIT_PREFIX}"simple", [0.00003000, 0.00015000]${TIMEIT_SUFFI/;"	m
TIMEIT_GET_COMPLETION	plugged/deoplete-clang/mk/debug_code.mk	/^TIMEIT_GET_COMPLETION := ${TIMEIT_PREFIX}"simple", [0.01500000, 0.02500000]${TIMEIT_SUFFIX}$/;"	m
TIMEIT_GET_CURRENT_BUFFER	plugged/deoplete-clang/mk/debug_code.mk	/^TIMEIT_GET_CURRENT_BUFFER := ${TIMEIT_PREFIX}"simple", [0.20000000, 0.30000000]${TIMEIT_SUFFIX}$/;"	m
TIMEIT_GET_PARAMS	plugged/deoplete-clang/mk/debug_code.mk	/^TIMEIT_GET_PARAMS := ${TIMEIT_PREFIX}"simple", [0.00000200, 0.00000400]${TIMEIT_SUFFIX}$/;"	m
TIMEIT_GET_TRANSLATION_UNIT	plugged/deoplete-clang/mk/debug_code.mk	/^TIMEIT_GET_TRANSLATION_UNIT := ${TIMEIT_PREFIX}"simple", [0.00000200, 0.00000400]${TIMEIT_SUFFIX/;"	m
TIMEIT_PARSE_CANDIDATES	plugged/deoplete-clang/mk/debug_code.mk	/^TIMEIT_PARSE_CANDIDATES := ${TIMEIT_PREFIX}"verbose", [0.00000500, 0.00002000]${TIMEIT_SUFFIX}$/;"	m
TIMEIT_PREFIX	plugged/deoplete-clang/mk/debug_code.mk	/^TIMEIT_PREFIX := @timeit(logger, $/;"	m
TIMEIT_SUFFIX	plugged/deoplete-clang/mk/debug_code.mk	/^TIMEIT_SUFFIX := )$/;"	m
TYPES	plugged/vdebug/pythonx/vdebug/log.py	/^    TYPES = ("ERROR", "Info", "Debug")$/;"	v	class:Logger
Tab-based indentation	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/indentation.rst	/^Tab-based indentation$/;"	s	chapter:Tests for Indentation Properties
Tab-based indentation with no size specified	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/indentation.rst	/^Tab-based indentation with no size specified$/;"	S	section:Tab-based indentation
Tab-based indentation with size of 4	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/indentation.rst	/^Tab-based indentation with size of 4$/;"	S	section:Tab-based indentation
Tab-based indentation with size of 4 and tab width of 8	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/indentation.rst	/^Tab-based indentation with size of 4 and tab width of 8$/;"	S	section:Tab-based indentation
Tagbar	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 Tagbar              call tagbar#ToggleWindow()$/;"	c
TagbarAutoCmds	plugged/tagbar/autoload/tagbar.vim	/^    augroup TagbarAutoCmds$/;"	a
TagbarBalloonExpr	plugged/tagbar/autoload/tagbar.vim	/^function! TagbarBalloonExpr() abort$/;"	f
TagbarClose	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarClose         call tagbar#CloseWindow()$/;"	c
TagbarCurrentTag	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarCurrentTag    echo tagbar#currenttag('%s', 'No current tag', <f-args>)$/;"	c
TagbarDebug	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarDebug         call tagbar#debug#start_debug(<f-args>)$/;"	c
TagbarDebugEnd	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarDebugEnd      call tagbar#debug#stop_debug()$/;"	c
TagbarGetTypeConfig	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=1 TagbarGetTypeConfig call tagbar#gettypeconfig(<f-args>)$/;"	c
TagbarOpen	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarOpen          call tagbar#OpenWindow(<f-args>)$/;"	c
TagbarOpenAutoClose	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarOpenAutoClose call tagbar#OpenWindow('fcj')$/;"	c
TagbarSession	plugged/tagbar/plugin/tagbar.vim	/^augroup TagbarSession$/;"	a
TagbarSetFoldlevel	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=1 -bang TagbarSetFoldlevel  call tagbar#SetFoldLevel(<args>, <bang>0)$/;"	c
TagbarShowTag	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarShowTag       call tagbar#highlighttag(1, 1)$/;"	c
TagbarToggle	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarToggle        call tagbar#ToggleWindow()$/;"	c
TagbarTogglePause	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarTogglePause   call tagbar#toggle_pause()$/;"	c
TearDown	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function TearDown()$/;"	f
TemplateArgumentKind	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class TemplateArgumentKind(BaseEnumeration):$/;"	c
TemplateArgumentKind	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class TemplateArgumentKind(BaseEnumeration):$/;"	c
TemporaryLineBreakpoint	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^class TemporaryLineBreakpoint(LineBreakpoint):$/;"	c
Test	plugged/vim-php-cs-fixer/tests/fixtures/misc/simplified_null_return,no_useless_return,no_whitespace_in_blank_line,blank_line_before_return,no_extra_consecutive_blank_lines.php	/^class Test {$/;"	c
Test	plugged/vim-php-cs-fixer/tests/results/misc/simplified_null_return,no_useless_return,no_whitespace_in_blank_line,blank_line_before_return,no_extra_consecutive_blank_lines.php	/^class Test$/;"	c
Test for Newline	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/insert_final_newline.rst	/^Test for Newline$/;"	S	section:Tests for Newline at end of File
Test for No Newline	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/insert_final_newline.rst	/^Test for No Newline$/;"	S	section:Tests for Newline at end of File
Test_add_lines	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines()$/;"	f
Test_add_lines_fish	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines_fish()$/;"	f
Test_around_text_object	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_around_text_object()$/;"	f
Test_edit_file_with_same_name_as_a_branch	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_edit_file_with_same_name_as_a_branch()$/;"	f
Test_encoding	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_encoding()$/;"	f
Test_file_added_to_git	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_file_added_to_git()$/;"	f
Test_filename_with_equals	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_equals()$/;"	f
Test_filename_with_square_brackets	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_square_brackets()$/;"	f
Test_fix_file_references	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_fix_file_references()$/;"	f
Test_follow_symlink	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_follow_symlink()$/;"	f
Test_hunk_outside_noop	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_outside_noop()$/;"	f
Test_hunk_stage	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage()$/;"	f
Test_hunk_stage_nearby_hunk	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_nearby_hunk()$/;"	f
Test_hunk_undo	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_undo()$/;"	f
Test_inner_text_object	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_inner_text_object()$/;"	f
Test_keep_alt	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_alt()$/;"	f
Test_keep_modified	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_modified()$/;"	f
Test_keep_op_marks	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_op_marks()$/;"	f
Test_modify_lines	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_modify_lines()$/;"	f
Test_no_modifications	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_no_modifications()$/;"	f
Test_orphaned_signs	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_orphaned_signs()$/;"	f
Test_remove_first_lines	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_first_lines()$/;"	f
Test_remove_lines	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_lines()$/;"	f
Test_undo_nearby_hunk	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_undo_nearby_hunk()$/;"	f
Test_untracked_file_outside_repo	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_outside_repo()$/;"	f
Test_untracked_file_square_brackets_within_repo	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_square_brackets_within_repo()$/;"	f
Test_untracked_file_within_repo	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_within_repo()$/;"	f
Test_user_autocmd	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_user_autocmd()$/;"	f
Test_write_option	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_write_option()$/;"	f
Tests for EditorConfig Plugins	plugged/editorconfig-vim/tests/spec/plugin_tests/README.rst	/^Tests for EditorConfig Plugins$/;"	c
Tests for End of Line Property	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/end_of_line.rst	/^Tests for End of Line Property$/;"	c
Tests for Indentation Properties	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/indentation.rst	/^Tests for Indentation Properties$/;"	c
Tests for Newline at end of File	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/insert_final_newline.rst	/^Tests for Newline at end of File$/;"	s	chapter:Insert Final Newline Property
Tests for Newlines	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/charset.rst	/^Tests for Newlines$/;"	c
Tests for Newlines	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/end_of_line.rst	/^Tests for Newlines$/;"	s	chapter:Tests for End of Line Property
TimeoutError	plugged/vdebug/pythonx/vdebug/dbgp.py	/^class TimeoutError(Exception):$/;"	c
ToggleGoldenViewAutoResize	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^command! -nargs=0 ToggleGoldenViewAutoResize$/;"	c
ToggleStripWhitespaceOnSave	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! ToggleStripWhitespaceOnSave call <SID>ToggleStripWhitespaceOnSave()$/;"	c
ToggleWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! ToggleWhitespace call <SID>ToggleWhitespace()$/;"	c
Token	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class Token(Structure):$/;"	c
Token	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class Token(Structure):$/;"	c
TokenGroup	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class TokenGroup(object):$/;"	c
TokenGroup	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class TokenGroup(object):$/;"	c
TokenKind	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class TokenKind(object):$/;"	c
TokenKind	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class TokenKind(object):$/;"	c
TokenKinds	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/enumerations.py	/^TokenKinds = [$/;"	v
TokenKinds	plugged/deoplete-clang/tests/clang/clang/enumerations.py	/^TokenKinds = [$/;"	v
TraceError	plugged/vdebug/pythonx/vdebug/dbgp.py	/^class TraceError(Exception):$/;"	c
TraceEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class TraceEvent(Event):$/;"	c
TraceRefreshEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class TraceRefreshEvent(Event):$/;"	c
TraceResponse	plugged/vdebug/pythonx/vdebug/dbgp.py	/^class TraceResponse(Response):$/;"	c
TraceWindow	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^class TraceWindow(WatchWindow):$/;"	c
TranslationUnit	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class TranslationUnit(ClangObject):$/;"	c
TranslationUnit	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class TranslationUnit(ClangObject):$/;"	c
TranslationUnitLoadError	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class TranslationUnitLoadError(Exception):$/;"	c
TranslationUnitLoadError	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class TranslationUnitLoadError(Exception):$/;"	c
TranslationUnitSaveError	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class TranslationUnitSaveError(Exception):$/;"	c
TranslationUnitSaveError	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class TranslationUnitSaveError(Exception):$/;"	c
Trim Trailing Whitespace Property	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/trim_trailing_whitespace.rst	/^Trim Trailing Whitespace Property$/;"	c
Trimming Whitespace	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/trim_trailing_whitespace.rst	/^Trimming Whitespace$/;"	s	chapter:Trim Trailing Whitespace Property
Type	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class Type(Structure):$/;"	c
Type	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class Type(Structure):$/;"	c
TypeKind	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class TypeKind(BaseEnumeration):$/;"	c
TypeKind	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class TypeKind(BaseEnumeration):$/;"	c
U	autoload/plug.vim	/^  nnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
U	autoload/plug.vim	/^  xnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
UPDATED_SOURCE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set UPDATED_SOURCE=%~2$/;"	v
UPDATED_SOURCE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set UPDATED_SOURCE=$/;"	v
UTF-16BE Character Set	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/charset.rst	/^UTF-16BE Character Set$/;"	s	chapter:Tests for Newlines
UTF-16LE Character Set	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/charset.rst	/^UTF-16LE Character Set$/;"	s	chapter:Tests for Newlines
UTF-8 Character Set	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/charset.rst	/^UTF-8 Character Set$/;"	s	chapter:Tests for Newlines
UTF-8 with BOM Character Set	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/charset.rst	/^UTF-8 with BOM Character Set$/;"	s	chapter:Tests for Newlines
Ui	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^class Ui:$/;"	c
Ui	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^class Ui(interface.Ui):$/;"	c
Undotree	plugged/undotree/plugin/undotree.vim	/^augroup Undotree$/;"	a
UndotreeFocus	plugged/undotree/plugin/undotree.vim	/^command! -n=0 -bar UndotreeFocus    :call undotree#UndotreeFocus()$/;"	c
UndotreeHide	plugged/undotree/plugin/undotree.vim	/^command! -n=0 -bar UndotreeHide     :call undotree#UndotreeHide()$/;"	c
UndotreeShow	plugged/undotree/plugin/undotree.vim	/^command! -n=0 -bar UndotreeShow     :call undotree#UndotreeShow()$/;"	c
UndotreeToggle	plugged/undotree/plugin/undotree.vim	/^    command! -n=0 -bar UndotreeToggle :echoerr "undotree.vim needs Vim version >= 7.3"$/;"	c
UndotreeToggle	plugged/undotree/plugin/undotree.vim	/^    command! -n=0 -bar UndotreeToggle :echoerr "undotree.vim needs vim7.3 with patch005 applied./;"	c
UndotreeToggle	plugged/undotree/plugin/undotree.vim	/^command! -n=0 -bar UndotreeToggle   :call undotree#UndotreeToggle()$/;"	c
Undotree_Diff	plugged/undotree/autoload/undotree.vim	/^    augroup Undotree_Diff$/;"	a
Undotree_Main	plugged/undotree/autoload/undotree.vim	/^    augroup Undotree_Main$/;"	a
Unix-style Newlines	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/end_of_line.rst	/^Unix-style Newlines$/;"	S	section:Tests for Newlines
Unlock	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:Unlock$/;"	l
Usage	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/usage.rst	/^Usage$/;"	c
Usage	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:Usage$/;"	l
Usage	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:Usage$/;"	l
Use as a library	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/plugins.rst	/^Use as a library$/;"	s	chapter:Writing Plugins
UserInterrupt	plugged/vdebug/pythonx/vdebug/error.py	/^class UserInterrupt(Exception):$/;"	c
Using as a Library	plugged/editorconfig-vim/plugin/editorconfig-core-py/README.rst	/^Using as a Library$/;"	c
Using with an external Python interpreter	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/plugins.rst	/^Using with an external Python interpreter$/;"	s	chapter:Writing Plugins
Util1	plugged/vim-airline/t/util.vim	/^function! Util1()$/;"	f
Util2	plugged/vim-airline/t/util.vim	/^function! Util2()$/;"	f
Util3	plugged/vim-airline/t/util.vim	/^function! Util3(...)$/;"	f
VADER	plugged/neomake/Makefile	/^VADER:=Vader!$/;"	m
VADER	plugged/neomake/Makefile	/^_run_interactive: VADER:=Vader$/;"	m
VADER_ARGS	plugged/neomake/Makefile	/^VADER_ARGS=tests\/main.vader tests\/isolated.vader$/;"	m
VADER_OPTIONS	plugged/neomake/Makefile	/^VADER_OPTIONS:=-q$/;"	m
VERSION	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/__init__.py	/^VERSION = (0, 12, 0, "final")$/;"	v
VIMHELPLINT_VIM	plugged/neomake/Makefile	/^vimhelplint: export VIMHELPLINT_VIM:=vim$/;"	m
VIMLINT_BIN	plugged/neomake/Makefile	/^VIMLINT_BIN=$(shell command -v vimlint 2>\/dev\/null || echo build\/vimlint\/bin\/vimlint.sh -l /;"	m
VIMLINT_OPTIONS	plugged/neomake/Makefile	/^VIMLINT_OPTIONS=-u -e EVL102.l:_=1$/;"	m
VIMLINT_OPTIONS	plugged/neomake/Makefile	/^VIMLINT_OPTIONS=-u -e EVL102.l:_=1$/;"	t
VIM_ARGS	plugged/neomake/Makefile	/^VIM_ARGS='+$(VADER) $(VADER_OPTIONS) $(VADER_ARGS)'$/;"	m
VIM_ARGS	plugged/neomake/Makefile	/^runnvim: VIM_ARGS:=$/;"	m
VIM_ARGS	plugged/neomake/Makefile	/^runvim: VIM_ARGS:=$/;"	m
VINT_BIN	plugged/neomake/Makefile	/^VINT_BIN=$(shell command -v vint 2>\/dev\/null || echo build\/vint\/bin\/vint)$/;"	m
Vdebug	plugged/vdebug/rubylib/vdebug.rb	/^class Vdebug$/;"	c
Vdebug	plugged/vdebug/spec/vdebug_spec.rb	/^describe Vdebug do$/;"	d
VdebugAddPathMap	plugged/vdebug/plugin/vdebug.vim	/^command! -nargs=+ VdebugAddPathMap :call Vdebug_add_path_map(<f-args>)$/;"	c
VdebugEval	plugged/vdebug/plugin/vdebug.vim	/^command! -nargs=? -bang VdebugEval python3 debugger.handle_eval('<bang>', <q-args>)$/;"	c
VdebugHelper	plugged/vdebug/features/support/helpers.rb	/^module VdebugHelper$/;"	m
VdebugOpt	plugged/vdebug/plugin/vdebug.vim	/^command! -nargs=+ -complete=customlist,s:OptionNames VdebugOpt :call Vdebug_set_option(<f-args>)$/;"	c
VdebugPathMap	plugged/vdebug/plugin/vdebug.vim	/^command! -nargs=+ VdebugPathMap :call Vdebug_path_map(<f-args>)$/;"	c
VdebugStart	plugged/vdebug/plugin/vdebug.vim	/^command! VdebugStart python3 debugger.run()$/;"	c
VdebugTrace	plugged/vdebug/plugin/vdebug.vim	/^command! -nargs=? VdebugTrace python3 debugger.handle_trace(<q-args>)$/;"	c
Vdebug_add_path_map	plugged/vdebug/plugin/vdebug.vim	/^function! Vdebug_add_path_map(from, to)$/;"	f
Vdebug_edit	plugged/vdebug/plugin/vdebug.vim	/^function! Vdebug_edit(filename)$/;"	f
Vdebug_get_visual_selection	plugged/vdebug/plugin/vdebug.vim	/^function! Vdebug_get_visual_selection()$/;"	f
Vdebug_load_keymaps	plugged/vdebug/plugin/vdebug.vim	/^function! Vdebug_load_keymaps(keymaps)$/;"	f
Vdebug_load_options	plugged/vdebug/plugin/vdebug.vim	/^function! Vdebug_load_options(options)$/;"	f
Vdebug_path_map	plugged/vdebug/plugin/vdebug.vim	/^function! Vdebug_path_map(from, to)$/;"	f
Vdebug_set_option	plugged/vdebug/plugin/vdebug.vim	/^function! Vdebug_set_option(option, ...)$/;"	f
Vdebug_statusline	plugged/vdebug/plugin/vdebug.vim	/^function! Vdebug_statusline()$/;"	f
Verifying Character Set	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/charset.rst	/^Verifying Character Set$/;"	c
Verifying Newline Style	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/end_of_line.rst	/^Verifying Newline Style$/;"	s	chapter:Tests for End of Line Property
VersionError	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/exceptions.py	/^class VersionError(ValueError, EditorConfigError):$/;"	c
VimBuffer	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^class VimBuffer:$/;"	c
VisualEvalEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class VisualEvalEvent(Event):$/;"	c
Warning	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    Warning = 2$/;"	v	class:Diagnostic
Warning	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    Warning = 2$/;"	v	class:Diagnostic
WatchBreakpoint	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^class WatchBreakpoint(Breakpoint):$/;"	c
WatchWindow	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^class WatchWindow(Window):$/;"	c
WatchWindowContextChangeEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class WatchWindowContextChangeEvent(Event):$/;"	c
WatchWindowHideEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class WatchWindowHideEvent(Event):$/;"	c
WatchWindowPropertyGetEvent	plugged/vdebug/pythonx/vdebug/event.py	/^class WatchWindowPropertyGetEvent(Event):$/;"	c
WebDevIconsGetFileFormatSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^function! WebDevIconsGetFileFormatSymbol(...)$/;"	f
WebDevIconsGetFileTypeSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^function! WebDevIconsGetFileTypeSymbol(...)$/;"	f
WebDevIconsNERDTreeChangeRootHandler	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeChangeRootHandler(node)$/;"	f
WebDevIconsNERDTreeDirClose	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirClose(node)$/;"	f
WebDevIconsNERDTreeDirCloseChildren	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirCloseChildren(node)$/;"	f
WebDevIconsNERDTreeDirCloseRecursively	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirCloseRecursively(node)$/;"	f
WebDevIconsNERDTreeDirOpen	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirOpen(node)$/;"	f
WebDevIconsNERDTreeDirOpenRecursively	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirOpenRecursively(node)$/;"	f
WebDevIconsNERDTreeDirUpdateFlags	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirUpdateFlags(node, glyph)$/;"	f
WebDevIconsNERDTreeMapActivateNode	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapActivateNode(node)$/;"	f
WebDevIconsNERDTreeMapCloseChildren	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapCloseChildren(node)$/;"	f
WebDevIconsNERDTreeMapCloseDir	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapCloseDir(node)$/;"	f
WebDevIconsNERDTreeMapOpenRecursively	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapOpenRecursively(node)$/;"	f
WebDevIconsNERDTreeMapUpdirKeepOpen	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapUpdirKeepOpen()$/;"	f
WebDevIconsNERDTreeUpDirCurrentRootClosedHandler	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeUpDirCurrentRootClosedHandler()$/;"	f
Window	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^class Window:$/;"	c
Window	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^class Window(interface.Window):$/;"	c
WindowError	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^class WindowError(Exception):$/;"	c
WindowLogger	plugged/vdebug/pythonx/vdebug/log.py	/^class WindowLogger(Logger):$/;"	c
WindowLoggerTest	plugged/vdebug/tests/test_log.py	/^class WindowLoggerTest(unittest.TestCase):$/;"	c
WindowManager	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^class WindowManager:$/;"	c
Windows-style Newlines	plugged/editorconfig-vim/tests/spec/plugin_tests/tests/end_of_line.rst	/^Windows-style Newlines$/;"	S	section:Tests for Newlines
WriteBookmarks	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 WriteBookmarks call g:NERDTreeBookmark.Write()$/;"	c
Writing Plugins	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/plugins.rst	/^Writing Plugins$/;"	c
X	autoload/plug.vim	/^    nnoremap <silent> <buffer> X :call <SID>revert()<cr>$/;"	m
YELLOW	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang/profiler.py	/^    YELLOW = '\\033[1;43m'$/;"	v	class:Colors
Z	plugged/vim-php-cs-fixer/tests/fixtures/misc/single_import_per_statement,ordered_imports.php	/^use some\\{Z, A};$/;"	a	typeref:unknown:some\\Z
Z	plugged/vim-php-cs-fixer/tests/results/misc/single_import_per_statement,ordered_imports.php	/^use some\\{Z, A};$/;"	a	typeref:unknown:some\\Z
Zzzz	plugged/vim-php-cs-fixer/tests/fixtures/misc/imports.php	/^use Abc, \\Barr, \\Zzzz;$/;"	a	namespace:Acme	typeref:unknown:\\Zzzz
Zzzz	plugged/vim-php-cs-fixer/tests/results/misc/imports.php	/^use \\Zzzz;$/;"	a	namespace:Acme	typeref:unknown:\\Zzzz
[[	autoload/plug.vim	/^  nnoremap <silent> <buffer> [[ :silent! call <SID>section('b')<cr>$/;"	m
[[	plugged/rust.vim/ftplugin/rust.vim	/^nnoremap <silent> <buffer> [[ :call rust#Jump('n', 'Back')<CR>$/;"	m
[[	plugged/rust.vim/ftplugin/rust.vim	/^onoremap <silent> <buffer> [[ :call rust#Jump('o', 'Back')<CR>$/;"	m
[[	plugged/rust.vim/ftplugin/rust.vim	/^xnoremap <silent> <buffer> [[ :call rust#Jump('v', 'Back')<CR>$/;"	m
[c	plugged/vim-gitgutter/plugin/gitgutter.vim	/^    nmap [c <Plug>GitGutterPrevHunk$/;"	m
]]	autoload/plug.vim	/^  nnoremap <silent> <buffer> ]] :silent! call <SID>section('')<cr>$/;"	m
]]	plugged/rust.vim/ftplugin/rust.vim	/^nnoremap <silent> <buffer> ]] :call rust#Jump('n', 'Forward')<CR>$/;"	m
]]	plugged/rust.vim/ftplugin/rust.vim	/^onoremap <silent> <buffer> ]] :call rust#Jump('o', 'Forward')<CR>$/;"	m
]]	plugged/rust.vim/ftplugin/rust.vim	/^xnoremap <silent> <buffer> ]] :call rust#Jump('v', 'Forward')<CR>$/;"	m
]c	plugged/vim-gitgutter/plugin/gitgutter.vim	/^    nmap ]c <Plug>GitGutterNextHunk$/;"	m
_	plugged/neomake/Makefile	/^VIMLINT_OPTIONS=-u -e EVL102.l:_=1$/;"	m
_COVIMERAGE	plugged/neomake/Makefile	/^_COVIMERAGE=$(if $(filter-out 0,$(NEOMAKE_DO_COVERAGE)),covimerage run --append --no-report ,)$/;"	m
_CXString	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class _CXString(Structure):$/;"	c
_CXString	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class _CXString(Structure):$/;"	c
_CXUnsavedFile	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^class _CXUnsavedFile(Structure):$/;"	c
_CXUnsavedFile	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^class _CXUnsavedFile(Structure):$/;"	c
_DOCKER_VIM_TARGETS	plugged/neomake/Makefile	/^_DOCKER_VIM_TARGETS:=$(addprefix docker_test-,$(DOCKER_VIMS))$/;"	m
_ECHO_DOCKER_VIMS	plugged/neomake/Makefile	/^_ECHO_DOCKER_VIMS:=ls \/vim-build\/bin | grep vim | sort$/;"	m
_ParsingError	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/exceptions.py	/^    from ConfigParser import ParsingError as _ParsingError$/;"	x
_ParsingError	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/exceptions.py	/^    from configparser import ParsingError as _ParsingError$/;"	x
_REDIR_STDOUT	plugged/neomake/Makefile	/^_REDIR_STDOUT:=2>&1 <\/dev\/null >\/dev\/null $(_SED_HIGHLIGHT_ERRORS)$/;"	m
_REDIR_STDOUT	plugged/neomake/Makefile	/^_run_interactive: _REDIR_STDOUT:=$/;"	m
_SED_HIGHLIGHT_ERRORS	plugged/neomake/Makefile	/^_SED_HIGHLIGHT_ERRORS:=| contrib\/highlight-log --compact vader$/;"	m
_TESTS_REL_AND_ABS	plugged/neomake/Makefile	/^_TESTS_REL_AND_ABS:=$(call uniq,$(abspath $(TESTS)) $(TESTS))$/;"	m
__add__	plugged/vdebug/pythonx/vdebug/util.py	/^    def __add__(self, other):$/;"	m	class:FilePath
__all__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/__init__.py	/^__all__ = ['cindex']$/;"	v
__all__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^__all__ = [$/;"	v
__all__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/enumerations.py	/^__all__ = ['TokenKinds']$/;"	v
__all__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/util.py	/^__all__ = [$/;"	v
__all__	plugged/deoplete-clang/tests/clang/clang/__init__.py	/^__all__ = ['cindex']$/;"	v
__all__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^__all__ = [$/;"	v
__all__	plugged/deoplete-clang/tests/clang/clang/enumerations.py	/^__all__ = ['TokenKinds']$/;"	v
__all__	plugged/deoplete-clang/tests/clang/tests/cindex/util.py	/^__all__ = [$/;"	v
__all__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/__init__.py	/^__all__ = ['get_properties', 'EditorConfigError', 'exceptions']$/;"	v
__all__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/compat.py	/^__all__ = ['force_unicode', 'u']$/;"	v
__all__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/fnmatch.py	/^__all__ = ["fnmatch", "fnmatchcase", "translate"]$/;"	v
__all__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/handler.py	/^__all__ = ['EditorConfigHandler']$/;"	v
__all__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/ini.py	/^__all__ = ["ParsingError", "EditorConfigParser"]$/;"	v
__all__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^__all__ = ['OrderedDict']$/;"	v
__all__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/versiontools.py	/^__all__ = ['join_version', 'split_version']$/;"	v
__all__	plugged/vdebug/pythonx/vdebug/ui/__init__.py	/^__all__ = ["interface", "vimui"]$/;"	v
__check_exit	plugged/vdebug/pythonx/vdebug/connection.py	/^    def __check_exit(message):$/;"	m	class:BackgroundSocketCreator	file:
__collect_context_names	plugged/vdebug/pythonx/vdebug/session.py	/^    def __collect_context_names(self):$/;"	m	class:Session	file:
__contains__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __contains__(self, other):$/;"	m	class:SourceRange
__contains__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __contains__(self, other):$/;"	m	class:SourceRange
__create_tabs	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def __create_tabs(self):$/;"	m	class:ContextGetResponseRenderer	file:
__deepcopy__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __deepcopy__(self, memo):$/;"	m	class:OrderedDict
__del__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __del__(self):$/;"	m	class:CodeCompletionResults
__del__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __del__(self):$/;"	m	class:CompilationDatabase
__del__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __del__(self):$/;"	m	class:CompileCommands
__del__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __del__(self):$/;"	m	class:Diagnostic
__del__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __del__(self):$/;"	m	class:Index
__del__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __del__(self):$/;"	m	class:TokenGroup
__del__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __del__(self):$/;"	m	class:TranslationUnit
__del__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __del__(self):$/;"	m	class:_CXString
__del__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __del__(self):$/;"	m	class:CodeCompletionResults
__del__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __del__(self):$/;"	m	class:CompilationDatabase
__del__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __del__(self):$/;"	m	class:CompileCommands
__del__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __del__(self):$/;"	m	class:Diagnostic
__del__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __del__(self):$/;"	m	class:Index
__del__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __del__(self):$/;"	m	class:TokenGroup
__del__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __del__(self):$/;"	m	class:TranslationUnit
__del__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __del__(self):$/;"	m	class:_CXString
__del__	plugged/vdebug/pythonx/vdebug/connection.py	/^    def __del__(self):$/;"	m	class:ConnectionHandler
__del__	plugged/vdebug/pythonx/vdebug/connection.py	/^    def __del__(self):$/;"	m	class:SocketServer
__del__	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def __del__(self):$/;"	m	class:Api
__del__	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def __del__(self):$/;"	m	class:DebuggerInterface
__del__	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    def __del__(self):$/;"	m	class:Ui
__del__	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    def __del__(self):$/;"	m	class:Window
__delitem__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __delitem__(self, key):$/;"	m	class:OrderedDict
__determine_context_id	plugged/vdebug/pythonx/vdebug/event.py	/^    def __determine_context_id(context_names, context_name):$/;"	m	class:WatchWindowContextChangeEvent	file:
__determine_ns	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def __determine_ns(self):$/;"	m	class:Response	file:
__determine_type	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def __determine_type(self, node):$/;"	m	class:ContextProperty	file:
__determine_value	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def __determine_value(self, node):$/;"	m	class:ContextProperty	file:
__docformat__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^__docformat__ = "restructuredtext en"$/;"	v
__eq__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __eq__(self, other):$/;"	m	class:Cursor
__eq__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __eq__(self, other):$/;"	m	class:SourceLocation
__eq__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __eq__(self, other):$/;"	m	class:SourceRange
__eq__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __eq__(self, other):$/;"	m	class:Type
__eq__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __eq__(self, other):$/;"	m	class:Cursor
__eq__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __eq__(self, other):$/;"	m	class:SourceLocation
__eq__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __eq__(self, other):$/;"	m	class:SourceRange
__eq__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __eq__(self, other):$/;"	m	class:Type
__eq__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __eq__(self, other):$/;"	m	class:OrderedDict
__eq__	plugged/vdebug/pythonx/vdebug/util.py	/^    def __eq__(self, other):$/;"	m	class:FilePath
__ge__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __ge__(self, other):$/;"	m	class:OrderedDict
__get__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __get__(self, instance, instance_type=None):$/;"	m	class:CachedProperty
__get__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __get__(self, instance, instance_type=None):$/;"	m	class:CachedProperty
__get_buf_list	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def __get_buf_list():$/;"	m	class:Ui	file:
__get_context_property	plugged/vdebug/tests/test_dbgp_context_property.py	/^    def __get_context_property(self,xml_string):$/;"	m	class:ContextPropertyAltTest	file:
__get_context_property	plugged/vdebug/tests/test_dbgp_context_property.py	/^    def __get_context_property(self,xml_string):$/;"	m	class:ContextPropertyDefaultTest	file:
__get_eval_property	plugged/vdebug/tests/test_dbgp_eval_property.py	/^    def __get_eval_property(self,xml_string,code,lang):$/;"	m	class:EvalPropertyTest	file:
__get_marker	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def __get_marker(self, property):$/;"	m	class:ContextGetResponseRenderer	file:
__get_word_end	plugged/vdebug/pythonx/vdebug/event.py	/^    def __get_word_end(line, column):$/;"	m	class:WatchWindowContextChangeEvent	file:
__get_word_start	plugged/vdebug/pythonx/vdebug/event.py	/^    def __get_word_start(line, column):$/;"	m	class:WatchWindowContextChangeEvent	file:
__getattr__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __getattr__(self, name):$/;"	m	class:OrderedDict
__getitem__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^            def __getitem__(self, key):$/;"	m	class:CodeCompletionResults.diagnostics.DiagnosticsItr
__getitem__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^            def __getitem__(self, key):$/;"	m	class:Diagnostic.fixits.FixItIterator
__getitem__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^            def __getitem__(self, key):$/;"	m	class:Diagnostic.ranges.RangeIterator
__getitem__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^            def __getitem__(self, key):$/;"	m	class:TranslationUnit.diagnostics.DiagIterator
__getitem__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^            def __getitem__(self, key):$/;"	m	class:Type.argument_types.ArgumentsIterator
__getitem__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __getitem__(self, i):$/;"	m	class:CompileCommands
__getitem__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __getitem__(self, key):$/;"	m	class:CCRStructure
__getitem__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __getitem__(self, key):$/;"	m	class:CompletionString
__getitem__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^            def __getitem__(self, key):$/;"	m	class:CodeCompletionResults.diagnostics.DiagnosticsItr
__getitem__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^            def __getitem__(self, key):$/;"	m	class:Diagnostic.fixits.FixItIterator
__getitem__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^            def __getitem__(self, key):$/;"	m	class:Diagnostic.ranges.RangeIterator
__getitem__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^            def __getitem__(self, key):$/;"	m	class:TranslationUnit.diagnostics.DiagIterator
__getitem__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^            def __getitem__(self, key):$/;"	m	class:Type.argument_types.ArgumentsIterator
__getitem__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __getitem__(self, i):$/;"	m	class:CompileCommands
__getitem__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __getitem__(self, key):$/;"	m	class:CCRStructure
__getitem__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __getitem__(self, key):$/;"	m	class:CompletionString
__getitem__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __getitem__(self, key):$/;"	m	class:OrderedDict
__gt__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __gt__(self, other):$/;"	m	class:OrderedDict
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^            def __init__(self, ccr):$/;"	m	class:CodeCompletionResults.diagnostics.DiagnosticsItr
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^            def __init__(self, diag):$/;"	m	class:Diagnostic.fixits.FixItIterator
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^            def __init__(self, diag):$/;"	m	class:Diagnostic.ranges.RangeIterator
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^            def __init__(self, parent):$/;"	m	class:Type.argument_types.ArgumentsIterator
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^            def __init__(self, tu):$/;"	m	class:TranslationUnit.diagnostics.DiagIterator
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^        def __init__(self, name):$/;"	m	class:CompletionChunk.Kind
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^        def __init__(self, name):$/;"	m	class:CompletionString.Availability
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __init__(self, ccmds):$/;"	m	class:CompileCommands
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __init__(self, cmd, ccmds):$/;"	m	class:CompileCommand
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __init__(self, completionString, key):$/;"	m	class:CompletionChunk
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __init__(self, enumeration, message):$/;"	m	class:CompilationDatabaseError
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __init__(self, enumeration, message):$/;"	m	class:TranslationUnitSaveError
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __init__(self, message):$/;"	m	class:LibclangError
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __init__(self, obj):$/;"	m	class:ClangObject
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __init__(self, ptr):$/;"	m	class:CodeCompletionResults
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __init__(self, ptr):$/;"	m	class:Diagnostic
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __init__(self, ptr, index):$/;"	m	class:TranslationUnit
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __init__(self, range, value):$/;"	m	class:FixIt
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __init__(self, src, tgt, loc, depth):$/;"	m	class:FileInclusion
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __init__(self, tu, memory, count):$/;"	m	class:TokenGroup
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __init__(self, value):$/;"	m	class:BaseEnumeration
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __init__(self, value):$/;"	m	class:RefQualifierKind
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __init__(self, value):$/;"	m	class:StorageClass
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __init__(self, value, name):$/;"	m	class:TokenKind
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __init__(self, wrapped):$/;"	m	class:CachedProperty
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/sources/cmake.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^            def __init__(self, ccr):$/;"	m	class:CodeCompletionResults.diagnostics.DiagnosticsItr
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^            def __init__(self, diag):$/;"	m	class:Diagnostic.fixits.FixItIterator
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^            def __init__(self, diag):$/;"	m	class:Diagnostic.ranges.RangeIterator
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^            def __init__(self, parent):$/;"	m	class:Type.argument_types.ArgumentsIterator
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^            def __init__(self, tu):$/;"	m	class:TranslationUnit.diagnostics.DiagIterator
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^        def __init__(self, name):$/;"	m	class:CompletionChunk.Kind
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^        def __init__(self, name):$/;"	m	class:CompletionString.Availability
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __init__(self, ccmds):$/;"	m	class:CompileCommands
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __init__(self, cmd, ccmds):$/;"	m	class:CompileCommand
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __init__(self, completionString, key):$/;"	m	class:CompletionChunk
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __init__(self, enumeration, message):$/;"	m	class:CompilationDatabaseError
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __init__(self, enumeration, message):$/;"	m	class:TranslationUnitSaveError
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __init__(self, message):$/;"	m	class:LibclangError
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __init__(self, obj):$/;"	m	class:ClangObject
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __init__(self, ptr):$/;"	m	class:CodeCompletionResults
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __init__(self, ptr):$/;"	m	class:Diagnostic
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __init__(self, ptr, index):$/;"	m	class:TranslationUnit
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __init__(self, range, value):$/;"	m	class:FixIt
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __init__(self, src, tgt, loc, depth):$/;"	m	class:FileInclusion
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __init__(self, tu, memory, count):$/;"	m	class:TokenGroup
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __init__(self, value):$/;"	m	class:BaseEnumeration
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __init__(self, value):$/;"	m	class:RefQualifierKind
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __init__(self, value):$/;"	m	class:StorageClass
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __init__(self, value, name):$/;"	m	class:TokenKind
__init__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __init__(self, wrapped):$/;"	m	class:CachedProperty
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def __init__(self, vim):$/;"	m	class:DeopleteHandlers
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def __init__(self, vim):$/;"	m	class:Child
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def __init__(self, vim):$/;"	m	class:Deoplete
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^    def __init__(self, handler):$/;"	m	class:RedirectStream
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/base.py	/^    def __init__(self, vim):$/;"	m	class:Base
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_paren.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_paren.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_abbr.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_kind.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_menu.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_fuzzy.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_head.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_length.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_word.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def __init__(self, vim, name=''):$/;"	m	class:DeopleteLogFilter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def __init__(self, vim, context):$/;"	m	class:Parent
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def __init__(self, plugin):$/;"	m	class:Process
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def __init__(self, vim):$/;"	m	class:Base
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/handler.py	/^    def __init__(self, filepath, conf_filename='.editorconfig',$/;"	m	class:EditorConfigHandler
__init__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/ini.py	/^    def __init__(self, filename):$/;"	m	class:EditorConfigParser
__init__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __init__(self, init_val=(), strict=False):$/;"	m	class:OrderedDict
__init__	plugged/neosnippet.vim/rplugin/python3/deoplete/sources/neosnippet.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def __init__(self):$/;"	m	class:Store
__init__	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def __init__(self, ui):$/;"	m	class:Breakpoint
__init__	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def __init__(self, ui, exception):$/;"	m	class:ExceptionBreakpoint
__init__	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def __init__(self, ui, expr):$/;"	m	class:WatchBreakpoint
__init__	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def __init__(self, ui, file, line):$/;"	m	class:LineBreakpoint
__init__	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def __init__(self, ui, file, line, condition):$/;"	m	class:ConditionalBreakpoint
__init__	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def __init__(self, ui, function):$/;"	m	class:CallBreakpoint
__init__	plugged/vdebug/pythonx/vdebug/connection.py	/^    def __init__(self):$/;"	m	class:SocketServer
__init__	plugged/vdebug/pythonx/vdebug/connection.py	/^    def __init__(self, host, port, message_q, output_q):$/;"	m	class:BackgroundSocketCreator
__init__	plugged/vdebug/pythonx/vdebug/connection.py	/^    def __init__(self, input_stream=None):$/;"	m	class:SocketCreator
__init__	plugged/vdebug/pythonx/vdebug/connection.py	/^    def __init__(self, socket, address):$/;"	m	class:ConnectionHandler
__init__	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def __init__(self, connection):$/;"	m	class:Api
__init__	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def __init__(self, node, code, language, parent=None, depth=0):$/;"	m	class:EvalProperty
__init__	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def __init__(self, node, parent=None, depth=0):$/;"	m	class:ContextProperty
__init__	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def __init__(self, response, cmd, cmd_args, api):$/;"	m	class:ContextGetResponse
__init__	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def __init__(self, response, cmd, cmd_args, api):$/;"	m	class:EvalResponse
__init__	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def __init__(self, response, cmd, cmd_args, api):$/;"	m	class:Response
__init__	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def __init__(self):$/;"	m	class:DebuggerInterface
__init__	plugged/vdebug/pythonx/vdebug/event.py	/^    def __init__(self, session_handler):$/;"	m	class:Dispatcher
__init__	plugged/vdebug/pythonx/vdebug/event.py	/^    def __init__(self, session_handler):$/;"	m	class:Event
__init__	plugged/vdebug/pythonx/vdebug/listener.py	/^    def __init__(self):$/;"	m	class:BackgroundListener
__init__	plugged/vdebug/pythonx/vdebug/listener.py	/^    def __init__(self):$/;"	m	class:ForegroundListener
__init__	plugged/vdebug/pythonx/vdebug/log.py	/^    def __init__(self, debug_level):$/;"	m	class:Logger
__init__	plugged/vdebug/pythonx/vdebug/log.py	/^    def __init__(self, debug_level, filename):$/;"	m	class:FileLogger
__init__	plugged/vdebug/pythonx/vdebug/log.py	/^    def __init__(self, debug_level, window):$/;"	m	class:WindowLogger
__init__	plugged/vdebug/pythonx/vdebug/log.py	/^    def __init__(self, string, level=Logger.INFO):$/;"	m	class:Log
__init__	plugged/vdebug/pythonx/vdebug/opts.py	/^    def __init__(self, options):$/;"	m	class:Options
__init__	plugged/vdebug/pythonx/vdebug/session.py	/^    def __init__(self, ui, breakpoints):$/;"	m	class:SessionHandler
__init__	plugged/vdebug/pythonx/vdebug/session.py	/^    def __init__(self, ui, breakpoints, keymapper):$/;"	m	class:Session
__init__	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    def __init__(self):$/;"	m	class:Ui
__init__	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def __init__(self):$/;"	m	class:TraceWindow
__init__	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def __init__(self):$/;"	m	class:Ui
__init__	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def __init__(self):$/;"	m	class:WatchWindow
__init__	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def __init__(self):$/;"	m	class:Window
__init__	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def __init__(self):$/;"	m	class:WindowManager
__init__	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def __init__(self, buffer):$/;"	m	class:VimBuffer
__init__	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def __init__(self, buffer=None):$/;"	m	class:HiddenBuffer
__init__	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def __init__(self, response):$/;"	m	class:ResponseRenderer
__init__	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def __init__(self, response, title=None, contexts=None, current_context=0):$/;"	m	class:ContextGetResponseRenderer
__init__	plugged/vdebug/pythonx/vdebug/util.py	/^    def __init__(self):$/;"	m	class:Keymapper
__init__	plugged/vdebug/pythonx/vdebug/util.py	/^    def __init__(self, filename):$/;"	m	class:FilePath
__init__	plugged/vdebug/pythonx/vdebug/util.py	/^    def __init__(self, session_handler):$/;"	m	class:ExceptionHandler
__init__	plugged/vdebug/tests/test_connection.py	/^    def __init__(self):$/;"	m	class:SocketMock
__init__	plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^	def __init__(self, vim):$/;"	m	class:Filter
__init_children	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def __init_children(self, node):$/;"	m	class:ContextProperty	file:
__initialize_breakpoints	plugged/vdebug/pythonx/vdebug/session.py	/^    def __initialize_breakpoints(self):$/;"	m	class:Session	file:
__iter__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    __iter__ = iterkeys$/;"	v	class:OrderedDict	file:
__kindNumber	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __kindNumber(self):$/;"	m	class:CompletionChunk	file:
__kindNumber	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __kindNumber(self):$/;"	m	class:CompletionChunk	file:
__le__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __le__(self, other):$/;"	m	class:OrderedDict
__len__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^            def __len__(self):$/;"	m	class:CodeCompletionResults.diagnostics.DiagnosticsItr
__len__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^            def __len__(self):$/;"	m	class:Diagnostic.fixits.FixItIterator
__len__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^            def __len__(self):$/;"	m	class:Diagnostic.ranges.RangeIterator
__len__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^            def __len__(self):$/;"	m	class:TranslationUnit.diagnostics.DiagIterator
__len__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^            def __len__(self):$/;"	m	class:Type.argument_types.ArgumentsIterator
__len__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __len__(self):$/;"	m	class:CCRStructure
__len__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __len__(self):$/;"	m	class:CompileCommands
__len__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __len__(self):$/;"	m	class:CompletionString
__len__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^            def __len__(self):$/;"	m	class:CodeCompletionResults.diagnostics.DiagnosticsItr
__len__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^            def __len__(self):$/;"	m	class:Diagnostic.fixits.FixItIterator
__len__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^            def __len__(self):$/;"	m	class:Diagnostic.ranges.RangeIterator
__len__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^            def __len__(self):$/;"	m	class:TranslationUnit.diagnostics.DiagIterator
__len__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^            def __len__(self):$/;"	m	class:Type.argument_types.ArgumentsIterator
__len__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __len__(self):$/;"	m	class:CCRStructure
__len__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __len__(self):$/;"	m	class:CompileCommands
__len__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __len__(self):$/;"	m	class:CompletionString
__lt__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __lt__(self, other):$/;"	m	class:OrderedDict
__ne__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __ne__(self, other):$/;"	m	class:Cursor
__ne__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __ne__(self, other):$/;"	m	class:SourceLocation
__ne__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __ne__(self, other):$/;"	m	class:SourceRange
__ne__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __ne__(self, other):$/;"	m	class:Type
__ne__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __ne__(self, other):$/;"	m	class:Cursor
__ne__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __ne__(self, other):$/;"	m	class:SourceLocation
__ne__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __ne__(self, other):$/;"	m	class:SourceRange
__ne__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __ne__(self, other):$/;"	m	class:Type
__ne__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __ne__(self, other):$/;"	m	class:OrderedDict
__ne__	plugged/vdebug/pythonx/vdebug/util.py	/^    def __ne__(self, other):$/;"	m	class:FilePath
__new_session	plugged/vdebug/pythonx/vdebug/session.py	/^    def __new_session(self):$/;"	m	class:SessionHandler	file:
__open	plugged/vdebug/pythonx/vdebug/log.py	/^    def __open(self):$/;"	m	class:FileLogger	file:
__parse_error	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def __parse_error(self):$/;"	m	class:Response	file:
__parse_init_msg	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def __parse_init_msg(self, msg):$/;"	m	class:Api	file:
__peek_for_exit	plugged/vdebug/pythonx/vdebug/connection.py	/^    def __peek_for_exit(self):$/;"	m	class:BackgroundSocketCreator	file:
__radd__	plugged/vdebug/pythonx/vdebug/util.py	/^    def __radd__(self, other):$/;"	m	class:FilePath
__recv_body	plugged/vdebug/pythonx/vdebug/connection.py	/^    def __recv_body(self, to_recv):$/;"	m	class:ConnectionHandler	file:
__recv_length	plugged/vdebug/pythonx/vdebug/connection.py	/^    def __recv_length(self):$/;"	m	class:ConnectionHandler	file:
__recv_null	plugged/vdebug/pythonx/vdebug/connection.py	/^    def __recv_null(self):$/;"	m	class:ConnectionHandler	file:
__render_property	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def __render_property(self, p, next_p, last=False, indent=0):$/;"	m	class:ContextGetResponseRenderer	file:
__repr__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^        def __repr__(self):$/;"	m	class:CompletionChunk.Kind
__repr__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^        def __repr__(self):$/;"	m	class:CompletionString.Availability
__repr__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:AccessSpecifier
__repr__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:BaseEnumeration
__repr__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:CodeCompletionResult
__repr__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:CompletionChunk
__repr__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:CompletionString
__repr__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:CursorKind
__repr__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:Diagnostic
__repr__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:File
__repr__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:FixIt
__repr__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:RefQualifierKind
__repr__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:SourceLocation
__repr__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:SourceRange
__repr__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:StorageClass
__repr__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:TokenKind
__repr__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:TypeKind
__repr__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^        def __repr__(self):$/;"	m	class:CompletionChunk.Kind
__repr__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^        def __repr__(self):$/;"	m	class:CompletionString.Availability
__repr__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:AccessSpecifier
__repr__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:BaseEnumeration
__repr__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:CodeCompletionResult
__repr__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:CompletionChunk
__repr__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:CompletionString
__repr__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:CursorKind
__repr__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:Diagnostic
__repr__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:File
__repr__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:FixIt
__repr__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:RefQualifierKind
__repr__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:SourceLocation
__repr__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:SourceRange
__repr__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:StorageClass
__repr__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:TokenKind
__repr__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __repr__(self):$/;"	m	class:TypeKind
__repr__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __repr__(self):$/;"	m	class:OrderedDict
__repr__	plugged/vdebug/pythonx/vdebug/util.py	/^    def __repr__(self):$/;"	m	class:FilePath
__set_features	plugged/vdebug/pythonx/vdebug/session.py	/^    def __set_features(self):$/;"	m	class:Session	file:
__setattr__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __setattr__(self, name, value):$/;"	m	class:OrderedDict
__setitem__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def __setitem__(self, key, val):$/;"	m	class:OrderedDict
__str__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^        def __str__(self):$/;"	m	class:CompletionChunk.Kind
__str__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^        def __str__(self):$/;"	m	class:CompletionString.Availability
__str__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __str__(self):$/;"	m	class:File
__str__	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def __str__(self):$/;"	m	class:LibclangError
__str__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^        def __str__(self):$/;"	m	class:CompletionChunk.Kind
__str__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^        def __str__(self):$/;"	m	class:CompletionString.Availability
__str__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __str__(self):$/;"	m	class:File
__str__	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def __str__(self):$/;"	m	class:LibclangError
__str__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    __str__ = __repr__$/;"	v	class:OrderedDict	file:
__str__	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def __str__(self):$/;"	m	class:Breakpoint
__str__	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def __str__(self):$/;"	m	class:BreakpointSetResponse
__str__	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def __str__(self):$/;"	m	class:FeatureGetResponse
__str__	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def __str__(self):$/;"	m	class:Response
__str__	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def __str__(self):$/;"	m	class:StatusResponse
__str__	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def __str__(self):$/;"	m	class:TraceResponse
__str__	plugged/vdebug/pythonx/vdebug/util.py	/^    def __str__(self):$/;"	m	class:FilePath
__update_stack	plugged/vdebug/pythonx/vdebug/event.py	/^    def __update_stack(self):$/;"	m	class:RefreshEvent	file:
__version__	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/__init__.py	/^__version__ = join_version(VERSION)$/;"	v
_actual_log	plugged/vdebug/pythonx/vdebug/log.py	/^    def _actual_log(self, string, level):$/;"	m	class:FileLogger
_actual_log	plugged/vdebug/pythonx/vdebug/log.py	/^    def _actual_log(self, string, level):$/;"	m	class:Logger
_actual_log	plugged/vdebug/pythonx/vdebug/log.py	/^    def _actual_log(self, string, level):$/;"	m	class:WindowLogger
_add_filter	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _add_filter(self, path):$/;"	m	class:Child
_add_source	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _add_source(self, path):$/;"	m	class:Child
_cache	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/fnmatch.py	/^_cache = {}$/;"	v
_command	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def _command(self, name):$/;"	m	class:WindowManager
_create_child	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def _create_child(self, node, parent, depth):$/;"	m	class:ContextProperty
_create_child	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def _create_child(self, node, parent, depth):$/;"	m	class:EvalProperty
_create_local	plugged/vdebug/pythonx/vdebug/util.py	/^    def _create_local(self, f):$/;"	m	class:FilePath
_create_local	plugged/vdebug/pythonx/vdebug/util.py	/^    def _create_local(self, f):$/;"	m	class:LocalFilePath
_create_remote	plugged/vdebug/pythonx/vdebug/util.py	/^    def _create_remote(f):$/;"	m	class:FilePath
_create_remote	plugged/vdebug/pythonx/vdebug/util.py	/^    def _create_remote(self, f):$/;"	m	class:RemoteFilePath
_ctx	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_matcher_fuzzy.py	/^def _ctx(complete_str, ignorecase=True, camelcase=True):$/;"	f
_data	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _data = None$/;"	v	class:SourceLocation
_data	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _data = None$/;"	v	class:SourceLocation
_determine_children	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def _determine_children(self, node):$/;"	m	class:ContextProperty
_determine_displayname	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def _determine_displayname(self, node):$/;"	m	class:ContextProperty
_determine_displayname	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def _determine_displayname(self, node):$/;"	m	class:EvalProperty
_docker_test	plugged/neomake/Makefile	/^_docker_test: DOCKER_MAKE_TARGET=$(DOCKER_MAKE_TEST_TARGET) \\$/;"	t
_docker_test	plugged/neomake/Makefile	/^_docker_test: DOCKER_VIM:=vim-master$/;"	t
_docker_test	plugged/neomake/Makefile	/^_docker_test: docker_make$/;"	t
_enable_logging	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _enable_logging(self):$/;"	m	class:Child
_fields_	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _fields_ = [$/;"	v	class:SourceRange
_fields_	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _fields_ = [$/;"	v	class:Token
_fields_	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _fields_ = [("_kind_id", c_int), ("data", c_void_p * 2)]$/;"	v	class:Type
_fields_	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _fields_ = [("_kind_id", c_int), ("xdata", c_int), ("data", c_void_p * 3)]$/;"	v	class:Cursor
_fields_	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _fields_ = [("_spelling", c_char_p), ("free", c_int)]$/;"	v	class:_CXString
_fields_	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _fields_ = [("name", c_char_p), ("contents", c_char_p), ('length', c_ulong)]$/;"	v	class:_CXUnsavedFile
_fields_	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _fields_ = [("ptr_data", c_void_p * 2), ("int_data", c_uint)]$/;"	v	class:SourceLocation
_fields_	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _fields_ = [('cursorKind', c_int), ('completionString', c_object_p)]$/;"	v	class:CodeCompletionResult
_fields_	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _fields_ = [('results', POINTER(CodeCompletionResult)),$/;"	v	class:CCRStructure
_fields_	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _fields_ = [$/;"	v	class:SourceRange
_fields_	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _fields_ = [$/;"	v	class:Token
_fields_	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _fields_ = [("_kind_id", c_int), ("data", c_void_p * 2)]$/;"	v	class:Type
_fields_	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _fields_ = [("_kind_id", c_int), ("xdata", c_int), ("data", c_void_p * 3)]$/;"	v	class:Cursor
_fields_	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _fields_ = [("_spelling", c_char_p), ("free", c_int)]$/;"	v	class:_CXString
_fields_	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _fields_ = [("name", c_char_p), ("contents", c_char_p), ('length', c_ulong)]$/;"	v	class:_CXUnsavedFile
_fields_	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _fields_ = [("ptr_data", c_void_p * 2), ("int_data", c_uint)]$/;"	v	class:SourceLocation
_fields_	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _fields_ = [('cursorKind', c_int), ('completionString', c_object_p)]$/;"	v	class:CodeCompletionResult
_fields_	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _fields_ = [('results', POINTER(CodeCompletionResult)),$/;"	v	class:CCRStructure
_findSeparator	plugged/vdebug/pythonx/vdebug/util.py	/^    def _findSeparator(path):$/;"	m	class:FilePath
_fzf_statusline	plugged/fzf.vim/plugin/fzf.vim	/^  augroup _fzf_statusline$/;"	a
_gather_async_results	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _gather_async_results(self, result, source):$/;"	m	class:Child
_gather_commands	plugged/deoplete-clang/rplugin/python3/deoplete/sources/cmake.py	/^    def _gather_commands(self):$/;"	m	class:Source
_gather_identifier	plugged/deoplete-clang/rplugin/python3/deoplete/sources/cmake.py	/^    def _gather_identifier(self):$/;"	m	class:Source
_gather_results	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _gather_results(self, context):$/;"	m	class:Child
_gather_variables	plugged/deoplete-clang/rplugin/python3/deoplete/sources/cmake.py	/^    def _gather_variables(self):$/;"	m	class:Source
_get	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _get(self, queue_id):$/;"	m	class:Parent
_get_command_help_text	plugged/deoplete-clang/rplugin/python3/deoplete/sources/cmake.py	/^    def _get_command_help_text(self, command):$/;"	m	class:Source
_get_complete_position	plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def _get_complete_position(self, context, current_ft, filetype):$/;"	m	class:Source
_get_cpsm_result	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^    def _get_cpsm_result(self, candidates, pattern):$/;"	m	class:Filter
_get_dictionaries	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def _get_dictionaries(self, context):$/;"	m	class:Source
_get_enc_node_text	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def _get_enc_node_text(self, node, name, default=None):$/;"	m	class:ContextProperty
_get_event_by_position	plugged/vdebug/pythonx/vdebug/event.py	/^    def _get_event_by_position(session):$/;"	m	class:Dispatcher
_get_instantiation	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def _get_instantiation(self):$/;"	m	class:SourceLocation
_get_instantiation	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def _get_instantiation(self):$/;"	m	class:SourceLocation
_get_tagfiles	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^    def _get_tagfiles(self, context):$/;"	m	class:Source
_is_skip	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _is_skip(self, context, source):$/;"	m	class:Child
_itersource	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _itersource(self, context):$/;"	m	class:Child
_kinds	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _kinds = []$/;"	v	class:AccessSpecifier
_kinds	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _kinds = []$/;"	v	class:CursorKind
_kinds	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _kinds = []$/;"	v	class:RefQualifierKind
_kinds	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _kinds = []$/;"	v	class:StorageClass
_kinds	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _kinds = []$/;"	v	class:TemplateArgumentKind
_kinds	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _kinds = []$/;"	v	class:TypeKind
_kinds	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _kinds = []$/;"	v	class:AccessSpecifier
_kinds	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _kinds = []$/;"	v	class:CursorKind
_kinds	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _kinds = []$/;"	v	class:RefQualifierKind
_kinds	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _kinds = []$/;"	v	class:StorageClass
_kinds	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _kinds = []$/;"	v	class:TemplateArgumentKind
_kinds	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _kinds = []$/;"	v	class:TypeKind
_logger	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    _logger = None  # type: logging.Logger$/;"	v	class:LoggingMixin
_longest_path_that_exists	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def _longest_path_that_exists(self, context, input_str):$/;"	m	class:Source
_make_cache	plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def _make_cache(self, context):$/;"	m	class:Source
_make_cache	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def _make_cache(self, context):$/;"	m	class:Source
_make_candidate	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^    def _make_candidate(self, line):$/;"	m	class:Source
_merge_results	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _merge_results(self, context, queue_id):$/;"	m	class:Child
_name_map	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _name_map = None$/;"	v	class:AccessSpecifier
_name_map	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _name_map = None$/;"	v	class:CursorKind
_name_map	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _name_map = None$/;"	v	class:RefQualifierKind
_name_map	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _name_map = None$/;"	v	class:StorageClass
_name_map	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _name_map = None$/;"	v	class:TemplateArgumentKind
_name_map	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _name_map = None$/;"	v	class:TypeKind
_name_map	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _name_map = None$/;"	v	class:AccessSpecifier
_name_map	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _name_map = None$/;"	v	class:CursorKind
_name_map	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _name_map = None$/;"	v	class:RefQualifierKind
_name_map	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _name_map = None$/;"	v	class:StorageClass
_name_map	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _name_map = None$/;"	v	class:TemplateArgumentKind
_name_map	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _name_map = None$/;"	v	class:TypeKind
_on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _on_event(self, context):$/;"	m	class:Child
_process_filter	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _process_filter(self, f, context):$/;"	m	class:Child
_profile_end	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _profile_end(self, name):$/;"	m	class:Child
_profile_start	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _profile_start(self, context, name):$/;"	m	class:Child
_put	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _put(self, name, args):$/;"	m	class:Parent
_read	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/ini.py	/^    def _read(self, fp, fpname):$/;"	m	class:EditorConfigParser
_refresh_commands	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def _refresh_commands(self):$/;"	m	class:WindowManager
_reload_keys	plugged/vdebug/pythonx/vdebug/util.py	/^    def _reload_keys(self):$/;"	m	class:Keymapper
_run_interactive	plugged/neomake/Makefile	/^_run_interactive: VADER:=Vader$/;"	t
_run_interactive	plugged/neomake/Makefile	/^_run_interactive: _REDIR_STDOUT:=$/;"	t
_run_interactive	plugged/neomake/Makefile	/^_run_interactive:$/;"	t
_set_custom	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _set_custom(self, custom):$/;"	m	class:Child
_set_source_attributes	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _set_source_attributes(self, context):$/;"	m	class:Child
_start_process	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _start_process(self, context):$/;"	m	class:Parent
_store_old_map	plugged/vdebug/pythonx/vdebug/util.py	/^    def _store_old_map(self):$/;"	m	class:Keymapper
_substitute_path	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def _substitute_path(self, context, path):$/;"	m	class:Source
_update_result	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _update_result(self, result, context_input):$/;"	m	class:Child
_use_previous_result	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _use_previous_result(self, context, result, is_volatile):$/;"	m	class:Child
_value_map	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    _value_map = {} # int -> TokenKind$/;"	v	class:TokenKind
_value_map	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    _value_map = {} # int -> TokenKind$/;"	v	class:TokenKind
_version_re	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/versiontools.py	/^_version_re = re.compile(r'^(\\d+)\\.(\\d+)\\.(\\d+)(\\..*)?$', re.VERBOSE)$/;"	v
_write	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _write(self, stdout, expr):$/;"	m	class:Child
a	plugged/vim-php-cs-fixer/tests/fixtures/misc/no_closing_tag,full_opening_tag.php	/^$a = 1;$/;"	v
a	plugged/vim-php-cs-fixer/tests/fixtures/misc/simplified_null_return,no_useless_return,no_whitespace_in_blank_line,blank_line_before_return,no_extra_consecutive_blank_lines.php	/^    private static function a($a) {$/;"	f	class:Test
a	plugged/vim-php-cs-fixer/tests/results/misc/no_closing_tag,full_opening_tag.php	/^$a = 1;$/;"	v
a	plugged/vim-php-cs-fixer/tests/results/misc/simplified_null_return,no_useless_return,no_whitespace_in_blank_line,blank_line_before_return,no_extra_consecutive_blank_lines.php	/^    private static function a($a)$/;"	f	class:Test
ac	plugged/vim-gitgutter/plugin/gitgutter.vim	/^    omap ac <Plug>GitGutterTextObjectOuterPending$/;"	m
ac	plugged/vim-gitgutter/plugin/gitgutter.vim	/^    xmap ac <Plug>GitGutterTextObjectOuterVisual$/;"	m
accept_renderer	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def accept_renderer(self, renderer):$/;"	m	class:Window
access_specifier	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def access_specifier(self):$/;"	m	class:Cursor
access_specifier	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def access_specifier(self):$/;"	m	class:Cursor
acorn	plugged/nova-vim/package-lock.json	/^        "acorn": "3.3.0"$/;"	s	object:dependencies.acorn-jsx.requires
acorn	plugged/nova-vim/package-lock.json	/^        "acorn": "5.0.3",$/;"	s	object:dependencies.espree.requires
acorn	plugged/nova-vim/package-lock.json	/^        "acorn": {$/;"	o	object:dependencies.acorn-jsx.dependencies
acorn	plugged/nova-vim/package-lock.json	/^    "acorn": {$/;"	o	object:dependencies
acorn-jsx	plugged/nova-vim/package-lock.json	/^        "acorn-jsx": "3.0.1"$/;"	s	object:dependencies.espree.requires
acorn-jsx	plugged/nova-vim/package-lock.json	/^    "acorn-jsx": {$/;"	o	object:dependencies
add_breakpoint	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def add_breakpoint(self, breakpoint):$/;"	m	class:Store
add_breakpoint	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def add_breakpoint(self, breakpoint):$/;"	m	class:BreakpointWindow
add_filter	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def add_filter(self, path):$/;"	m	class:Parent
add_response	plugged/vdebug/tests/test_connection.py	/^    def add_response(self,res):$/;"	m	class:SocketMock
add_source	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def add_source(self, path):$/;"	m	class:Parent
after	plugged/vim-multiple-cursors/spec/benchmark_spec.rb	/^def after(string)$/;"	f
after	plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def after(string)$/;"	f
airline	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^augroup airline#extensions#cursormode$/;"	a
airline	plugged/vim-airline/plugin/airline.vim	/^    augroup airline$/;"	a
airline#add_inactive_statusline_func	plugged/vim-airline/autoload/airline.vim	/^function! airline#add_inactive_statusline_func(name)$/;"	f
airline#add_statusline_func	plugged/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_func(name)$/;"	f
airline#add_statusline_funcref	plugged/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_funcref(function)$/;"	f
airline#async#get_mq_async	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#get_mq_async(cmd, file)$/;"	f
airline#async#get_msgfmt_stat	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#get_msgfmt_stat(cmd, file)$/;"	f
airline#async#mq_output	plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#mq_output(buf, file)$/;"	f
airline#async#nvim_get_mq_async	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_get_mq_async(cmd, file)$/;"	f
airline#async#nvim_get_msgfmt_stat	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_get_msgfmt_stat(cmd, file)$/;"	f
airline#async#nvim_vcs_untracked	plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#nvim_vcs_untracked(cfg, file, vcs)$/;"	f
airline#async#vim_vcs_untracked	plugged/vim-airline/autoload/airline/async.vim	/^  function airline#async#vim_vcs_untracked(config, file)$/;"	f
airline#builder#get_next_group	plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#get_next_group(sections, i)$/;"	f
airline#builder#get_prev_group	plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#get_prev_group(sections, i)$/;"	f
airline#builder#new	plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#new(context)$/;"	f
airline#builder#should_change_group	plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#should_change_group(group1, group2)$/;"	f
airline#check_mode	plugged/vim-airline/autoload/airline.vim	/^function! airline#check_mode(winnr)$/;"	f
airline#cmdwinenter	plugged/vim-airline/plugin/airline.vim	/^function! airline#cmdwinenter(...)$/;"	f
airline#debug#profile1	plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile1()$/;"	f
airline#debug#profile2	plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile2()$/;"	f
airline#debug#profile3	plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile3()$/;"	f
airline#extensions#ale#get	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get(type)$/;"	f
airline#extensions#ale#get_error	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get_error()$/;"	f
airline#extensions#ale#get_warning	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get_warning()$/;"	f
airline#extensions#ale#init	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#init(ext)$/;"	f
airline#extensions#append_to_section	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#append_to_section(name, value)$/;"	f
airline#extensions#apply	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply(...)$/;"	f
airline#extensions#apply_left_override	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply_left_override(section1, section2)$/;"	f
airline#extensions#branch#get_head	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#get_head()$/;"	f
airline#extensions#branch#head	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#head()$/;"	f
airline#extensions#branch#init	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#init(ext)$/;"	f
airline#extensions#branch#update_untracked_config	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#update_untracked_config(file, vcs)$/;"	f
airline#extensions#bufferline#init	plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^function! airline#extensions#bufferline#init(ext)$/;"	f
airline#extensions#capslock#init	plugged/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#init(ext)$/;"	f
airline#extensions#capslock#status	plugged/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#status()$/;"	f
airline#extensions#commandt#apply	plugged/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#apply(...)$/;"	f
airline#extensions#commandt#init	plugged/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#init(ext)$/;"	f
airline#extensions#csv#apply	plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#apply(...)$/;"	f
airline#extensions#csv#get_column	plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#get_column()$/;"	f
airline#extensions#csv#init	plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#init(ext)$/;"	f
airline#extensions#ctrlp#apply	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#apply(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline_status	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline_status(...)$/;"	f
airline#extensions#ctrlp#generate_color_map	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#generate_color_map(dark, light, white)$/;"	f
airline#extensions#ctrlp#init	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#init(ext)$/;"	f
airline#extensions#ctrlp#load_theme	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#load_theme(palette)$/;"	f
airline#extensions#ctrlspace#init	plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#init(ext)$/;"	f
airline#extensions#ctrlspace#statusline	plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#statusline(...)$/;"	f
airline#extensions#cursormode#activate	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#activate()$/;"	f
airline#extensions#cursormode#apply	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#apply(...)$/;"	f
airline#extensions#cursormode#init	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#init(ext)$/;"	f
airline#extensions#cursormode#set	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#set(...)$/;"	f
airline#extensions#cursormode#tmux_escape	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#tmux_escape(escape)$/;"	f
airline#extensions#default#apply	plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! airline#extensions#default#apply(builder, context)$/;"	f
airline#extensions#denite#apply	plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#apply(...)$/;"	f
airline#extensions#denite#check_denite_mode	plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#check_denite_mode(bufnr)$/;"	f
airline#extensions#denite#init	plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#init(ext)$/;"	f
airline#extensions#eclim#creat_line	plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#creat_line(...)$/;"	f
airline#extensions#eclim#get_warnings	plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#get_warnings()$/;"	f
airline#extensions#eclim#init	plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#init(ext)$/;"	f
airline#extensions#example#apply	plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#apply(...)$/;"	f
airline#extensions#example#get_cats	plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#get_cats()$/;"	f
airline#extensions#example#init	plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#init(ext)$/;"	f
airline#extensions#fugitiveline#bufname	plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! airline#extensions#fugitiveline#bufname()$/;"	f
airline#extensions#fugitiveline#init	plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! airline#extensions#fugitiveline#init(ext)$/;"	f
airline#extensions#gutentags#init	plugged/vim-airline/autoload/airline/extensions/gutentags.vim	/^function! airline#extensions#gutentags#init(ext)$/;"	f
airline#extensions#gutentags#status	plugged/vim-airline/autoload/airline/extensions/gutentags.vim	/^function! airline#extensions#gutentags#status()$/;"	f
airline#extensions#hunks#get_hunks	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#get_hunks()$/;"	f
airline#extensions#hunks#init	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#init(ext)$/;"	f
airline#extensions#keymap#init	plugged/vim-airline/autoload/airline/extensions/keymap.vim	/^function! airline#extensions#keymap#init(ext)$/;"	f
airline#extensions#keymap#status	plugged/vim-airline/autoload/airline/extensions/keymap.vim	/^function! airline#extensions#keymap#status()$/;"	f
airline#extensions#load	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load()$/;"	f
airline#extensions#load_theme	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load_theme()$/;"	f
airline#extensions#localsearch#apply	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#apply(...)$/;"	f
airline#extensions#localsearch#init	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#init(ext)$/;"	f
airline#extensions#localsearch#load_theme	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#load_theme(palette)$/;"	f
airline#extensions#neomake#get_errors	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#get_errors()$/;"	f
airline#extensions#neomake#get_warnings	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#get_warnings()$/;"	f
airline#extensions#neomake#init	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#init(ext)$/;"	f
airline#extensions#netrw#apply	plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#apply(...)$/;"	f
airline#extensions#netrw#init	plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#init(ext)$/;"	f
airline#extensions#netrw#sortstring	plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#sortstring()$/;"	f
airline#extensions#nrrwrgn#apply	plugged/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#apply(...)$/;"	f
airline#extensions#nrrwrgn#init	plugged/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#init(ext)$/;"	f
airline#extensions#obsession#get_status	plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^function! airline#extensions#obsession#get_status()$/;"	f
airline#extensions#obsession#init	plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^function! airline#extensions#obsession#init(ext)$/;"	f
airline#extensions#po#apply	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#apply(...)$/;"	f
airline#extensions#po#init	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#init(ext)$/;"	f
airline#extensions#po#shorten	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#shorten()$/;"	f
airline#extensions#po#stats	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#stats()$/;"	f
airline#extensions#prepend_to_section	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#prepend_to_section(name, value)$/;"	f
airline#extensions#promptline#init	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#init(ext)$/;"	f
airline#extensions#promptline#set_prompt_colors	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#set_prompt_colors(palette)$/;"	f
airline#extensions#quickfix#apply	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#apply(...)$/;"	f
airline#extensions#quickfix#inactive_qf_window	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#inactive_qf_window(...)$/;"	f
airline#extensions#quickfix#init	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#init(ext)$/;"	f
airline#extensions#syntastic#get	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get(type)$/;"	f
airline#extensions#syntastic#get_error	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_error()$/;"	f
airline#extensions#syntastic#get_warning	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_warning()$/;"	f
airline#extensions#syntastic#init	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#init(ext)$/;"	f
airline#extensions#tabline#add_label	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#add_label(dict, type)$/;"	f
airline#extensions#tabline#autoshow#off	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#off()$/;"	f
airline#extensions#tabline#autoshow#on	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#on()$/;"	f
airline#extensions#tabline#buffers#clickbuf	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#clickbuf(minwid, clicks, button, modifiers) abort$/;"	f
airline#extensions#tabline#buffers#get	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#get()$/;"	f
airline#extensions#tabline#buffers#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#invalidate()$/;"	f
airline#extensions#tabline#buffers#off	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#off()$/;"	f
airline#extensions#tabline#buffers#on	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#on()$/;"	f
airline#extensions#tabline#buflist#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#invalidate()$/;"	f
airline#extensions#tabline#buflist#list	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#list()$/;"	f
airline#extensions#tabline#builder#new	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! airline#extensions#tabline#builder#new(context)$/;"	f
airline#extensions#tabline#ctrlspace#add_buffer_section	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#add_buffer_section(builder, cur_tab, cur_buf, pos/;"	f
airline#extensions#tabline#ctrlspace#add_tab_section	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#add_tab_section(builder, pos)$/;"	f
airline#extensions#tabline#ctrlspace#get	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#get()$/;"	f
airline#extensions#tabline#ctrlspace#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#invalidate()$/;"	f
airline#extensions#tabline#ctrlspace#off	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#off()$/;"	f
airline#extensions#tabline#ctrlspace#on	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#on()$/;"	f
airline#extensions#tabline#formatters#default#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^function! airline#extensions#tabline#formatters#default#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#default#wrap_name	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^function! airline#extensions#tabline#formatters#default#wrap_name(bufnr, buffer_name)$/;"	f
airline#extensions#tabline#formatters#jsformatter#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/jsformatter.vim	/^function! airline#extensions#tabline#formatters#jsformatter#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#tabnr#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/tabnr.vim	/^function! airline#extensions#tabline#formatters#tabnr#format(tab_nr_type, nr)$/;"	f
airline#extensions#tabline#formatters#unique_tail#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail.vim	/^function! airline#extensions#tabline#formatters#unique_tail#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#unique_tail_improved#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^function! airline#extensions#tabline#formatters#unique_tail_improved#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#webdevicons#format	plugged/vim-devicons/autoload/airline/extensions/tabline/formatters/webdevicons.vim	/^function! airline#extensions#tabline#formatters#webdevicons#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#get	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get()$/;"	f
airline#extensions#tabline#get_buffer_name	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get_buffer_name(nr, ...)$/;"	f
airline#extensions#tabline#group_of_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#group_of_bufnr(tab_bufs, bufnr)$/;"	f
airline#extensions#tabline#init	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#init(ext)$/;"	f
airline#extensions#tabline#load_theme	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#load_theme(palette)$/;"	f
airline#extensions#tabline#new_builder	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#new_builder()$/;"	f
airline#extensions#tabline#tabs#get	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#get()$/;"	f
airline#extensions#tabline#tabs#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#invalidate()$/;"	f
airline#extensions#tabline#tabs#map_keys	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#map_keys()$/;"	f
airline#extensions#tabline#tabs#off	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#off()$/;"	f
airline#extensions#tabline#tabs#on	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#on()$/;"	f
airline#extensions#tabline#tabs#tabnr_formatter	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#tabnr_formatter(nr, i)$/;"	f
airline#extensions#tabline#title	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#title(n)$/;"	f
airline#extensions#tagbar#currenttag	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#currenttag()$/;"	f
airline#extensions#tagbar#get_status	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#get_status(...)$/;"	f
airline#extensions#tagbar#inactive_apply	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#inactive_apply(...)$/;"	f
airline#extensions#tagbar#init	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#init(ext)$/;"	f
airline#extensions#term#apply	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#apply(...)$/;"	f
airline#extensions#term#init	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#init(ext)$/;"	f
airline#extensions#tmuxline#init	plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#init(ext)$/;"	f
airline#extensions#tmuxline#set_tmux_colors	plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#set_tmux_colors(palette)$/;"	f
airline#extensions#undotree#apply	plugged/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#apply(...)$/;"	f
airline#extensions#undotree#init	plugged/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#init(ext)$/;"	f
airline#extensions#unicode#apply	plugged/vim-airline/autoload/airline/extensions/unicode.vim	/^function! airline#extensions#unicode#apply(...)$/;"	f
airline#extensions#unicode#init	plugged/vim-airline/autoload/airline/extensions/unicode.vim	/^function! airline#extensions#unicode#init(ext)$/;"	f
airline#extensions#unite#apply	plugged/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#apply(...)$/;"	f
airline#extensions#unite#init	plugged/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#init(ext)$/;"	f
airline#extensions#vimagit#apply	plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#apply(...)$/;"	f
airline#extensions#vimagit#get_mode	plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#get_mode()$/;"	f
airline#extensions#vimagit#init	plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#init(ext)$/;"	f
airline#extensions#vimtex#apply	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#apply(...)$/;"	f
airline#extensions#vimtex#get_scope	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#get_scope()$/;"	f
airline#extensions#vimtex#init	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#init(ext)$/;"	f
airline#extensions#virtualenv#apply	plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#apply(...)$/;"	f
airline#extensions#virtualenv#init	plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#init(ext)$/;"	f
airline#extensions#virtualenv#update	plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#update()$/;"	f
airline#extensions#whitespace#check	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#check()$/;"	f
airline#extensions#whitespace#disable	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#disable()$/;"	f
airline#extensions#whitespace#init	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#init(...)$/;"	f
airline#extensions#whitespace#toggle	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#toggle()$/;"	f
airline#extensions#windowswap#get_status	plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#get_status()$/;"	f
airline#extensions#windowswap#init	plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#init(ext)$/;"	f
airline#extensions#wordcount#apply	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! airline#extensions#wordcount#apply(...)$/;"	f
airline#extensions#wordcount#formatters#default#format	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! airline#extensions#wordcount#formatters#default#format()$/;"	f
airline#extensions#wordcount#init	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! airline#extensions#wordcount#init(ext)$/;"	f
airline#extensions#xkblayout#init	plugged/vim-airline/autoload/airline/extensions/xkblayout.vim	/^function! airline#extensions#xkblayout#init(ext)$/;"	f
airline#extensions#xkblayout#status	plugged/vim-airline/autoload/airline/extensions/xkblayout.vim	/^function! airline#extensions#xkblayout#status()$/;"	f
airline#extensions#ycm#get_error_count	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#get_error_count()$/;"	f
airline#extensions#ycm#get_warning_count	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#get_warning_count()$/;"	f
airline#extensions#ycm#init	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#init(ext)$/;"	f
airline#highlighter#add_accent	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_accent(accent)$/;"	f
airline#highlighter#add_separator	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_separator(from, to, inverse)$/;"	f
airline#highlighter#exec	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#exec(group, colors)$/;"	f
airline#highlighter#get_highlight	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight(group, ...)$/;"	f
airline#highlighter#get_highlight2	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight2(fg, bg, ...)$/;"	f
airline#highlighter#highlight	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight(modes, ...)$/;"	f
airline#highlighter#highlight_modified_inactive	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight_modified_inactive(bufnr)$/;"	f
airline#highlighter#load_theme	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#load_theme()$/;"	f
airline#highlighter#reset_hlcache	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#reset_hlcache()$/;"	f
airline#init#bootstrap	plugged/vim-airline/autoload/airline/init.vim	/^function! airline#init#bootstrap()$/;"	f
airline#init#gui_mode	plugged/vim-airline/autoload/airline/init.vim	/^function! airline#init#gui_mode()$/;"	f
airline#init#sections	plugged/vim-airline/autoload/airline/init.vim	/^function! airline#init#sections()$/;"	f
airline#load_theme	plugged/vim-airline/autoload/airline.vim	/^function! airline#load_theme()$/;"	f
airline#msdos#round_msdos_colors	plugged/vim-airline/autoload/airline/msdos.vim	/^function! airline#msdos#round_msdos_colors(rgblist)$/;"	f
airline#parts#crypt	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#crypt()$/;"	f
airline#parts#define	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define(key, config)$/;"	f
airline#parts#define_accent	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_accent(key, accent)$/;"	f
airline#parts#define_condition	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_condition(key, predicate)$/;"	f
airline#parts#define_empty	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_empty(keys)$/;"	f
airline#parts#define_function	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_function(key, name)$/;"	f
airline#parts#define_minwidth	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_minwidth(key, width)$/;"	f
airline#parts#define_raw	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_raw(key, raw)$/;"	f
airline#parts#define_text	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_text(key, text)$/;"	f
airline#parts#ffenc	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#ffenc()$/;"	f
airline#parts#filetype	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#filetype()$/;"	f
airline#parts#get	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#get(key)$/;"	f
airline#parts#iminsert	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#iminsert()$/;"	f
airline#parts#mode	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#mode()$/;"	f
airline#parts#paste	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#paste()$/;"	f
airline#parts#readonly	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#readonly()$/;"	f
airline#parts#spell	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#spell()$/;"	f
airline#remove_statusline_func	plugged/vim-airline/autoload/airline.vim	/^function! airline#remove_statusline_func(name)$/;"	f
airline#section#create	plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create(parts)$/;"	f
airline#section#create_left	plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_left(parts)$/;"	f
airline#section#create_right	plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_right(parts)$/;"	f
airline#statusline	plugged/vim-airline/autoload/airline.vim	/^function! airline#statusline(winnr)$/;"	f
airline#switch_matching_theme	plugged/vim-airline/autoload/airline.vim	/^function! airline#switch_matching_theme()$/;"	f
airline#switch_theme	plugged/vim-airline/autoload/airline.vim	/^function! airline#switch_theme(name)$/;"	f
airline#themes#generate_color_map	plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#generate_color_map(sect1, sect2, sect3, ...)$/;"	f
airline#themes#get_highlight	plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight(group, ...)$/;"	f
airline#themes#get_highlight2	plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight2(fg, bg, ...)$/;"	f
airline#themes#patch	plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#patch(palette)$/;"	f
airline#update_statusline	plugged/vim-airline/autoload/airline.vim	/^function! airline#update_statusline()$/;"	f
airline#util#append	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#append(text, minwidth)$/;"	f
airline#util#exec_funcrefs	plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#exec_funcrefs(list, ...)$/;"	f
airline#util#getwinvar	plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#getwinvar(winnr, key, def)$/;"	f
airline#util#prepend	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#prepend(text, minwidth)$/;"	f
airline#util#shorten	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#shorten(text, winwidth, minwidth, ...)$/;"	f
airline#util#strchars	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#strchars(str)$/;"	f
airline#util#warning	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#warning(msg)$/;"	f
airline#util#wrap	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#wrap(text, minwidth)$/;"	f
airline_ale	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^  augroup airline_ale$/;"	a
airline_tabline_autoshow	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^  augroup airline_tabline_autoshow$/;"	a
airline_tabline_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  augroup airline_tabline_buffers$/;"	a
airline_tabline_ctrlspace	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^  augroup airline_tabline_ctrlspace$/;"	a
airline_tabline_tabs	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  augroup airline_tabline_tabs$/;"	a
airline_whitespace	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^    augroup airline_whitespace$/;"	a
airline_whitespace	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^  augroup airline_whitespace$/;"	a
ajv	plugged/nova-vim/package-lock.json	/^        "ajv": "4.11.8",$/;"	s	object:dependencies.table.requires
ajv	plugged/nova-vim/package-lock.json	/^    "ajv": {$/;"	o	object:dependencies
ajv-keywords	plugged/nova-vim/package-lock.json	/^        "ajv-keywords": "1.5.1",$/;"	s	object:dependencies.table.requires
ajv-keywords	plugged/nova-vim/package-lock.json	/^    "ajv-keywords": {$/;"	o	object:dependencies
all	plugged/deoplete-clang/Makefile	/^all: autopep8$/;"	t
ansi-escapes	plugged/nova-vim/package-lock.json	/^        "ansi-escapes": "1.4.0",$/;"	s	object:dependencies.inquirer.requires
ansi-escapes	plugged/nova-vim/package-lock.json	/^    "ansi-escapes": {$/;"	o	object:dependencies
ansi-regex	plugged/nova-vim/package-lock.json	/^        "ansi-regex": "2.1.1"$/;"	s	object:dependencies.has-ansi.requires
ansi-regex	plugged/nova-vim/package-lock.json	/^        "ansi-regex": "2.1.1"$/;"	s	object:dependencies.strip-ansi.requires
ansi-regex	plugged/nova-vim/package-lock.json	/^        "ansi-regex": "2.1.1",$/;"	s	object:dependencies.inquirer.requires
ansi-regex	plugged/nova-vim/package-lock.json	/^    "ansi-regex": {$/;"	o	object:dependencies
ansi-styles	plugged/nova-vim/package-lock.json	/^        "ansi-styles": "2.2.1",$/;"	s	object:dependencies.chalk.requires
ansi-styles	plugged/nova-vim/package-lock.json	/^    "ansi-styles": {$/;"	o	object:dependencies
ansiGroups	plugged/nova-vim/src/index.js	/^const ansiGroups = require('nova-colors').ansiGroups$/;"	C
api	plugged/vdebug/pythonx/vdebug/session.py	/^    def api(self):$/;"	m	class:Session
apiInvalidInitTest	plugged/vdebug/tests/test_dbgp_api.py	/^class apiInvalidInitTest(unittest.TestCase):$/;"	c
argparse	plugged/nova-vim/package-lock.json	/^        "argparse": "1.0.9",$/;"	s	object:dependencies.js-yaml.requires
argparse	plugged/nova-vim/package-lock.json	/^    "argparse": {$/;"	o	object:dependencies
argument_types	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def argument_types(self):$/;"	m	class:Type
argument_types	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def argument_types(self):$/;"	m	class:Type
arguments	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def arguments(self):$/;"	m	class:CompileCommand
arguments	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def arguments(self):$/;"	m	class:CompileCommand
array-union	plugged/nova-vim/package-lock.json	/^        "array-union": "1.0.2",$/;"	s	object:dependencies.globby.requires
array-union	plugged/nova-vim/package-lock.json	/^    "array-union": {$/;"	o	object:dependencies
array-uniq	plugged/nova-vim/package-lock.json	/^        "array-uniq": "1.0.3"$/;"	s	object:dependencies.array-union.requires
array-uniq	plugged/nova-vim/package-lock.json	/^    "array-uniq": {$/;"	o	object:dependencies
arrify	plugged/nova-vim/package-lock.json	/^        "arrify": "1.0.1",$/;"	s	object:dependencies.globby.requires
arrify	plugged/nova-vim/package-lock.json	/^    "arrify": {$/;"	o	object:dependencies
as_local	plugged/vdebug/pythonx/vdebug/util.py	/^    def as_local(self, quote=False):$/;"	m	class:FilePath
as_remote	plugged/vdebug/pythonx/vdebug/util.py	/^    def as_remote(self):$/;"	m	class:FilePath
as_string	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def as_string(self):$/;"	m	class:Response
as_xml	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def as_xml(self):$/;"	m	class:Response
asking whether it's connected	plugged/vdebug/spec/vdebug_spec.rb	/^    context "asking whether it's connected" do$/;"	c
assert_location	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_location.py	/^def assert_location(loc, line, column, offset):$/;"	f
assert_location	plugged/deoplete-clang/tests/clang/tests/cindex/test_location.py	/^def assert_location(loc, line, column, offset):$/;"	f
attach_vim	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^def attach_vim(serveraddr):$/;"	f
auto_completion_begin	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def auto_completion_begin(self, context):$/;"	m	class:DeopleteHandlers
autopep8	plugged/deoplete-clang/Makefile	/^autopep8: clean$/;"	t
availability	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def availability(self):$/;"	m	class:CompletionString
availability	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def availability(self):$/;"	m	class:CompletionString
availabilityKinds	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^availabilityKinds = {$/;"	v
availabilityKinds	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^availabilityKinds = {$/;"	v
b	plugged/vim-php-cs-fixer/tests/fixtures/misc/simplified_null_return,no_useless_return,no_whitespace_in_blank_line,blank_line_before_return,no_extra_consecutive_blank_lines.php	/^    private static function b($a) {$/;"	f	class:Test
b	plugged/vim-php-cs-fixer/tests/results/misc/simplified_null_return,no_useless_return,no_whitespace_in_blank_line,blank_line_before_return,no_extra_consecutive_blank_lines.php	/^    private static function b($a)$/;"	f	class:Test
b.get_group	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  function! b.get_group(i) dict$/;"	f
b.get_group	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  function! b.get_group(i) dict$/;"	f
b.get_posttitle	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    function b.get_posttitle(i) dict$/;"	f
b.get_pretitle	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    function! b.get_pretitle(i) dict$/;"	f
b.get_title	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  function! b.get_title(i) dict$/;"	f
b.get_title	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  function! b.get_title(i) dict$/;"	f
b:current_syntax	plugged/neomake/syntax/neomake/qf.vim	/^let b:current_syntax = 'neomake_qf'$/;"	v
b:current_syntax	plugged/neosnippet.vim/syntax/neosnippet.vim	/^let b:current_syntax = 'snippet'$/;"	v
b:current_syntax	plugged/rust.vim/syntax/rust.vim	/^let b:current_syntax = "rust"$/;"	v
b:current_syntax	plugged/tagbar/syntax/tagbar.vim	/^let b:current_syntax = "tagbar"$/;"	v
b:current_syntax	plugged/vim-javascript-syntax/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	plugged/vim-startify/syntax/startify.vim	/^let b:current_syntax = 'startify'$/;"	v
b:did_ftplugin	plugged/rust.vim/ftplugin/rust.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	plugged/neosnippet.vim/indent/neosnippet.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/rust.vim/indent/rust.vim	/^let b:did_indent = 1$/;"	v
b:match_skip	plugged/rust.vim/ftplugin/rust.vim	/^let b:match_skip = 's:comment\\|string\\|rustArrow'$/;"	v
b:rust_last_args	plugged/rust.vim/ftplugin/rust.vim	/^	let b:rust_last_args = []$/;"	v
b:rust_last_rustc_args	plugged/rust.vim/ftplugin/rust.vim	/^	let b:rust_last_rustc_args = []$/;"	v
b:rust_original_delimitMate_excluded_regions	plugged/rust.vim/ftplugin/rust.vim	/^		let b:rust_original_delimitMate_excluded_regions = b:delimitMate_excluded_regions$/;"	v
b:rust_set_conceallevel	plugged/rust.vim/ftplugin/rust.vim	/^	let b:rust_set_conceallevel=1$/;"	v
b:rust_set_foldmethod	plugged/rust.vim/ftplugin/rust.vim	/^	let b:rust_set_foldmethod=1$/;"	v
b:undo_ftplugin	plugged/neosnippet.vim/ftplugin/neosnippet.vim	/^    let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	plugged/neosnippet.vim/ftplugin/neosnippet.vim	/^    let b:undo_ftplugin = '|'$/;"	v
b:undo_ftplugin	plugged/neosnippet.vim/ftplugin/neosnippet.vim	/^let b:undo_ftplugin .= '$/;"	v
b:undo_ftplugin	plugged/rust.vim/ftplugin/rust.vim	/^let b:undo_ftplugin = "$/;"	v
b:undo_indent	plugged/neosnippet.vim/indent/neosnippet.vim	/^  let b:undo_indent .= '|'$/;"	v
b:undo_indent	plugged/neosnippet.vim/indent/neosnippet.vim	/^  let b:undo_indent = ''$/;"	v
b:undo_indent	plugged/neosnippet.vim/indent/neosnippet.vim	/^let b:undo_indent .= 'setlocal$/;"	v
balanced-match	plugged/nova-vim/package-lock.json	/^        "balanced-match": "1.0.0",$/;"	s	object:dependencies.brace-expansion.requires
balanced-match	plugged/nova-vim/package-lock.json	/^    "balanced-match": {$/;"	o	object:dependencies
bar	plugged/vim-php-cs-fixer/tests/fixtures/misc/phpdocs.test.php	/^    public $bar;$/;"	v	class:Foo
bar	plugged/vim-php-cs-fixer/tests/results/misc/phpdocs.test.php	/^    public $bar;$/;"	v	class:Foo
baseInput	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_location.py	/^baseInput="int one;\\nint two;\\n"$/;"	v
baseInput	plugged/deoplete-clang/tests/clang/tests/cindex/test_location.py	/^baseInput="int one;\\nint two;\\n"$/;"	v
bash	plugged/neomake/Makefile	/^bash:=$(shell command -v bash 2>\/dev\/null)$/;"	m
baz	plugged/vim-php-cs-fixer/tests/fixtures/misc/phpdocs.test.php	/^    public $baz;$/;"	v	class:Foo
baz	plugged/vim-php-cs-fixer/tests/results/misc/phpdocs.test.php	/^    public $baz;$/;"	v	class:Foo
before	plugged/vim-multiple-cursors/spec/benchmark_spec.rb	/^def before(string)$/;"	f
before	plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def before(string)$/;"	f
better_whitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^    augroup better_whitespace$/;"	a
binary_search_begin	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def binary_search_begin(l, prefix):$/;"	f
binary_search_end	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def binary_search_end(l, prefix):$/;"	f
binary_search_lines_by_prefix	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^def binary_search_lines_by_prefix(prefix, filename):$/;"	f
brace-expansion	plugged/nova-vim/package-lock.json	/^        "brace-expansion": "1.1.8"$/;"	s	object:dependencies.minimatch.requires
brace-expansion	plugged/nova-vim/package-lock.json	/^    "brace-expansion": {$/;"	o	object:dependencies
breakpoint_list	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def breakpoint_list(self):$/;"	m	class:Api
breakpoint_remove	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def breakpoint_remove(self, id):$/;"	m	class:Api
breakpoint_set	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def breakpoint_set(self, cmd_args):$/;"	m	class:Api
breakpoint_sign_id	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    breakpoint_sign_id = '6146'$/;"	v	class:SourceWindow
breakpoints	plugged/vdebug/pythonx/vdebug/session.py	/^    def breakpoints(self):$/;"	m	class:SessionHandler
breakpoints	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def breakpoints(self):$/;"	m	class:WindowManager
briefComment	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def briefComment(self):$/;"	m	class:CompletionString
briefComment	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def briefComment(self):$/;"	m	class:CompletionString
brief_comment	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def brief_comment(self):$/;"	m	class:Cursor
brief_comment	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def brief_comment(self):$/;"	m	class:Cursor
buffers	plugged/vdebug/rubylib/vdebug.rb	/^  def buffers$/;"	f	class:Vdebug
build	plugged/neomake/Makefile	/^build build\/neovim-test-home:$/;"	t
build	plugged/nova-vim/package.json	/^    "build": "scripts\/build",$/;"	s	object:scripts
build/neovim-test-home	plugged/neomake/Makefile	/^build build\/neovim-test-home:$/;"	t
build/neovim-test-home	plugged/neomake/Makefile	/^build\/neovim-test-home: | build$/;"	t
build/vimhelplint	plugged/neomake/Makefile	/^build\/vimhelplint: | build$/;"	t
build/vimlint	plugged/neomake/Makefile	/^build\/vimlint: | build$/;"	t
build/vimlint/bin/vimlint.sh	plugged/neomake/Makefile	/^build\/vimlint\/bin\/vimlint.sh: build\/vimlint build\/vimlparser$/;"	t
build/vimlparser	plugged/neomake/Makefile	/^build\/vimlparser: | build$/;"	t
build/vint	plugged/neomake/Makefile	/^build\/vint: | build$/;"	t
build/vint/bin/vint	plugged/neomake/Makefile	/^build\/vint\/bin\/vint: | build\/vint$/;"	t
by_position	plugged/vdebug/pythonx/vdebug/event.py	/^    def by_position(self, session):$/;"	m	class:Dispatcher
byte_end	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0
byte_end	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span
byte_end	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.span
byte_end	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	n	object:message.spans.0
byte_end	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	n	object:message.spans.0.expansion.span
byte_end	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	n	object:message.spans.0
byte_start	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0
byte_start	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span
byte_start	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.span
byte_start	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	n	object:message.spans.0
byte_start	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	n	object:message.spans.0.expansion.span
byte_start	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	n	object:message.spans.0
bytepos2charpos	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def bytepos2charpos(encoding, input, pos):$/;"	f
c	plugged/vim-airline/t/airline.vim	/^    let c = len(g:airline_statusline_funcrefs)$/;"	v
c_object_p	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^c_object_p = POINTER(c_void_p)$/;"	v
c_object_p	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^c_object_p = POINTER(c_void_p)$/;"	v
cached_translate	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/fnmatch.py	/^def cached_translate(pat):$/;"	f
callbacks	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^callbacks = {}$/;"	v
callbacks	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^callbacks = {}$/;"	v
caller-path	plugged/nova-vim/package-lock.json	/^        "caller-path": "0.1.0",$/;"	s	object:dependencies.require-uncached.requires
caller-path	plugged/nova-vim/package-lock.json	/^    "caller-path": {$/;"	o	object:dependencies
calling buffer names	plugged/vdebug/spec/vdebug_spec.rb	/^      context "calling buffer names" do$/;"	c
calling start_listening	plugged/vdebug/spec/vdebug_spec.rb	/^    context "calling start_listening" do$/;"	c
callsites	plugged/nova-vim/package-lock.json	/^        "callsites": "0.2.0"$/;"	s	object:dependencies.caller-path.requires
callsites	plugged/nova-vim/package-lock.json	/^    "callsites": {$/;"	o	object:dependencies
canonical	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def canonical(self):$/;"	m	class:Cursor
canonical	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def canonical(self):$/;"	m	class:Cursor
cargo#bench	plugged/rust.vim/autoload/cargo.vim	/^function! cargo#bench(args)$/;"	f
cargo#build	plugged/rust.vim/autoload/cargo.vim	/^function! cargo#build(args)$/;"	f
cargo#clean	plugged/rust.vim/autoload/cargo.vim	/^function! cargo#clean(args)$/;"	f
cargo#cmd	plugged/rust.vim/autoload/cargo.vim	/^function! cargo#cmd(args)$/;"	f
cargo#doc	plugged/rust.vim/autoload/cargo.vim	/^function! cargo#doc(args)$/;"	f
cargo#init	plugged/rust.vim/autoload/cargo.vim	/^function! cargo#init(args)$/;"	f
cargo#new	plugged/rust.vim/autoload/cargo.vim	/^function! cargo#new(args)$/;"	f
cargo#run	plugged/rust.vim/autoload/cargo.vim	/^function! cargo#run(args)$/;"	f
cargo#test	plugged/rust.vim/autoload/cargo.vim	/^function! cargo#test(args)$/;"	f
category_name	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def category_name(self):$/;"	m	class:Diagnostic
category_name	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def category_name(self):$/;"	m	class:Diagnostic
category_number	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def category_number(self):$/;"	m	class:Diagnostic
category_number	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def category_number(self):$/;"	m	class:Diagnostic
chalk	plugged/nova-vim/package-lock.json	/^        "chalk": "1.1.3",$/;"	s	object:dependencies.eslint.requires
chalk	plugged/nova-vim/package-lock.json	/^        "chalk": "1.1.3",$/;"	s	object:dependencies.inquirer.requires
chalk	plugged/nova-vim/package-lock.json	/^        "chalk": "1.1.3",$/;"	s	object:dependencies.table.requires
chalk	plugged/nova-vim/package-lock.json	/^    "chalk": {$/;"	o	object:dependencies
changes	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^changes:$/;"	t
char_regex	plugged/vdebug/pythonx/vdebug/event.py	/^    char_regex = {$/;"	v	class:CursorEvalEvent
charpos2bytepos	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def charpos2bytepos(encoding, input, pos):$/;"	f
charwidth	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def charwidth(c):$/;"	f
check	plugged/neomake/Makefile	/^check:$/;"	t
check_assertions	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/handler.py	/^    def check_assertions(self):$/;"	m	class:EditorConfigHandler
check_completion_results	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_code_completion.py	/^def check_completion_results(cr, expected):$/;"	f
check_completion_results	plugged/deoplete-clang/tests/clang/tests/cindex/test_code_completion.py	/^def check_completion_results(cr, expected):$/;"	f
check_docker	plugged/neomake/Makefile	/^check_docker:$/;"	t
check_errors	plugged/neomake/contrib/vim-checks	/^check_errors() {$/;"	f
check_lint	plugged/neomake/Makefile	/^check_lint: vimlint vint vimhelplint$/;"	t
check_lint_diff	plugged/neomake/Makefile	/^check_lint_diff:$/;"	t
check_recache	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def check_recache(self, context):$/;"	m	class:Deoplete
checking whether the gui is open	plugged/vdebug/spec/vdebug_spec.rb	/^      context "checking whether the gui is open" do$/;"	c
child_count	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def child_count(self):$/;"	m	class:ContextProperty
children	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	a	object:message
children	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	a	object:message.children.0
children	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	a	object:message.children.1
children	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	a	object:message
children	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	a	object:message.children.0
children	plugged/neomake/tests/fixtures/rust/cargo_error_without_span.json	/^ {"message":{"children":[],"code":null,"level":"error","message":"aborting due to 18 previous er/;"	a	object:message
children	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	a	object:message
circular-json	plugged/nova-vim/package-lock.json	/^        "circular-json": "0.3.1",$/;"	s	object:dependencies.flat-cache.requires
circular-json	plugged/nova-vim/package-lock.json	/^    "circular-json": {$/;"	o	object:dependencies
clang	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang.py	/^import clang.cindex as clang$/;"	I
clean	plugged/deoplete-clang/Makefile	/^clean:$/;"	t
clean	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^clean:$/;"	t
clean	plugged/neomake/Makefile	/^clean:$/;"	t
clean	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    def clean(self):$/;"	m	class:Window
clean	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def clean(self):$/;"	m	class:HiddenBuffer
clean	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def clean(self):$/;"	m	class:VimBuffer
clean	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def clean(self):$/;"	m	class:Window
cleanup_ruby	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^function! <SID>cleanup_ruby()$/;"	f
clear	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def clear(self):$/;"	m	class:OrderedDict
clear	plugged/vdebug/pythonx/vdebug/connection.py	/^    def clear(self):$/;"	m	class:SocketCreator
clear_breakpoints	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def clear_breakpoints(self):$/;"	m	class:Store
clear_buffer_cache!	plugged/vdebug/rubylib/vdebug.rb	/^  def clear_buffer_cache!$/;"	f	class:Vdebug
clear_eval_expression	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def clear_eval_expression(self):$/;"	m	class:WatchWindow
clear_signs	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def clear_signs(self):$/;"	m	class:SourceWindow
cli-cursor	plugged/nova-vim/package-lock.json	/^        "cli-cursor": "1.0.2",$/;"	s	object:dependencies.inquirer.requires
cli-cursor	plugged/nova-vim/package-lock.json	/^    "cli-cursor": {$/;"	o	object:dependencies
cli-width	plugged/nova-vim/package-lock.json	/^        "cli-width": "2.1.0",$/;"	s	object:dependencies.inquirer.requires
cli-width	plugged/nova-vim/package-lock.json	/^    "cli-width": {$/;"	o	object:dependencies
close	plugged/vdebug/pythonx/vdebug/connection.py	/^    def close(self):$/;"	m	class:ConnectionHandler
close	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def close(self):$/;"	m	class:DebuggerInterface
close	plugged/vdebug/pythonx/vdebug/session.py	/^    def close(self):$/;"	m	class:Session
close	plugged/vdebug/pythonx/vdebug/session.py	/^    def close(self):$/;"	m	class:SessionHandler
close	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    def close(self):$/;"	m	class:Ui
close	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def close(self):$/;"	m	class:Ui
close	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def close(self):$/;"	m	class:WindowManager
close	plugged/vdebug/tests/test_connection.py	/^    def close(self):$/;"	m	class:SocketMock
close_connection	plugged/vdebug/pythonx/vdebug/session.py	/^    def close_connection(self, stop=True):$/;"	m	class:Session
close_key	plugged/vdebug/pythonx/vdebug/util.py	/^    def close_key(self):$/;"	m	class:Keymapper
co	plugged/nova-vim/package-lock.json	/^        "co": "4.6.0",$/;"	s	object:dependencies.ajv.requires
co	plugged/nova-vim/package-lock.json	/^    "co": {$/;"	o	object:dependencies
code	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	o	object:message
code	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.code
code	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	z	object:message.children.0
code	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	z	object:message.children.1
code	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	z	object:message
code	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	z	object:message.children.0
code	plugged/neomake/tests/fixtures/rust/cargo_error_without_span.json	/^ {"message":{"children":[],"code":null,"level":"error","message":"aborting due to 18 previous er/;"	z	object:message
code	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	z	object:message
code-point-at	plugged/nova-vim/package-lock.json	/^        "code-point-at": "1.1.0",$/;"	s	object:dependencies.readline2.requires
code-point-at	plugged/nova-vim/package-lock.json	/^        "code-point-at": "1.1.0",$/;"	s	object:dependencies.string-width.requires
code-point-at	plugged/nova-vim/package-lock.json	/^    "code-point-at": {$/;"	o	object:dependencies
codeComplete	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def codeComplete(self, path, line, column, unsaved_files=None,$/;"	m	class:TranslationUnit
codeComplete	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def codeComplete(self, path, line, column, unsaved_files=None,$/;"	m	class:TranslationUnit
colorValues	plugged/nova-vim/src/airline.js	/^const colorValues = require('nova-colors').default$/;"	C
colors	plugged/vim-airline/t/themes.vim	/^    let colors = airline#themes#get_highlight('Foo')$/;"	v
column	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def column(self):$/;"	m	class:SourceLocation
column	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def column(self):$/;"	m	class:SourceLocation
column_end	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0
column_end	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span
column_end	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.span
column_end	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	n	object:message.spans.0
column_end	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	n	object:message.spans.0.expansion.span
column_end	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	n	object:message.spans.0
column_start	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0
column_start	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span
column_start	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.span
column_start	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	n	object:message.spans.0
column_start	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	n	object:message.spans.0.expansion.span
column_start	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	n	object:message.spans.0
command	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/INPUTS/compile_commands.json	/^  "command": "clang++  -DFEATURE=1 -o project2-feature.o -c \/home\/john.doe\/MyProject\/project/;"	s	object:2
command	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/INPUTS/compile_commands.json	/^  "command": "clang++  -o project.o -c \/home\/john.doe\/MyProject\/project.cpp",$/;"	s	object:0
command	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/INPUTS/compile_commands.json	/^  "command": "clang++ -o project2.o -c \/home\/john.doe\/MyProject\/project2.cpp",$/;"	s	object:1
command	plugged/deoplete-clang/tests/clang/tests/cindex/INPUTS/compile_commands.json	/^  "command": "clang++  -DFEATURE=1 -o project2-feature.o -c \/home\/john.doe\/MyProject\/project/;"	s	object:2
command	plugged/deoplete-clang/tests/clang/tests/cindex/INPUTS/compile_commands.json	/^  "command": "clang++  -o project.o -c \/home\/john.doe\/MyProject\/project.cpp",$/;"	s	object:0
command	plugged/deoplete-clang/tests/clang/tests/cindex/INPUTS/compile_commands.json	/^  "command": "clang++ -o project2.o -c \/home\/john.doe\/MyProject\/project2.cpp",$/;"	s	object:1
command	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def command(self, cmd):$/;"	m	class:Ui
command	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def command(self, cmd):$/;"	m	class:Window
command	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def command(self, cmd, silent=True):$/;"	m	class:SourceWindow
compatibility_check	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    compatibility_check = True$/;"	v	class:Config
compatibility_check	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    compatibility_check = True$/;"	v	class:Config
complete	plugged/deoplete-clang/tests/code_completion.py	/^complete = translation_unit.codeComplete(sys.argv[2], 6, 11)$/;"	v
completionChunkKindMap	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^completionChunkKindMap = {$/;"	v
completionChunkKindMap	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^completionChunkKindMap = {$/;"	v
completion_begin	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def completion_begin(self, context):$/;"	m	class:Deoplete
concat-map	plugged/nova-vim/package-lock.json	/^        "concat-map": "0.0.1"$/;"	s	object:dependencies.brace-expansion.requires
concat-map	plugged/nova-vim/package-lock.json	/^    "concat-map": {$/;"	o	object:dependencies
concat-stream	plugged/nova-vim/package-lock.json	/^        "concat-stream": "1.6.0",$/;"	s	object:dependencies.eslint.requires
concat-stream	plugged/nova-vim/package-lock.json	/^    "concat-stream": {$/;"	o	object:dependencies
conf	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^conf = Config()$/;"	v
conf	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^conf = Config()$/;"	v
conn	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    conn = None$/;"	v	class:Api
connected?	plugged/vdebug/rubylib/vdebug.rb	/^  def connected?$/;"	f	class:Vdebug
connection_made	plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def connection_made(self, transport):$/;"	m	class:Process
constarrayInput	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^constarrayInput="""$/;"	v
constarrayInput	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^constarrayInput="""$/;"	v
contents	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def contents(self):$/;"	m	class:HiddenBuffer
contents	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def contents(self):$/;"	m	class:VimBuffer
context_get	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def context_get(self, context=0):$/;"	m	class:Api
context_names	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def context_names(self):$/;"	m	class:Api
convert2candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def convert2candidates(l):$/;"	f
convert2list	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def convert2list(expr):$/;"	f
copy	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def copy(self):$/;"	m	class:OrderedDict
copyright	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^copyright = u'2012, EditorConfig Team'$/;"	v
core-util-is	plugged/nova-vim/package-lock.json	/^        "core-util-is": "1.0.2",$/;"	s	object:dependencies.readable-stream.requires
core-util-is	plugged/nova-vim/package-lock.json	/^    "core-util-is": {$/;"	o	object:dependencies
coverage	plugged/neomake/Makefile	/^coverage: .coverage.covimerage$/;"	t
create	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def create(excludeDecls=False):$/;"	m	class:Index
create	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def create(excludeDecls=False):$/;"	m	class:Index
create	plugged/vdebug/pythonx/vdebug/listener.py	/^    def create(cls):$/;"	m	class:Listener
create	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    def create(self):$/;"	m	class:Window
create	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def create(self, open_cmd):$/;"	m	class:Window
create_connection	plugged/vdebug/pythonx/vdebug/listener.py	/^    def create_connection(self):$/;"	m	class:BackgroundListener
create_connection	plugged/vdebug/pythonx/vdebug/listener.py	/^    def create_connection(self):$/;"	m	class:ForegroundListener
create_properties	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def create_properties(self, property):$/;"	m	class:ContextGetResponse
creation_count	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    creation_count = 0$/;"	v	class:Window
critical	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def critical(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
current	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang.py	/^current = __file__$/;"	v
current_compiler	plugged/rust.vim/compiler/cargo.vim	/^let current_compiler = "cargo"$/;"	v
current_compiler	plugged/rust.vim/compiler/rustc.vim	/^let current_compiler = "rustc"$/;"	v
cursor	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def cursor(self):$/;"	m	class:Token
cursor	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def cursor(self):$/;"	m	class:TranslationUnit
cursor	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def cursor(self):$/;"	m	class:Token
cursor	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def cursor(self):$/;"	m	class:TranslationUnit
d	autoload/plug.vim	/^      nnoremap <silent> <buffer> d :set opfunc=<sid>delete_op<cr>g@$/;"	m
d	autoload/plug.vim	/^      xnoremap <silent> <buffer> d :<c-u>call <sid>delete_op(visualmode(), 1)<cr>$/;"	m
d	plugged/nova-vim/package-lock.json	/^        "d": "1.0.0",$/;"	s	object:dependencies.es6-iterator.requires
d	plugged/nova-vim/package-lock.json	/^        "d": "1.0.0",$/;"	s	object:dependencies.es6-map.requires
d	plugged/nova-vim/package-lock.json	/^        "d": "1.0.0",$/;"	s	object:dependencies.es6-set.requires
d	plugged/nova-vim/package-lock.json	/^        "d": "1.0.0",$/;"	s	object:dependencies.es6-symbol.requires
d	plugged/nova-vim/package-lock.json	/^        "d": "1.0.0",$/;"	s	object:dependencies.es6-weak-map.requires
d	plugged/nova-vim/package-lock.json	/^        "d": "1.0.0",$/;"	s	object:dependencies.event-emitter.requires
d	plugged/nova-vim/package-lock.json	/^    "d": {$/;"	o	object:dependencies
dbg_id	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    dbg_id = None$/;"	v	class:Breakpoint
dd	autoload/plug.vim	/^      nmap     <silent> <buffer> dd d_$/;"	m
debug	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def debug(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
debug	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def debug(vim, expr):$/;"	f
debug	plugged/nova-vim/package-lock.json	/^        "debug": "2.6.8",$/;"	s	object:dependencies.eslint.requires
debug	plugged/nova-vim/package-lock.json	/^    "debug": {$/;"	o	object:dependencies
debug_assertions	plugged/neomake/tests/fixtures/rust/cargo_info.json	/^{"features":["default"],"filenames":["\/home\/jelte\/fun\/derive_more\/target\/debug\/deps\/libu/;"	b	object:profile
debug_level	plugged/vdebug/pythonx/vdebug/log.py	/^    debug_level = ERROR$/;"	v	class:Logger
debuginfo	plugged/neomake/tests/fixtures/rust/cargo_info.json	/^{"features":["default"],"filenames":["\/home\/jelte\/fun\/derive_more\/target\/debug\/deps\/libu/;"	b	object:profile
deep-is	plugged/nova-vim/package-lock.json	/^        "deep-is": "0.1.3",$/;"	s	object:dependencies.optionator.requires
deep-is	plugged/nova-vim/package-lock.json	/^    "deep-is": {$/;"	o	object:dependencies
def_site_span	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	o	object:message.spans.0.expansion
def_site_span	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	z	object:message.spans.0.expansion
default_blacklist	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let default_blacklist=['diff', 'gitcommit', 'unite', 'qf', 'help', 'markdown']$/;"	v
default_grep	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let default_grep = 'grep'$/;"	v
del	plugged/nova-vim/package-lock.json	/^        "del": "2.2.2",$/;"	s	object:dependencies.flat-cache.requires
del	plugged/nova-vim/package-lock.json	/^    "del": {$/;"	o	object:dependencies
delete	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def delete(self, start_line, end_line=None):$/;"	m	class:HiddenBuffer
delete	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def delete(self, start_line, end_line=None):$/;"	m	class:VimBuffer
delete	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def delete(self, start_line, end_line=None):$/;"	m	class:Window
deoplete	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^  augroup deoplete$/;"	a
deoplete	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^    augroup deoplete$/;"	a
deoplete	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^  augroup deoplete$/;"	a
deoplete#cancel_popup	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#cancel_popup() abort$/;"	f
deoplete#close_popup	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#close_popup() abort$/;"	f
deoplete#complete_common_string	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#complete_common_string() abort$/;"	f
deoplete#custom#get	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#get() abort$/;"	f
deoplete#custom#get_source_var	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#get_source_var(source_name) abort$/;"	f
deoplete#custom#init	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#init() abort$/;"	f
deoplete#custom#set	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#set(source_name, option_name, value) abort$/;"	f
deoplete#custom#source	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#source(source_name, option_name, value) abort$/;"	f
deoplete#custom#var	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#var(source_name, var_name, value) abort$/;"	f
deoplete#disable	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#disable() abort$/;"	f
deoplete#enable	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#enable() abort$/;"	f
deoplete#enable_logging	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#enable_logging(level, logfile) abort$/;"	f
deoplete#handler#_async_timer_start	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_async_timer_start() abort$/;"	f
deoplete#handler#_async_timer_stop	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_async_timer_stop() abort$/;"	f
deoplete#handler#_do_complete	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_do_complete() abort$/;"	f
deoplete#handler#_init	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_init() abort$/;"	f
deoplete#handler#_skip_next_completion	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_skip_next_completion() abort$/;"	f
deoplete#init#_channel	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_channel() abort$/;"	f
deoplete#init#_check_channel	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_check_channel() abort$/;"	f
deoplete#init#_context	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_context(event, sources) abort$/;"	f
deoplete#init#_disable	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_disable() abort$/;"	f
deoplete#init#_enable	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_enable() abort$/;"	f
deoplete#init#_initialize	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_initialize() abort$/;"	f
deoplete#init#_is_enabled	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_is_enabled() abort$/;"	f
deoplete#init#_variables	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_variables() abort$/;"	f
deoplete#initialize	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#initialize() abort$/;"	f
deoplete#is_enabled	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#is_enabled() abort$/;"	f
deoplete#manual_complete	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#manual_complete(...) abort$/;"	f
deoplete#mapping#_complete	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_complete() abort$/;"	f
deoplete#mapping#_complete_common_string	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_complete_common_string() abort$/;"	f
deoplete#mapping#_completefunc	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_completefunc(findstart, base) abort$/;"	f
deoplete#mapping#_init	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_init() abort$/;"	f
deoplete#mapping#_restore_completeopt	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_restore_completeopt() abort$/;"	f
deoplete#mapping#_rpcrequest_wrapper	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_rpcrequest_wrapper(sources) abort$/;"	f
deoplete#mapping#_set_completeopt	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_set_completeopt() abort$/;"	f
deoplete#mapping#_undo_completion	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_undo_completion() abort$/;"	f
deoplete#mappings#cancel_popup	plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#cancel_popup() abort$/;"	f
deoplete#mappings#close_popup	plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#close_popup() abort$/;"	f
deoplete#mappings#manual_complete	plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#manual_complete(...) abort$/;"	f
deoplete#mappings#refresh	plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#refresh() abort$/;"	f
deoplete#mappings#smart_close_popup	plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#smart_close_popup() abort$/;"	f
deoplete#mappings#undo_completion	plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#undo_completion() abort$/;"	f
deoplete#refresh	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#refresh() abort$/;"	f
deoplete#send_event	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#send_event(event) abort$/;"	f
deoplete#smart_close_popup	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#smart_close_popup() abort$/;"	f
deoplete#tag#cache_limit_size	config.d/deoplete.vim	/^let deoplete#tag#cache_limit_size = 5000000$/;"	v
deoplete#toggle	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#toggle() abort$/;"	f
deoplete#undo_completion	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#undo_completion() abort$/;"	f
deoplete#util#convert2list	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#convert2list(expr) abort$/;"	f
deoplete#util#get_buffer_config	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_buffer_config($/;"	f
deoplete#util#get_context_filetype	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_context_filetype(input, event) abort$/;"	f
deoplete#util#get_input	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_input(event) abort$/;"	f
deoplete#util#get_next_input	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_next_input(event) abort$/;"	f
deoplete#util#get_prev_event	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_prev_event() abort$/;"	f
deoplete#util#get_simple_buffer_config	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_simple_buffer_config(buffer_var, user_var) abort$/;"	f
deoplete#util#get_syn_names	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_syn_names() abort$/;"	f
deoplete#util#has_yarp	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#has_yarp() abort$/;"	f
deoplete#util#neovim_version	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#neovim_version() abort$/;"	f
deoplete#util#print_debug	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#print_debug(string) abort$/;"	f
deoplete#util#print_error	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#print_error(string, ...) abort$/;"	f
deoplete#util#print_warning	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#print_warning(string) abort$/;"	f
deoplete#util#rpcnotify	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#rpcnotify(event, context) abort$/;"	f
deoplete#util#set_default	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#set_default(var, val, ...)  abort$/;"	f
deoplete#util#set_pattern	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#set_pattern(variable, keys, pattern) abort$/;"	f
deoplete#util#string	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#string(expr) abort$/;"	f
deoplete#util#uniq	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#uniq(list) abort$/;"	f
deoplete#util#versioncmp	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#versioncmp(a, b) abort$/;"	f
deoplete#util#vimoption2python	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#vimoption2python(option) abort$/;"	f
deoplete#util#vimoption2python_not	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#vimoption2python_not(option) abort$/;"	f
deoplete_auto_completion_begin	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_auto_completion_begin(context):$/;"	f
deoplete_enable_logging	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_enable_logging(context):$/;"	f
deoplete_init	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_init():$/;"	f
deoplete_manual_completion_begin	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_manual_completion_begin(context):$/;"	f
deoplete_on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_on_event(context):$/;"	f
dependencies	plugged/nova-vim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.acorn-jsx
dependencies	plugged/nova-vim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.esrecurse
dependencies	plugged/nova-vim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.table
dependencies	plugged/nova-vim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.watch
dependencies	plugged/nova-vim/package-lock.json	/^  "dependencies": {$/;"	o
dependencies	plugged/nova-vim/package.json	/^  "dependencies": {$/;"	o
destroy	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    def destroy(self):$/;"	m	class:Window
destroy	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def destroy(self, wipeout=True):$/;"	m	class:Window
detach	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def detach(self):$/;"	m	class:Api
detach	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def detach(self):$/;"	m	class:DebuggerInterface
detach	plugged/vdebug/pythonx/vdebug/session.py	/^    def detach(self):$/;"	m	class:Session
dev	plugged/nova-vim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.acorn-jsx.dependencies.acorn
dev	plugged/nova-vim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.esrecurse.dependencies.estraverse
dev	plugged/nova-vim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.table.dependencies.is-fullwidth-code-point
dev	plugged/nova-vim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.watch.dependencies.minimist
dev	plugged/nova-vim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.table.dependencies.string-width
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.acorn
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.ajv-keywords
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.ansi-escapes
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.ansi-regex
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.ansi-styles
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.array-uniq
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.arrify
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.balanced-match
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.callsites
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.circular-json
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.cli-width
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.co
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.code-point-at
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.concat-map
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.core-util-is
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.deep-is
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.escape-string-regexp
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.esprima
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.estraverse
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.esutils
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.exit-hook
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.fast-levenshtein
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.fs.realpath
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.generate-function
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.globals
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.graceful-fs
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.ignore
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.imurmurhash
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.inherits
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-path-cwd
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-property
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.isarray
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.jsonify
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.jsonpointer
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.lodash
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.merge
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.minimist
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.ms
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.mute-stream
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.natural-compare
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.number-is-nan
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.object-assign
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.onetime
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.os-homedir
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.path-is-absolute
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.path-is-inside
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.pify
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.pinkie
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.pluralize
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.prelude-ls
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.process-nextick-args
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.progress
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.resolve-from
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.rx-lite
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.safe-buffer
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.shelljs
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.slice-ansi
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.sprintf-js
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.strip-bom
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.strip-json-comments
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.supports-color
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.text-table
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.through
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.tryit
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.typedarray
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.util-deprecate
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.wordwrap
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.wrappy
dev	plugged/nova-vim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.xtend
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.acorn-jsx
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.ajv
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.argparse
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.array-union
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.brace-expansion
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.caller-path
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.chalk
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.cli-cursor
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.concat-stream
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.d
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.debug
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.del
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.doctrine
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.es5-ext
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.es6-iterator
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.es6-map
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.es6-set
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.es6-symbol
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.es6-weak-map
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.escope
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.eslint
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.espree
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.esrecurse
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.event-emitter
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.exec-sh
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.figures
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.file-entry-cache
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.flat-cache
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.generate-object-property
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.glob
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.globby
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.has-ansi
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.inflight
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.inquirer
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-fullwidth-code-point
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-my-json-valid
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-path-in-cwd
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-path-inside
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-resolvable
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.js-yaml
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.json-stable-stringify
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.levn
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.minimatch
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.mkdirp
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.once
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.optionator
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.pinkie-promise
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.readable-stream
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.readline2
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.require-uncached
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.restore-cursor
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.rimraf
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.run-async
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.string-width
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.string_decoder
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.strip-ansi
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.table
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.type-check
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.user-home
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.watch
dev	plugged/nova-vim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.write
dev	plugged/nova-vim/package.json	/^    "dev": "watch 'npm run build' src",$/;"	s	object:scripts
devDependencies	plugged/nova-vim/package.json	/^  "devDependencies": {$/;"	o
devhelp	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^devhelp:$/;"	t
diagnostics	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def diagnostics(self):$/;"	m	class:CodeCompletionResults
diagnostics	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def diagnostics(self):$/;"	m	class:TranslationUnit
diagnostics	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def diagnostics(self):$/;"	m	class:CodeCompletionResults
diagnostics	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def diagnostics(self):$/;"	m	class:TranslationUnit
did_javascript_syn_inits	plugged/vim-javascript-syntax/syntax/javascript.vim	/^		let did_javascript_syn_inits = 1$/;"	v
directory	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def directory(self):$/;"	m	class:CompileCommand
directory	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/INPUTS/compile_commands.json	/^  "directory": "\/home\/john.doe\/MyProject",$/;"	s	object:0
directory	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/INPUTS/compile_commands.json	/^  "directory": "\/home\/john.doe\/MyProjectA",$/;"	s	object:1
directory	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/INPUTS/compile_commands.json	/^  "directory": "\/home\/john.doe\/MyProjectB",$/;"	s	object:2
directory	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def directory(self):$/;"	m	class:CompileCommand
directory	plugged/deoplete-clang/tests/clang/tests/cindex/INPUTS/compile_commands.json	/^  "directory": "\/home\/john.doe\/MyProject",$/;"	s	object:0
directory	plugged/deoplete-clang/tests/clang/tests/cindex/INPUTS/compile_commands.json	/^  "directory": "\/home\/john.doe\/MyProjectA",$/;"	s	object:1
directory	plugged/deoplete-clang/tests/clang/tests/cindex/INPUTS/compile_commands.json	/^  "directory": "\/home\/john.doe\/MyProjectB",$/;"	s	object:2
directory	plugged/vdebug/pythonx/start_vdebug.py	/^directory = os.path.dirname(inspect.getfile(inspect.currentframe()))$/;"	v
dirhtml	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^dirhtml:$/;"	t
disable_option	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def disable_option(self):$/;"	m	class:Diagnostic
disable_option	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def disable_option(self):$/;"	m	class:Diagnostic
dispatch	plugged/vdebug/pythonx/vdebug/event.py	/^    def dispatch(self, name, *args):$/;"	m	class:Event
dispatch_event	plugged/vdebug/pythonx/vdebug/event.py	/^    def dispatch_event(self, name, *args):$/;"	m	class:Dispatcher
dispatch_event	plugged/vdebug/pythonx/vdebug/session.py	/^    def dispatch_event(self, name, *args):$/;"	m	class:SessionHandler
displayname	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def displayname(self):$/;"	m	class:Cursor
displayname	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def displayname(self):$/;"	m	class:Cursor
docker	plugged/neomake/Makefile	/^    -v $(PWD):\/testplugin \\$/;"	t
docker_check	plugged/neomake/Makefile	/^docker_check: DOCKER_MAKE_TARGET=check_docker$/;"	t
docker_check	plugged/neomake/Makefile	/^docker_check: docker_make$/;"	t
docker_image	plugged/neomake/Makefile	/^docker_image:$/;"	t
docker_list_vims	plugged/neomake/Makefile	/^docker_list_vims:$/;"	t
docker_make	plugged/neomake/Makefile	/^docker_make: DOCKER_RUN=make $(DOCKER_MAKE_TARGET)$/;"	t
docker_make	plugged/neomake/Makefile	/^docker_make: docker_run$/;"	t
docker_push	plugged/neomake/Makefile	/^docker_push:$/;"	t
docker_run	plugged/neomake/Makefile	/^docker_run: $(DEP_PLUGINS)$/;"	t
docker_run	plugged/neomake/Makefile	/^docker_run:$/;"	t
docker_test	plugged/neomake/Makefile	/^docker_test: DOCKER_MAKE_TEST_TARGET:=test$/;"	t
docker_test	plugged/neomake/Makefile	/^docker_test: DOCKER_STREAMS:=-t$/;"	t
docker_test	plugged/neomake/Makefile	/^docker_test: _docker_test$/;"	t
docker_test_all	plugged/neomake/Makefile	/^docker_test_all: $(_DOCKER_VIM_TARGETS)$/;"	t
docker_test_interactive	plugged/neomake/Makefile	/^docker_test_interactive: DOCKER_MAKE_TEST_TARGET:=test_interactive$/;"	t
docker_test_interactive	plugged/neomake/Makefile	/^docker_test_interactive: DOCKER_STREAMS:=-ti$/;"	t
docker_test_interactive	plugged/neomake/Makefile	/^docker_test_interactive: _docker_test$/;"	t
docker_update_image	plugged/neomake/Makefile	/^docker_update_image:$/;"	t
docker_vimhelplint	plugged/neomake/Makefile	/^docker_vimhelplint:$/;"	t
doctest	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^doctest:$/;"	t
doctrine	plugged/nova-vim/package-lock.json	/^        "doctrine": "1.5.0",$/;"	s	object:dependencies.eslint.requires
doctrine	plugged/nova-vim/package-lock.json	/^    "doctrine": {$/;"	o	object:dependencies
dp_main	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^dp_main = os.path.join(os.path.dirname(__file__), 'dp_main.py')$/;"	v
ec_UseConfigFiles	plugged/editorconfig-vim/plugin/editorconfig.py	/^    def ec_UseConfigFiles():$/;"	f
ec_data	plugged/editorconfig-vim/plugin/editorconfig.py	/^    ec_data = {}$/;"	v
ecmaVersion	plugged/nova-vim/package.json	/^      "ecmaVersion": 2017,$/;"	n	object:eslintConfig.parserOptions
editorconfig	plugged/editorconfig-vim/plugin/editorconfig.vim	/^augroup editorconfig$/;"	a
editorconfig#AddNewHook	plugged/editorconfig-vim/autoload/editorconfig.vim	/^function editorconfig#AddNewHook(func) " {{{1$/;"	f
editorconfig#ApplyHooks	plugged/editorconfig-vim/autoload/editorconfig.vim	/^function editorconfig#ApplyHooks(config) " {{{1$/;"	f
editorconfig_except	plugged/editorconfig-vim/plugin/editorconfig.py	/^        import editorconfig.exceptions as editorconfig_except$/;"	I
editorconfig_trim_trailing_whitespace	plugged/editorconfig-vim/plugin/editorconfig.vim	/^    augroup editorconfig_trim_trailing_whitespace$/;"	a
elapsed	plugged/vim-gitgutter/unplace.vim	/^let elapsed = reltime(start)$/;"	v
element_count	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def element_count(self):$/;"	m	class:Type
element_count	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def element_count(self):$/;"	m	class:Type
element_type	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def element_type(self):$/;"	m	class:Type
element_type	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def element_type(self):$/;"	m	class:Type
enable_logging	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def enable_logging(self, context):$/;"	m	class:DeopleteHandlers
enable_logging	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def enable_logging(self):$/;"	m	class:Deoplete
enable_logging	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def enable_logging(self):$/;"	m	class:Parent
end	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def end(self):$/;"	m	class:SourceRange
end	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def end(self):$/;"	m	class:SourceRange
end	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/make.bat	/^:end$/;"	l
enum_type	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def enum_type(self):$/;"	m	class:Cursor
enum_type	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def enum_type(self):$/;"	m	class:Cursor
enum_value	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def enum_value(self):$/;"	m	class:Cursor
enum_value	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def enum_value(self):$/;"	m	class:Cursor
env	plugged/nova-vim/package.json	/^    "env": {$/;"	o	object:eslintConfig
epub	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^epub:$/;"	t
eq	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_translation_unit.py	/^    def eq(expected, actual):$/;"	f	function:test_includes	file:
eq	plugged/deoplete-clang/tests/clang/tests/cindex/test_translation_unit.py	/^    def eq(expected, actual):$/;"	f	function:test_includes	file:
error	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def error(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
error	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def error(vim, expr):$/;"	f
error	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def error(self, string):$/;"	m	class:Ui
error_tb	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def error_tb(vim, msg):$/;"	f
error_vim	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def error_vim(vim, msg):$/;"	f
es5-ext	plugged/nova-vim/package-lock.json	/^        "es5-ext": "0.10.23"$/;"	s	object:dependencies.d.requires
es5-ext	plugged/nova-vim/package-lock.json	/^        "es5-ext": "0.10.23"$/;"	s	object:dependencies.es6-symbol.requires
es5-ext	plugged/nova-vim/package-lock.json	/^        "es5-ext": "0.10.23"$/;"	s	object:dependencies.event-emitter.requires
es5-ext	plugged/nova-vim/package-lock.json	/^        "es5-ext": "0.10.23",$/;"	s	object:dependencies.es6-iterator.requires
es5-ext	plugged/nova-vim/package-lock.json	/^        "es5-ext": "0.10.23",$/;"	s	object:dependencies.es6-map.requires
es5-ext	plugged/nova-vim/package-lock.json	/^        "es5-ext": "0.10.23",$/;"	s	object:dependencies.es6-set.requires
es5-ext	plugged/nova-vim/package-lock.json	/^        "es5-ext": "0.10.23",$/;"	s	object:dependencies.es6-weak-map.requires
es5-ext	plugged/nova-vim/package-lock.json	/^    "es5-ext": {$/;"	o	object:dependencies
es6	plugged/nova-vim/package.json	/^      "es6": true,$/;"	b	object:eslintConfig.env
es6-iterator	plugged/nova-vim/package-lock.json	/^        "es6-iterator": "2.0.1",$/;"	s	object:dependencies.es5-ext.requires
es6-iterator	plugged/nova-vim/package-lock.json	/^        "es6-iterator": "2.0.1",$/;"	s	object:dependencies.es6-map.requires
es6-iterator	plugged/nova-vim/package-lock.json	/^        "es6-iterator": "2.0.1",$/;"	s	object:dependencies.es6-set.requires
es6-iterator	plugged/nova-vim/package-lock.json	/^        "es6-iterator": "2.0.1",$/;"	s	object:dependencies.es6-weak-map.requires
es6-iterator	plugged/nova-vim/package-lock.json	/^    "es6-iterator": {$/;"	o	object:dependencies
es6-map	plugged/nova-vim/package-lock.json	/^        "es6-map": "0.1.5",$/;"	s	object:dependencies.escope.requires
es6-map	plugged/nova-vim/package-lock.json	/^    "es6-map": {$/;"	o	object:dependencies
es6-set	plugged/nova-vim/package-lock.json	/^        "es6-set": "0.1.5",$/;"	s	object:dependencies.es6-map.requires
es6-set	plugged/nova-vim/package-lock.json	/^    "es6-set": {$/;"	o	object:dependencies
es6-symbol	plugged/nova-vim/package-lock.json	/^        "es6-symbol": "3.1.1"$/;"	s	object:dependencies.es5-ext.requires
es6-symbol	plugged/nova-vim/package-lock.json	/^        "es6-symbol": "3.1.1"$/;"	s	object:dependencies.es6-iterator.requires
es6-symbol	plugged/nova-vim/package-lock.json	/^        "es6-symbol": "3.1.1"$/;"	s	object:dependencies.es6-weak-map.requires
es6-symbol	plugged/nova-vim/package-lock.json	/^        "es6-symbol": "3.1.1",$/;"	s	object:dependencies.es6-map.requires
es6-symbol	plugged/nova-vim/package-lock.json	/^        "es6-symbol": "3.1.1",$/;"	s	object:dependencies.es6-set.requires
es6-symbol	plugged/nova-vim/package-lock.json	/^    "es6-symbol": {$/;"	o	object:dependencies
es6-weak-map	plugged/nova-vim/package-lock.json	/^        "es6-weak-map": "2.0.2",$/;"	s	object:dependencies.escope.requires
es6-weak-map	plugged/nova-vim/package-lock.json	/^    "es6-weak-map": {$/;"	o	object:dependencies
escape	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def escape(expr):$/;"	f
escape-string-regexp	plugged/nova-vim/package-lock.json	/^        "escape-string-regexp": "1.0.5",$/;"	s	object:dependencies.chalk.requires
escape-string-regexp	plugged/nova-vim/package-lock.json	/^        "escape-string-regexp": "1.0.5",$/;"	s	object:dependencies.figures.requires
escape-string-regexp	plugged/nova-vim/package-lock.json	/^    "escape-string-regexp": {$/;"	o	object:dependencies
escope	plugged/nova-vim/package-lock.json	/^        "escope": "3.6.0",$/;"	s	object:dependencies.eslint.requires
escope	plugged/nova-vim/package-lock.json	/^    "escope": {$/;"	o	object:dependencies
eslint	plugged/nova-vim/package-lock.json	/^    "eslint": {$/;"	o	object:dependencies
eslint	plugged/nova-vim/package.json	/^    "eslint": "3.5.0",$/;"	s	object:devDependencies
eslintConfig	plugged/nova-vim/package.json	/^  "eslintConfig": {$/;"	o
espree	plugged/nova-vim/package-lock.json	/^        "espree": "3.4.3",$/;"	s	object:dependencies.eslint.requires
espree	plugged/nova-vim/package-lock.json	/^    "espree": {$/;"	o	object:dependencies
esprima	plugged/nova-vim/package-lock.json	/^        "esprima": "3.1.3"$/;"	s	object:dependencies.js-yaml.requires
esprima	plugged/nova-vim/package-lock.json	/^    "esprima": {$/;"	o	object:dependencies
esrecurse	plugged/nova-vim/package-lock.json	/^        "esrecurse": "4.1.0",$/;"	s	object:dependencies.escope.requires
esrecurse	plugged/nova-vim/package-lock.json	/^    "esrecurse": {$/;"	o	object:dependencies
estraverse	plugged/nova-vim/package-lock.json	/^        "estraverse": "4.1.1",$/;"	s	object:dependencies.esrecurse.requires
estraverse	plugged/nova-vim/package-lock.json	/^        "estraverse": "4.2.0"$/;"	s	object:dependencies.escope.requires
estraverse	plugged/nova-vim/package-lock.json	/^        "estraverse": "4.2.0",$/;"	s	object:dependencies.eslint.requires
estraverse	plugged/nova-vim/package-lock.json	/^        "estraverse": {$/;"	o	object:dependencies.esrecurse.dependencies
estraverse	plugged/nova-vim/package-lock.json	/^    "estraverse": {$/;"	o	object:dependencies
esutils	plugged/nova-vim/package-lock.json	/^        "esutils": "2.0.2",$/;"	s	object:dependencies.doctrine.requires
esutils	plugged/nova-vim/package-lock.json	/^        "esutils": "2.0.2",$/;"	s	object:dependencies.eslint.requires
esutils	plugged/nova-vim/package-lock.json	/^    "esutils": {$/;"	o	object:dependencies
eval	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def eval(self, code):$/;"	m	class:Api
eval_under_cursor	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def eval_under_cursor(self):$/;"	m	class:DebuggerInterface
eval_under_cursor	plugged/vdebug/pythonx/vdebug/event.py	/^    def eval_under_cursor(session):$/;"	m	class:Dispatcher
evaluate	plugged/vdebug/rubylib/vdebug.rb	/^  def evaluate(expression = "", command = "VdebugEval")$/;"	f	class:Vdebug
evaluate!	plugged/vdebug/rubylib/vdebug.rb	/^  def evaluate!(expression)$/;"	f	class:Vdebug
event-emitter	plugged/nova-vim/package-lock.json	/^        "event-emitter": "0.3.5"$/;"	s	object:dependencies.es6-map.requires
event-emitter	plugged/nova-vim/package-lock.json	/^        "event-emitter": "0.3.5"$/;"	s	object:dependencies.es6-set.requires
event-emitter	plugged/nova-vim/package-lock.json	/^    "event-emitter": {$/;"	o	object:dependencies
events	plugged/vdebug/pythonx/vdebug/event.py	/^    events = {$/;"	v	class:Dispatcher
exception	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def exception(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
exception_to_string	plugged/vdebug/pythonx/vdebug/util.py	/^    def exception_to_string(self, e):$/;"	m	class:ExceptionHandler
exclude	plugged/vdebug/pythonx/vdebug/util.py	/^    exclude = ["run", "close", "set_breakpoint", "eval_visual"]$/;"	v	class:Keymapper
exclude_patterns	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^exclude_patterns = ['_build']$/;"	v
exec-sh	plugged/nova-vim/package-lock.json	/^        "exec-sh": "0.2.0",$/;"	s	object:dependencies.watch.requires
exec-sh	plugged/nova-vim/package-lock.json	/^    "exec-sh": {$/;"	o	object:dependencies
exit-hook	plugged/nova-vim/package-lock.json	/^        "exit-hook": "1.1.1",$/;"	s	object:dependencies.restore-cursor.requires
exit-hook	plugged/nova-vim/package-lock.json	/^    "exit-hook": {$/;"	o	object:dependencies
expand	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def expand(path):$/;"	f
expansion	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	o	object:message.spans.0
expansion	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	z	object:message.spans.0.expansion.def_site_span
expansion	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	z	object:message.spans.0.expansion.span
expansion	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	o	object:message.spans.0
expansion	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	z	object:message.spans.0.expansion.span
expansion	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	z	object:message.spans.0
explanation	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.code
extends	plugged/nova-vim/package.json	/^    "extends": "eslint:recommended",$/;"	s	object:eslintConfig
extensions	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^extensions = ['sphinx.ext.autodoc']$/;"	v
extent	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def extent(self):$/;"	m	class:Cursor
extent	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def extent(self):$/;"	m	class:Token
extent	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def extent(self):$/;"	m	class:Cursor
extent	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def extent(self):$/;"	m	class:Token
f	plugged/deoplete-clang/tests/test.c	/^int f(int x) {$/;"	f	typeref:typename:int
f	plugged/deoplete-clang/tests/test.cpp	/^int f(int x) {$/;"	f	typeref:typename:int
fast-levenshtein	plugged/nova-vim/package-lock.json	/^        "fast-levenshtein": "2.0.6",$/;"	s	object:dependencies.optionator.requires
fast-levenshtein	plugged/nova-vim/package-lock.json	/^    "fast-levenshtein": {$/;"	o	object:dependencies
fatal	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    fatal = critical$/;"	v	class:LoggingMixin
feature_get	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def feature_get(self, name):$/;"	m	class:Api
feature_set	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def feature_set(self, name, value):$/;"	m	class:Api
features	plugged/neomake/tests/fixtures/rust/cargo_info.json	/^{"features":["default"],"filenames":["\/home\/jelte\/fun\/derive_more\/target\/debug\/deps\/libu/;"	a
fetch_buffer_content	plugged/vdebug/rubylib/vdebug.rb	/^  def fetch_buffer_content(name)$/;"	f	class:Vdebug
fetch_buffers	plugged/vdebug/rubylib/vdebug.rb	/^  def fetch_buffers$/;"	f	class:Vdebug
figures	plugged/nova-vim/package-lock.json	/^        "figures": "1.7.0",$/;"	s	object:dependencies.inquirer.requires
figures	plugged/nova-vim/package-lock.json	/^    "figures": {$/;"	o	object:dependencies
file	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def file(self):$/;"	m	class:SourceLocation
file	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/INPUTS/compile_commands.json	/^  "file": "\/home\/john.doe\/MyProject\/project.cpp"$/;"	s	object:0
file	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/INPUTS/compile_commands.json	/^  "file": "\/home\/john.doe\/MyProject\/project2.cpp"$/;"	s	object:1
file	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/INPUTS/compile_commands.json	/^  "file": "\/home\/john.doe\/MyProject\/project2.cpp"$/;"	s	object:2
file	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def file(self):$/;"	m	class:SourceLocation
file	plugged/deoplete-clang/tests/clang/tests/cindex/INPUTS/compile_commands.json	/^  "file": "\/home\/john.doe\/MyProject\/project.cpp"$/;"	s	object:0
file	plugged/deoplete-clang/tests/clang/tests/cindex/INPUTS/compile_commands.json	/^  "file": "\/home\/john.doe\/MyProject\/project2.cpp"$/;"	s	object:1
file	plugged/deoplete-clang/tests/clang/tests/cindex/INPUTS/compile_commands.json	/^  "file": "\/home\/john.doe\/MyProject\/project2.cpp"$/;"	s	object:2
file	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    file = None$/;"	v	class:SourceWindow
file-entry-cache	plugged/nova-vim/package-lock.json	/^        "file-entry-cache": "2.0.0",$/;"	s	object:dependencies.eslint.requires
file-entry-cache	plugged/nova-vim/package-lock.json	/^    "file-entry-cache": {$/;"	o	object:dependencies
file_name	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.spans.0
file_name	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.spans.0.expansion.def_site_span
file_name	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.spans.0.expansion.span
file_name	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	s	object:message.spans.0
file_name	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	s	object:message.spans.0.expansion.span
file_name	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	s	object:message.spans.0
filename	plugged/vdebug/tests/test_log.py	/^    filename = '\/tmp\/vdebug-test-log-file'$/;"	v	class:FileLoggerTest
filenames	plugged/neomake/tests/fixtures/rust/cargo_info.json	/^{"features":["default"],"filenames":["\/home\/jelte\/fun\/derive_more\/target\/debug\/deps\/libu/;"	a
filetypedetect	autoload/plug.vim	/^        augroup filetypedetect$/;"	a
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/base.py	/^    def filter(self, context):$/;"	m	class:Base
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_paren.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_paren.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_abbr.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_kind.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_menu.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_fuzzy.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_head.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_length.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_word.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def filter(self, record):$/;"	m	class:DeopleteLogFilter
filter	plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^	def filter(self, context):$/;"	m	class:Filter
find_breakpoint	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def find_breakpoint(self, file, line):$/;"	m	class:Store
find_rplugins	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def find_rplugins(context, source):$/;"	f
first	plugged/vim-php-cs-fixer/tests/fixtures/misc/phpdoc_to_comment,phpdoc_var_without_name.php	/^$first = true;\/\/ needed because by default first docblock is never fixed.$/;"	v
first	plugged/vim-php-cs-fixer/tests/results/misc/phpdoc_to_comment,phpdoc_var_without_name.php	/^$first = true;\/\/ needed because by default first docblock is never fixed.$/;"	v
fixits	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def fixits(self):$/;"	m	class:Diagnostic
fixits	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def fixits(self):$/;"	m	class:Diagnostic
flake8	plugged/deoplete-clang/Makefile	/^flake8:$/;"	t
flat-cache	plugged/nova-vim/package-lock.json	/^        "flat-cache": "1.2.2",$/;"	s	object:dependencies.file-entry-cache.requires
flat-cache	plugged/nova-vim/package-lock.json	/^    "flat-cache": {$/;"	o	object:dependencies
fnmatch	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/fnmatch.py	/^def fnmatch(name, pat):$/;"	f
fnmatchcase	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/fnmatch.py	/^def fnmatchcase(name, pat):$/;"	f
focus	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def focus(self):$/;"	m	class:SourceWindow
force_unicode	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/compat.py	/^def force_unicode(string):$/;"	f
fork_and_run	plugged/vdebug/features/support/helpers.rb	/^  def fork_and_run(bin, argstr)$/;"	f	module:ScriptRunner
format	plugged/vdebug/pythonx/vdebug/log.py	/^    def format(self, string, level):$/;"	m	class:Logger
friendly_name	plugged/vim-gitgutter/test/runner.vim	/^  let friendly_name = FriendlyName(test)$/;"	v
from a vim string containing a no name buffer	plugged/vdebug/spec/vdebug_spec.rb	/^    context "from a vim string containing a no name buffer" do$/;"	c
from a vim string containing vdebug buffers names	plugged/vdebug/spec/vdebug_spec.rb	/^    context "from a vim string containing vdebug buffers names" do$/;"	c
fromDirectory	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def fromDirectory(buildDir):$/;"	m	class:CompilationDatabase
fromDirectory	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def fromDirectory(buildDir):$/;"	m	class:CompilationDatabase
from_ast_file	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_ast_file(cls, filename, index=None):$/;"	m	class:TranslationUnit
from_ast_file	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_ast_file(cls, filename, index=None):$/;"	m	class:TranslationUnit
from_cursor_result	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_cursor_result(res, fn, args):$/;"	m	class:Cursor
from_cursor_result	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_cursor_result(res, fn, args):$/;"	m	class:File
from_cursor_result	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_cursor_result(res, fn, args):$/;"	m	class:Cursor
from_cursor_result	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_cursor_result(res, fn, args):$/;"	m	class:File
from_id	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_id(cls, id):$/;"	m	class:BaseEnumeration
from_id	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_id(id):$/;"	m	class:RefQualifierKind
from_id	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_id(id):$/;"	m	class:StorageClass
from_id	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_id(cls, id):$/;"	m	class:BaseEnumeration
from_id	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_id(id):$/;"	m	class:RefQualifierKind
from_id	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_id(id):$/;"	m	class:StorageClass
from_location	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_location(tu, location):$/;"	m	class:Cursor
from_location	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_location(tu, location):$/;"	m	class:Cursor
from_locations	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_locations(start, end):$/;"	m	class:SourceRange
from_locations	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_locations(start, end):$/;"	m	class:SourceRange
from_name	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_name(translation_unit, file_name):$/;"	m	class:File
from_name	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_name(translation_unit, file_name):$/;"	m	class:File
from_offset	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_offset(tu, file, offset):$/;"	m	class:SourceLocation
from_offset	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_offset(tu, file, offset):$/;"	m	class:SourceLocation
from_param	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_param(self):$/;"	m	class:AccessSpecifier
from_param	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_param(self):$/;"	m	class:BaseEnumeration
from_param	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_param(self):$/;"	m	class:ClangObject
from_param	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_param(self):$/;"	m	class:CodeCompletionResults
from_param	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_param(self):$/;"	m	class:Diagnostic
from_param	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_param(self):$/;"	m	class:RefQualifierKind
from_param	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_param(self):$/;"	m	class:StorageClass
from_param	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_param(self):$/;"	m	class:AccessSpecifier
from_param	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_param(self):$/;"	m	class:BaseEnumeration
from_param	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_param(self):$/;"	m	class:ClangObject
from_param	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_param(self):$/;"	m	class:CodeCompletionResults
from_param	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_param(self):$/;"	m	class:Diagnostic
from_param	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_param(self):$/;"	m	class:RefQualifierKind
from_param	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_param(self):$/;"	m	class:StorageClass
from_position	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_position(tu, file, line, column):$/;"	m	class:SourceLocation
from_position	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_position(tu, file, line, column):$/;"	m	class:SourceLocation
from_result	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_result(res, fn, args):$/;"	m	class:CompilationDatabase
from_result	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_result(res, fn, args):$/;"	m	class:CompileCommands
from_result	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_result(res, fn, args):$/;"	m	class:Cursor
from_result	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_result(res, fn, args):$/;"	m	class:Type
from_result	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_result(res, fn, args):$/;"	m	class:_CXString
from_result	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_result(res, fn, args):$/;"	m	class:CompilationDatabase
from_result	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_result(res, fn, args):$/;"	m	class:CompileCommands
from_result	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_result(res, fn, args):$/;"	m	class:Cursor
from_result	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_result(res, fn, args):$/;"	m	class:Type
from_result	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_result(res, fn, args):$/;"	m	class:_CXString
from_source	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_source(cls, filename, args=None, unsaved_files=None, options=0,$/;"	m	class:TranslationUnit
from_source	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_source(cls, filename, args=None, unsaved_files=None, options=0,$/;"	m	class:TranslationUnit
from_value	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def from_value(value):$/;"	m	class:TokenKind
from_value	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def from_value(value):$/;"	m	class:TokenKind
fs.realpath	plugged/nova-vim/package-lock.json	/^        "fs.realpath": "1.0.0",$/;"	s	object:dependencies.glob.requires
fs.realpath	plugged/nova-vim/package-lock.json	/^    "fs.realpath": {$/;"	o	object:dependencies
func-run-vim	plugged/neomake/Makefile	/^define func-run-vim$/;"	m
functionList	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^functionList = [$/;"	v
functionList	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^functionList = [$/;"	v
function_exists	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def function_exists(self, name):$/;"	m	class:Config
function_exists	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def function_exists(self, name):$/;"	m	class:Config
fuzzy_escape	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def fuzzy_escape(string, camelcase):$/;"	f
fzf#complete	plugged/fzf.vim/plugin/fzf.vim	/^function! fzf#complete(...)$/;"	f
fzf#vim#_lines	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_lines(all)$/;"	f
fzf#vim#_uniq	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_uniq(list)$/;"	f
fzf#vim#ag	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag(query, ...)$/;"	f
fzf#vim#ag_raw	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag_raw(command_suffix, ...)$/;"	f
fzf#vim#buffer_commits	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_commits(...)$/;"	f
fzf#vim#buffer_lines	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_lines(...)$/;"	f
fzf#vim#buffer_tags	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_tags(query, ...)$/;"	f
fzf#vim#buffers	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffers(...)$/;"	f
fzf#vim#colors	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#colors(...)$/;"	f
fzf#vim#command_history	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#command_history(...)$/;"	f
fzf#vim#commands	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commands(...)$/;"	f
fzf#vim#commits	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commits(...)$/;"	f
fzf#vim#complete	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#complete(...)$/;"	f
fzf#vim#complete#buffer_line	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#buffer_line(...)$/;"	f
fzf#vim#complete#line	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#line(...)$/;"	f
fzf#vim#complete#path	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#path(command, ...)$/;"	f
fzf#vim#complete#word	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#word(...)$/;"	f
fzf#vim#files	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#files(dir, ...)$/;"	f
fzf#vim#filetypes	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#filetypes(...)$/;"	f
fzf#vim#gitfiles	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#gitfiles(args, ...)$/;"	f
fzf#vim#grep	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#grep(grep_command, with_column, ...)$/;"	f
fzf#vim#helptags	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#helptags(...)$/;"	f
fzf#vim#history	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#history(...)$/;"	f
fzf#vim#lines	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#lines(...)$/;"	f
fzf#vim#locate	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#locate(query, ...)$/;"	f
fzf#vim#maps	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#maps(mode, ...)$/;"	f
fzf#vim#marks	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#marks(...)$/;"	f
fzf#vim#search_history	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#search_history(...)$/;"	f
fzf#vim#snippets	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#snippets(...)$/;"	f
fzf#vim#tags	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#tags(query, ...)$/;"	f
fzf#vim#windows	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#windows(...)$/;"	f
fzf#vim#with_preview	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#with_preview(...)$/;"	f
fzf_buffers	plugged/fzf.vim/plugin/fzf.vim	/^augroup fzf_buffers$/;"	a
g:	plugged/neomake/autoload/neomake.vim	/^                    let g:[restore_vimqf[0]] = restore_vimqf[1]$/;"	v
g:	plugged/neomake/autoload/neomake.vim	/^                let g:[vimqf_var] = 0$/;"	v
g:	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:[newname] = g:[key]$/;"	v
g:CtrlSpaceStatuslineFunction	plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^  let g:CtrlSpaceStatuslineFunction = "airline#extensions#ctrlspace#statusline()"$/;"	v
g:DevIconsAppendArtifactFix	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:DevIconsAppendArtifactFix = 0$/;"	v
g:DevIconsAppendArtifactFix	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:DevIconsAppendArtifactFix = 1$/;"	v
g:DevIconsArtifactFixChar	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:DevIconsArtifactFixChar = "\\u00A0"$/;"	v
g:DevIconsDefaultFolderOpenSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:DevIconsDefaultFolderOpenSymbol = ''$/;"	v
g:DevIconsEnableFolderExtensionPatternMatching	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:DevIconsEnableFolderExtensionPatternMatching = 0$/;"	v
g:DevIconsEnableFolderExtensionPatternMatching	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:DevIconsEnableFolderExtensionPatternMatching = 0$/;"	v
g:DevIconsEnableFolderPatternMatching	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:DevIconsEnableFolderPatternMatching = 1$/;"	v
g:DevIconsEnableFolderPatternMatching	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:DevIconsEnableFolderPatternMatching = 1$/;"	v
g:DevIconsEnableFoldersOpenClose	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:DevIconsEnableFoldersOpenClose = 0$/;"	v
g:DevIconsEnableFoldersOpenClose	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:DevIconsEnableFoldersOpenClose = 0$/;"	v
g:DevIconsEnableNERDTreeRedraw	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:DevIconsEnableNERDTreeRedraw = 0$/;"	v
g:DevIconsEnableNERDTreeRedraw	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:DevIconsEnableNERDTreeRedraw = 1$/;"	v
g:EditorConfig_disable_rules	plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_disable_rules = []$/;"	v
g:EditorConfig_exclude_patterns	plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_exclude_patterns = []$/;"	v
g:EditorConfig_exec_path	plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_exec_path = ''$/;"	v
g:EditorConfig_max_line_indicator	plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_max_line_indicator = 'line'$/;"	v
g:EditorConfig_preserve_formatoptions	plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_preserve_formatoptions = 0$/;"	v
g:EditorConfig_python_files_dir	plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_python_files_dir = 'plugin\/editorconfig-core-py'$/;"	v
g:EditorConfig_verbose	plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_verbose = 0$/;"	v
g:GoldenView_zl_autoload_path	plugged/GoldenView.Vim/plugin/zl/bootstrap.vim	/^  let g:GoldenView_zl_autoload_path = expand(g:GoldenView_zl_bundle_path . '\/autoload\/GoldenVi/;"	v
g:GoldenView_zl_bundle_path	plugged/GoldenView.Vim/plugin/zl/bootstrap.vim	/^  let g:GoldenView_zl_bundle_path = fnamemodify(expand("<sfile>"), ":p:h:h:h")$/;"	v
g:GoldenView_zl_debug_mode	plugged/GoldenView.Vim/autoload/GoldenView/zl/rc.vim	/^        let g:GoldenView_zl_debug_mode = 0$/;"	v
g:GoldenView_zl_force_reload	plugged/GoldenView.Vim/autoload/GoldenView/zl/rc.vim	/^        let g:GoldenView_zl_force_reload = 0$/;"	v
g:GoldenView_zl_force_reload	plugged/GoldenView.Vim/autoload/GoldenView/zl/rc.vim	/^    let g:GoldenView_zl_force_reload = 1$/;"	v
g:GoldenView_zl_force_reload	plugged/GoldenView.Vim/autoload/GoldenView/zl/rc.vim	/^    let g:GoldenView_zl_force_reload = l:saved$/;"	v
g:GoldenView_zl_py	plugged/GoldenView.Vim/autoload/GoldenView/zl/rc.vim	/^        let g:GoldenView_zl_py = ''$/;"	v
g:GoldenView_zl_py	plugged/GoldenView.Vim/autoload/GoldenView/zl/rc.vim	/^        let g:GoldenView_zl_py = 'py'$/;"	v
g:GoldenView_zl_py	plugged/GoldenView.Vim/autoload/GoldenView/zl/rc.vim	/^        let g:GoldenView_zl_py = 'py3'$/;"	v
g:GoldenView_zl_pyeval	plugged/GoldenView.Vim/autoload/GoldenView/zl/rc.vim	/^        let g:GoldenView_zl_pyeval = ''$/;"	v
g:GoldenView_zl_pyeval	plugged/GoldenView.Vim/autoload/GoldenView/zl/rc.vim	/^        let g:GoldenView_zl_pyeval = 'py3eval'$/;"	v
g:GoldenView_zl_pyeval	plugged/GoldenView.Vim/autoload/GoldenView/zl/rc.vim	/^        let g:GoldenView_zl_pyeval = 'pyeval'$/;"	v
g:NERDDelimiterMap	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^let g:NERDDelimiterMap = s:delimiterMap$/;"	v
g:NERDTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoDeleteBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^        let g:NERDTreeBookmarks = []$/;"	v
g:NERDTreeCreator	plugged/nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirArrowCollapsible	config.d/nerdtree.vim	/^let g:NERDTreeDirArrowCollapsible='▾'$/;"	v
g:NERDTreeDirArrowExpandable	config.d/nerdtree.vim	/^let g:NERDTreeDirArrowExpandable='▸'$/;"	v
g:NERDTreeDirNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	plugged/nerdtree/lib/nerdtree/event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeFileNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeIgnore	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeInvalidBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^        let g:NERDTreeInvalidBookmarks = []$/;"	v
g:NERDTreeKeyMap	plugged/nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMapNextHunk	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeMapNextHunk = ']c'$/;"	v
g:NERDTreeMapPrevHunk	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeMapPrevHunk = '[c'$/;"	v
g:NERDTreeMenuController	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeOpener	plugged/nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	plugged/nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	plugged/nerdtree/lib/nerdtree/notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreeRespectWildIgnore	config.d/nerdtree.vim	/^let g:NERDTreeRespectWildIgnore=1$/;"	v
g:NERDTreeShowGitStatus	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeShowGitStatus = 1$/;"	v
g:NERDTreeShowIgnoredStatus	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeShowIgnoredStatus = 0$/;"	v
g:NERDTreeSortOrder	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTree')?b:NERDTree.root.path.str():''}"$/;"	v
g:NERDTreeUI	plugged/nerdtree/lib/nerdtree/ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:NERDTreeUpdateOnCursorHold	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeUpdateOnCursorHold = 1$/;"	v
g:NERDTreeUpdateOnCursorHold	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:NERDTreeUpdateOnCursorHold = 1$/;"	v
g:NERDTreeUpdateOnWrite	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeUpdateOnWrite = 1$/;"	v
g:NERDTreeWinSize	config.d/nerdtree.vim	/^let g:NERDTreeWinSize = 40$/;"	v
g:WebDevIconsNerdTreeAfterGlyphPadding	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:WebDevIconsNerdTreeAfterGlyphPadding = ' '$/;"	v
g:WebDevIconsNerdTreeBeforeGlyphPadding	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:WebDevIconsNerdTreeBeforeGlyphPadding = ' '$/;"	v
g:WebDevIconsNerdTreeGitPluginForceVAlign	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:WebDevIconsNerdTreeGitPluginForceVAlign = 1$/;"	v
g:WebDevIconsUnicodeByteOrderMarkerDefaultSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:WebDevIconsUnicodeByteOrderMarkerDefaultSymbol = ''$/;"	v
g:WebDevIconsUnicodeDecorateFileNodes	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:WebDevIconsUnicodeDecorateFileNodes = 1$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesDefaultSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:WebDevIconsUnicodeDecorateFileNodesDefaultSymbol = ''$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExactSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^      let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols[key] = val$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExactSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols = {}$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^      let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols[key] = val$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols = {}$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^      let g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols[key] = val$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols = {}$/;"	v
g:WebDevIconsUnicodeDecorateFolderNodes	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:WebDevIconsUnicodeDecorateFolderNodes = 0$/;"	v
g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol = ''$/;"	v
g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol = ''$/;"	v
g:WebDevIconsUnicodeDecorateFolderNodesExactMatches	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:WebDevIconsUnicodeDecorateFolderNodesExactMatches = 1$/;"	v
g:WebDevIconsUnicodeDecorateFolderNodesSymlinkSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:WebDevIconsUnicodeDecorateFolderNodesSymlinkSymbol =  ''$/;"	v
g:WebDevIconsUnicodeGlyphDoubleWidth	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:WebDevIconsUnicodeGlyphDoubleWidth = 1$/;"	v
g:__fzf_command	plugged/fzf.vim/autoload/fzf/vim.vim	/^    let g:__fzf_command = "normal ".a:type.item."\\<cr>"$/;"	v
g:_plug_bang	autoload/plug.vim	/^    let g:_plug_bang = (s:is_win && has('gui_running') ? 'silent ' : '').'!'.escape(cmd, '#!%')$/;"	v
g:_webdevicons_airline_orig_formatter	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:_webdevicons_airline_orig_formatter = 'default'$/;"	v
g:_webdevicons_airline_orig_formatter	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:_webdevicons_airline_orig_formatter = g:airline#extensions#tabline#formatter$/;"	v
g:airline#extensions#branch#enabled	config.d/airline.vim	/^let g:airline#extensions#branch#enabled = 1$/;"	v
g:airline#extensions#default#layout	plugged/vim-airline/t/extensions_default.vim	/^let g:airline#extensions#default#layout = [$/;"	v
g:airline#extensions#example#number_of_cats	plugged/vim-airline/autoload/airline/extensions/example.vim	/^  let g:airline#extensions#example#number_of_cats = 42$/;"	v
g:airline#extensions#gutentags#enabled	config.d/airline.vim	/^let g:airline#extensions#gutentags#enabled = 1$/;"	v
g:airline#extensions#linecolumn#prefix	config.d/airline.vim	/^let g:airline#extensions#linecolumn#prefix = '¶'$/;"	v
g:airline#extensions#localsearch#loaded	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let g:airline#extensions#localsearch#loaded = 001$/;"	v
g:airline#extensions#neomake#enabled	config.d/airline.vim	/^let g:airline#extensions#neomake#enabled = 1$/;"	v
g:airline#extensions#obsession#indicator_text	plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^  let g:airline#extensions#obsession#indicator_text = '$'$/;"	v
g:airline#extensions#paste#symbol	config.d/airline.vim	/^let g:airline#extensions#paste#symbol = 'ρ'$/;"	v
g:airline#extensions#quickfix#location_text	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^  let g:airline#extensions#quickfix#location_text = 'Location'$/;"	v
g:airline#extensions#quickfix#quickfix_text	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^  let g:airline#extensions#quickfix#quickfix_text = 'Quickfix'$/;"	v
g:airline#extensions#readonly#symbol	config.d/airline.vim	/^let g:airline#extensions#readonly#symbol = '⊘'$/;"	v
g:airline#extensions#tabline#enabled	config.d/airline.vim	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline#extensions#tabline#formatter	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:airline#extensions#tabline#formatter = 'webdevicons'$/;"	v
g:airline#extensions#tabline#left_alt_sep	config.d/airline.vim	/^let g:airline#extensions#tabline#left_alt_sep = '|'$/;"	v
g:airline#extensions#tabline#left_sep	config.d/airline.vim	/^let g:airline#extensions#tabline#left_sep = ' '$/;"	v
g:airline#extensions#whitespace#enabled	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^    let g:airline#extensions#whitespace#enabled = s:enabled$/;"	v
g:airline#extensions#windowswap#indicator_text	plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^  let g:airline#extensions#windowswap#indicator_text = 'WS'$/;"	v
g:airline#extensions#wordcount#filetypes	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^let g:airline#extensions#wordcount#filetypes = get(g:, 'airline#extensions#wordcount#filetypes',$/;"	v
g:airline#extensions#ycm#enabled	config.d/airline.vim	/^let g:airline#extensions#ycm#enabled = 1$/;"	v
g:airline#highlighter#normal_fg_hi	plugged/vim-airline/autoload/airline/highlighter.vim	/^    let g:airline#highlighter#normal_fg_hi = synIDattr(synIDtrans(hlID('Normal')), 'fg', 'cterm'/;"	v
g:airline#init#bootstrapping	plugged/vim-airline/autoload/airline/init.vim	/^  let g:airline#init#bootstrapping = 1$/;"	v
g:airline#init#is_windows	plugged/vim-airline/autoload/airline/init.vim	/^  let g:airline#init#is_windows = has('win32') || has('win64')$/;"	v
g:airline#init#vim_async	plugged/vim-airline/autoload/airline/init.vim	/^  let g:airline#init#vim_async = (v:version >= 800 && has('job'))$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^  let g:airline#themes#dark#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette = {}$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.accents = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive = airline#themes#generate_color_map(s:airline_a_inact/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive_modified = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert = airline#themes#generate_color_map(s:airline_a_insert,/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_modified = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_paste = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal = airline#themes#generate_color_map(s:airline_a_normal,/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal_modified = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace = copy(g:airline#themes#dark#palette.insert)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace.airline_a = [ s:airline_b_insert[0]   , '#af0000' , s:/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace_modified = g:airline#themes#dark#palette.insert_modifi/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual = airline#themes#generate_color_map(s:airline_a_visual,/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual_modified = {$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette = {}$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.accents = {'red': [ "#7FC1CA" , "" , "" , "" ]}$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.inactive = airline#themes#generate_color_map(s:IN1, s:IN2, s:I/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.inactive_modified = s:modified$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.insert.airline_error = s:AirlineError$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.insert.airline_warning = s:AirlineWarning$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.insert_modified = s:modified$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.insert_modified.airline_error = s:AirlineError$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.insert_modified.airline_warning = s:AirlineWarning$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.normal.airline_error = s:AirlineError$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.normal.airline_warning = s:AirlineWarning$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.normal_modified = s:modified$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.normal_modified.airline_error = s:AirlineError$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.normal_modified.airline_warning = s:AirlineWarning$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.replace.airline_error = s:AirlineError$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.replace.airline_warning = s:AirlineWarning$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.replace_modified = s:modified$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.replace_modified.airline_error = s:AirlineError$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.replace_modified.airline_warning = s:AirlineWarning$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.tabline = {$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.visual.airline_error = s:AirlineError$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.visual.airline_warning = s:AirlineWarning$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.visual_modified = s:modified$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.visual_modified.airline_error = s:AirlineError$/;"	v
g:airline#themes#nova#palette	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let g:airline#themes#nova#palette.visual_modified.airline_warning = s:AirlineWarning$/;"	v
g:airline_gui_mode	plugged/vim-airline/autoload/airline/highlighter.vim	/^    let g:airline_gui_mode = airline#init#gui_mode()$/;"	v
g:airline_gui_mode	plugged/vim-airline/plugin/airline.vim	/^  let g:airline_gui_mode = airline#init#gui_mode()$/;"	v
g:airline_inactive_collapse	plugged/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 0$/;"	v
g:airline_inactive_collapse	plugged/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 1$/;"	v
g:airline_last_window_changed	plugged/vim-airline/plugin/airline.vim	/^  let g:airline_last_window_changed = l:key$/;"	v
g:airline_left_alt_sep	config.d/airline.vim	/^let g:airline_left_alt_sep = '»'$/;"	v
g:airline_left_sep	config.d/airline.vim	/^let g:airline_left_sep = '▶'$/;"	v
g:airline_powerline_fonts	config.d/airline.vim	/^let g:airline_powerline_fonts=0$/;"	v
g:airline_readonly_symbol	config.d/airline.vim	/^let g:airline_readonly_symbol = '⭤'$/;"	v
g:airline_right_alt_sep	config.d/airline.vim	/^let g:airline_right_alt_sep = '«'$/;"	v
g:airline_right_sep	config.d/airline.vim	/^let g:airline_right_sep = '◀'$/;"	v
g:airline_section_	plugged/vim-airline/t/init.vim	/^      let g:airline_section_{s} = s$/;"	v
g:airline_section_a	plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_a = airline#section#create_left(['mode', 'crypt', 'paste', 'keymap', '/;"	v
g:airline_section_a	plugged/vim-airline/t/airline.vim	/^    let g:airline_section_a = airline#section#create(['mode', 'mode'])$/;"	v
g:airline_section_b	plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_b = airline#section#create(['hunks', 'branch'])$/;"	v
g:airline_section_c	plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_c = airline#section#create(['%<', 'file', spc, 'readonly'])$/;"	v
g:airline_section_c	plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_c = airline#section#create(['%<', 'path', spc, 'readonly'])$/;"	v
g:airline_section_error	plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_error = airline#section#create(['ycm_error_count', 'syntastic-err', 'e/;"	v
g:airline_section_gutter	plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_gutter = airline#section#create(['%='])$/;"	v
g:airline_section_warning	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^      let g:airline_section_warning .= airline#section#create(['whitespace'])$/;"	v
g:airline_section_warning	plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_warning = airline#section#create(['ycm_warning_count',  'syntastic-war/;"	v
g:airline_section_x	plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_x = airline#section#create_right(['tagbar', 'gutentags', 'filetype'])$/;"	v
g:airline_section_y	plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_y = airline#section#create_right(['ffenc'])$/;"	v
g:airline_section_z	plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_z = airline#section#create(['%3p%%'.spc, 'linenr',  ':%3v'])$/;"	v
g:airline_section_z	plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_z = airline#section#create(['windowswap', 'obsession', '%3p%%'.spc, /;"	v
g:airline_skip_empty_sections	config.d/airline.vim	/^let g:airline_skip_empty_sections = 1$/;"	v
g:airline_statusline_funcrefs	plugged/vim-airline/autoload/airline.vim	/^let g:airline_statusline_funcrefs = get(g:, 'airline_statusline_funcrefs', [])$/;"	v
g:airline_statusline_funcrefs	plugged/vim-airline/t/airline.vim	/^    let g:airline_statusline_funcrefs = []$/;"	v
g:airline_symbols	config.d/airline.vim	/^  let g:airline_symbols = {}$/;"	v
g:airline_symbols	config.d/airline.vim	/^let g:airline_symbols.branch = '⎇'$/;"	v
g:airline_symbols	config.d/airline.vim	/^let g:airline_symbols.linenr = '␊'$/;"	v
g:airline_symbols	config.d/airline.vim	/^let g:airline_symbols.paste = 'Þ'$/;"	v
g:airline_symbols	config.d/airline.vim	/^let g:airline_symbols.paste = 'ρ'$/;"	v
g:airline_symbols	config.d/airline.vim	/^let g:airline_symbols.paste = '∥'$/;"	v
g:airline_symbols	config.d/airline.vim	/^let g:airline_symbols.whitespace = 'Ξ'$/;"	v
g:airline_theme	config.d/airline.vim	/^let g:airline_theme = 'nova'$/;"	v
g:airline_theme	plugged/vim-airline/autoload/airline.vim	/^      let g:airline_theme = 'dark'$/;"	v
g:airline_theme	plugged/vim-airline/autoload/airline.vim	/^    let g:airline_theme = a:name$/;"	v
g:airline_theme	plugged/vim-airline/autoload/airline.vim	/^  let g:airline_theme = get(g:, 'airline_theme', 'dark')$/;"	v
g:airline_theme	plugged/vim-airline/plugin/airline.vim	/^      let g:airline_theme = 'dark'$/;"	v
g:airline_theme	plugged/vim-airline/plugin/airline.vim	/^    let g:airline_theme = 'dark'$/;"	v
g:airline_theme	plugged/vim-airline/t/airline.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	plugged/vim-airline/t/builder.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	plugged/vim-airline/t/highlighter.vim	/^let g:airline_theme = 'dark'$/;"	v
g:autoloaded_startify	plugged/vim-startify/autoload/startify.vim	/^let g:autoloaded_startify = 1$/;"	v
g:autoloaded_undotree	plugged/undotree/autoload/undotree.vim	/^let g:autoloaded_undotree = 0$/;"	v
g:bufferline_active_buffer_left	plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_active_buffer_left = ''$/;"	v
g:bufferline_active_buffer_right	plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_active_buffer_right = ''$/;"	v
g:bufferline_active_highlight	plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_active_highlight = 'bufferline_selected'$/;"	v
g:bufferline_inactive_highlight	plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_inactive_highlight = 'airline_c'$/;"	v
g:bufferline_separator	plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_separator = g:airline_symbols.space$/;"	v
g:colors_name	plugged/nova-vim/colors/nova.vim	/^let g:colors_name = "nova"$/;"	v
g:count	plugged/vim-airline/t/util.vim	/^    let g:count = 0$/;"	v
g:count	plugged/vim-airline/t/util.vim	/^  let g:count += 1$/;"	v
g:count	plugged/vim-airline/t/util.vim	/^  let g:count += 2$/;"	v
g:count	plugged/vim-airline/t/util.vim	/^  let g:count = a:0$/;"	v
g:ctrlp_formatline_func	plugged/vim-devicons/plugin/webdevicons.vim	/^        let g:ctrlp_formatline_func = 's:formatline(s:curtype() == "buf" ? v:val : WebDevIconsGe/;"	v
g:ctrlp_status_func	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^  let g:ctrlp_status_func = {$/;"	v
g:current_line_whitespace_disabled_hard	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^            let g:current_line_whitespace_disabled_hard = 0$/;"	v
g:current_line_whitespace_disabled_hard	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^            let g:current_line_whitespace_disabled_hard = 1$/;"	v
g:current_line_whitespace_disabled_hard	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^        let g:current_line_whitespace_disabled_hard = 0$/;"	v
g:current_line_whitespace_disabled_soft	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^            let g:current_line_whitespace_disabled_soft = 0$/;"	v
g:current_line_whitespace_disabled_soft	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^            let g:current_line_whitespace_disabled_soft = 1$/;"	v
g:current_line_whitespace_disabled_soft	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^        let g:current_line_whitespace_disabled_soft = 0$/;"	v
g:cursormode_exit_mode	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^  let g:cursormode_exit_mode='n'$/;"	v
g:deoplete#_context	plugged/deoplete.nvim/autoload/deoplete.vim	/^      let g:deoplete#_context.event = 'Refresh'$/;"	v
g:deoplete#_context	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^        let g:deoplete#_context.candidates = []$/;"	v
g:deoplete#_context	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^    let g:deoplete#_context.candidates = []$/;"	v
g:deoplete#_context	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^    let g:deoplete#_context.input = input$/;"	v
g:deoplete#_context	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^  let g:deoplete#_context = {}$/;"	v
g:deoplete#_context	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^  let g:deoplete#_context = {}$/;"	v
g:deoplete#_logging	plugged/deoplete.nvim/autoload/deoplete.vim	/^  let g:deoplete#_logging = {'level': a:level, 'logfile': a:logfile}$/;"	v
g:deoplete#_logging	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^    let g:deoplete#_logging = {}$/;"	v
g:deoplete#_prev_completion	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^  let g:deoplete#_prev_completion = {$/;"	v
g:deoplete#_prev_completion	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^  let g:deoplete#_prev_completion = {$/;"	v
g:deoplete#_rank	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^    let g:deoplete#_rank[word] += 1$/;"	v
g:deoplete#_rank	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^    let g:deoplete#_rank[word] = 1$/;"	v
g:deoplete#_rank	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^  let g:deoplete#_rank = {}$/;"	v
g:deoplete#_saved_completeopt	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^  let g:deoplete#_saved_completeopt = &completeopt$/;"	v
g:deoplete#_serveraddr	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^    let g:deoplete#_serveraddr = $NVIM_LISTEN_ADDRESS$/;"	v
g:deoplete#_serveraddr	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^  let g:deoplete#_serveraddr = has('nvim') ?$/;"	v
g:deoplete#_yarp	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^  let g:deoplete#_yarp.job_is_dead = 1$/;"	v
g:deoplete#_yarp	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^      let g:deoplete#_yarp = yarp#py3('deoplete')$/;"	v
g:deoplete#auto_completion_start_length	config.d/deoplete.vim	/^let g:deoplete#auto_completion_start_length= 2$/;"	v
g:deoplete#disable_auto_complete	config.d/deoplete.vim	/^  let g:deoplete#disable_auto_complete = 0$/;"	v
g:deoplete#disable_auto_complete	config.d/deoplete.vim	/^  let g:deoplete#disable_auto_complete = 1$/;"	v
g:deoplete#enable_at_startup	config.d/deoplete.vim	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:deoplete#enable_at_startup	plugged/deoplete-clang/tests/deoplete-clang.vim	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:deoplete#enable_smart_case	plugged/deoplete-clang/tests/deoplete-clang.vim	/^let g:deoplete#enable_smart_case = 1$/;"	v
g:deoplete#file#enable_buffer_path	plugged/deoplete-clang/tests/deoplete-clang.vim	/^let g:deoplete#file#enable_buffer_path = 1$/;"	v
g:deoplete#ignore_sources	config.d/deoplete.vim	/^let g:deoplete#ignore_sources = get(g:, 'deoplete#ignore_sources', {})$/;"	v
g:deoplete#sources	config.d/deoplete.vim	/^let g:deoplete#sources = get(g:, 'deoplete#sources', {})$/;"	v
g:deoplete#sources	config.d/deoplete.vim	/^let g:deoplete#sources._    = ['neosnippet', 'buffer', 'file', 'tag']$/;"	v
g:deoplete#sources	config.d/deoplete.vim	/^let g:deoplete#sources.php  = ['neosnippet', 'padawan', 'buffer', 'file', 'tag']$/;"	v
g:deoplete#sources#clang#clang_header	config.d/deoplete-clang.vim	/^let g:deoplete#sources#clang#clang_header = '\/Applications\/Xcode.app\/Contents\/Developer\/Too/;"	v
g:deoplete#sources#clang#clang_header	plugged/deoplete-clang/tests/deoplete-clang.vim	/^let g:deoplete#sources#clang#clang_header = '\/opt\/llvm\/lib\/clang'$/;"	v
g:deoplete#sources#clang#libclang_path	config.d/deoplete-clang.vim	/^let g:deoplete#sources#clang#libclang_path = '\/Library\/Developer\/CommandLineTools\/usr\/lib\//;"	v
g:deoplete#sources#clang#libclang_path	plugged/deoplete-clang/tests/deoplete-clang.vim	/^let g:deoplete#sources#clang#libclang_path = "\/opt\/llvm\/lib\/libclang.dylib"$/;"	v
g:doesnotexist_maker	plugged/neomake/tests/include/init.vim	/^let g:doesnotexist_maker = {'exe': 'doesnotexist'}$/;"	v
g:entry_maker	plugged/neomake/tests/include/init.vim	/^let g:entry_maker = {'name': 'entry_maker'}$/;"	v
g:error_maker	plugged/neomake/tests/include/init.vim	/^let g:error_maker = NeomakeTestsCommandMaker('error-maker', 'echo error; false')$/;"	v
g:error_maker	plugged/neomake/tests/include/init.vim	/^let g:error_maker.errorformat = '%E%m'$/;"	v
g:fzf#vim#buffers	plugged/fzf.vim/plugin/fzf.vim	/^let g:fzf#vim#buffers = {}$/;"	v
g:fzf_colors	plugged/nova-vim/colors/nova.vim	/^let g:fzf_colors =$/;"	v
g:fzf_layout	config.d/fzf.vim	/^let g:fzf_layout = { 'window': '-tabnew' }$/;"	v
g:fzf_layout	config.d/fzf.vim	/^let g:fzf_layout = { 'window': '10split enew' }$/;"	v
g:fzf_layout	config.d/fzf.vim	/^let g:fzf_layout = { 'window': 'enew' }$/;"	v
g:gitgutter_async	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^    let g:gitgutter_async = async$/;"	v
g:gitgutter_enabled	plugged/vim-gitgutter/autoload/gitgutter.vim	/^  let g:gitgutter_enabled = 0$/;"	v
g:gitgutter_enabled	plugged/vim-gitgutter/autoload/gitgutter.vim	/^  let g:gitgutter_enabled = 1$/;"	v
g:gitgutter_grep	plugged/vim-gitgutter/plugin/gitgutter.vim	/^      let g:gitgutter_grep .= ' --color=never'$/;"	v
g:gitgutter_grep	plugged/vim-gitgutter/plugin/gitgutter.vim	/^    let g:gitgutter_grep = ''$/;"	v
g:gitgutter_highlight_lines	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^  let g:gitgutter_highlight_lines = 0$/;"	v
g:gitgutter_highlight_lines	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^  let g:gitgutter_highlight_lines = 1$/;"	v
g:gitgutter_hook_context	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^    let g:gitgutter_hook_context = {'bufnr': a:bufnr}$/;"	v
g:gitgutter_sign_column_always	plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_column_always = 0$/;"	v
g:gitgutter_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^  let g:gitgutter_signs = 0$/;"	v
g:gitgutter_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^  let g:gitgutter_signs = 1$/;"	v
g:goldenview__enable_default_mapping	config.d/goldenratio.vim	/^let g:goldenview__enable_default_mapping = 0$/;"	v
g:goldenview__initialized	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^    let g:goldenview__initialized = 1$/;"	v
g:gradleBin	plugged/neomake/autoload/neomake/makers/gradle.vim	/^    let g:gradleBin = filereadable('.\/gradlew') ? '.\/gradlew' : 'gradle'$/;"	v
g:gundo_preview_height	config.d/gundo.vim	/^let g:gundo_preview_height = 40$/;"	v
g:gundo_right	config.d/gundo.vim	/^let g:gundo_right = 1$/;"	v
g:gundo_width	config.d/gundo.vim	/^let g:gundo_width = 60$/;"	v
g:gutentags_add_default_project_roots	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_default_project_roots = get(g:, 'gutentags_add_default_project_roots', 1)$/;"	v
g:gutentags_auto_add_cscope	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_auto_add_cscope = 1$/;"	v
g:gutentags_auto_add_gtags_cscope	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_auto_add_gtags_cscope = 1$/;"	v
g:gutentags_background_update	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_background_update = get(g:, 'gutentags_background_update', 1)$/;"	v
g:gutentags_cache_dir	config.d/gutentags.vim	/^let g:gutentags_cache_dir = '\/var\/tmp\/gutentags'$/;"	v
g:gutentags_cache_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = ''$/;"	v
g:gutentags_cache_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':p')$/;"	v
g:gutentags_cache_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':s?[\/\\\\]$??')$/;"	v
g:gutentags_cscope_executable	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_executable = 'cscope'$/;"	v
g:gutentags_ctags_auto_set_tags	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_auto_set_tags = get(g:, 'gutentags_ctags_auto_set_tags', 1)$/;"	v
g:gutentags_ctags_check_tagfile	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_check_tagfile = get(g:, 'gutentags_ctags_check_tagfile', 0)$/;"	v
g:gutentags_ctags_exclude	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude = get(g:, 'gutentags_ctags_exclude', [])$/;"	v
g:gutentags_ctags_exclude_wildignore	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude_wildignore = get(g:, 'gutentags_ctags_exclude_wildignore', 1)$/;"	v
g:gutentags_ctags_executable	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_executable = get(g:, 'gutentags_ctags_executable', 'ctags')$/;"	v
g:gutentags_ctags_extra_args	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_extra_args = get(g:, 'gutentags_ctags_extra_args', [])$/;"	v
g:gutentags_ctags_options_file	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_options_file = get(g:, 'gutentags_ctags_options_file', '.gutctags')$/;"	v
g:gutentags_ctags_post_process_cmd	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_post_process_cmd = get(g:, 'gutentags_ctags_post_process_cmd', '')$/;"	v
g:gutentags_ctags_tagfile	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_tagfile = get(g:, 'gutentags_ctags_tagfile', 'tags')$/;"	v
g:gutentags_debug	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_debug = get(g:, 'gutentags_debug', 0)$/;"	v
g:gutentags_define_advanced_commands	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_define_advanced_commands = get(g:, 'gutentags_define_advanced_commands', 0)$/;"	v
g:gutentags_enabled	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:gutentags_enabled = 0$/;"	v
g:gutentags_enabled	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_enabled = get(g:, 'gutentags_enabled', 1)$/;"	v
g:gutentags_exclude_project_root	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_project_root = get(g:, 'gutentags_exclude_project_root', ['\/usr\/local'/;"	v
g:gutentags_fake	plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_fake = a:1$/;"	v
g:gutentags_fake	plugged/vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_fake = !g:gutentags_fake$/;"	v
g:gutentags_fake	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_fake = get(g:, 'gutentags_fake', 0)$/;"	v
g:gutentags_file_list_command	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_file_list_command = get(g:, 'gutentags_file_list_command', '')$/;"	v
g:gutentags_generate_on_empty_buffer	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_empty_buffer = get(g:, 'gutentags_generate_on_empty_buffer', 0)$/;"	v
g:gutentags_generate_on_missing	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_missing = get(g:, 'gutentags_generate_on_missing', 1)$/;"	v
g:gutentags_generate_on_new	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_new = get(g:, 'gutentags_generate_on_new', 1)$/;"	v
g:gutentags_generate_on_write	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_write = get(g:, 'gutentags_generate_on_write', 1)$/;"	v
g:gutentags_gtags_cscope_executable	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_cscope_executable = 'gtags-cscope'$/;"	v
g:gutentags_gtags_dbpath	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_dbpath = ''$/;"	v
g:gutentags_gtags_executable	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_executable = 'gtags'$/;"	v
g:gutentags_gtags_options_file	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^	let g:gutentags_gtags_options_file = '.gutgtags'$/;"	v
g:gutentags_init_user_func	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_init_user_func = get(g:, 'gutentags_init_user_func', $/;"	v
g:gutentags_modules	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_modules = get(g:, 'gutentags_modules', ['ctags'])$/;"	v
g:gutentags_pause_after_update	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_pause_after_update = get(g:, 'gutentags_pause_after_update', 0)$/;"	v
g:gutentags_plat_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . "\\\\plat\\\\win32\\\\"$/;"	v
g:gutentags_plat_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . '\/plat\/unix\/'$/;"	v
g:gutentags_project_info	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_info = get(g:, 'gutentags_project_info', [])$/;"	v
g:gutentags_project_root	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_project_root += ['.git', '.hg', '.svn', '.bzr', '_darcs', '_FOSSIL_', '.fslc/;"	v
g:gutentags_project_root	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root = get(g:, 'gutentags_project_root', [])$/;"	v
g:gutentags_project_root_finder	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root_finder = get(g:, 'gutentags_project_root_finder', '')$/;"	v
g:gutentags_res_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . "\\\\res\\\\"$/;"	v
g:gutentags_res_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . '\/res\/'$/;"	v
g:gutentags_resolve_symlinks	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_resolve_symlinks = get(g:, 'gutentags_resolve_symlinks', 0)$/;"	v
g:gutentags_scopefile	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_scopefile = 'cscope.out'$/;"	v
g:gutentags_script_ext	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.cmd'$/;"	v
g:gutentags_script_ext	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.sh'$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = a:1$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = l:trace_backup$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_trace = !g:gutentags_trace$/;"	v
g:gutentags_trace	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_trace = get(g:, 'gutentags_trace', 0)$/;"	v
g:gutentags_use_jobs	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_use_jobs = get(g:, 'gutentags_use_jobs', has('job'))$/;"	v
g:is_vdebug_loaded	plugged/vdebug/plugin/vdebug.vim	/^let g:is_vdebug_loaded = 1$/;"	v
g:loaded_EditorConfig	plugged/editorconfig-vim/plugin/editorconfig.vim	/^let g:loaded_EditorConfig = 1$/;"	v
g:loaded_GoldenView_zl	plugged/GoldenView.Vim/autoload/GoldenView/zl/rc.vim	/^    let g:loaded_GoldenView_zl = s:GOLDENVIEW_ZL_VERSION_CURRENT * s:VERSION_FACTOR$/;"	v
g:loaded_airline	plugged/vim-airline/plugin/airline.vim	/^let g:loaded_airline = 1$/;"	v
g:loaded_better_whitespace_plugin	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let g:loaded_better_whitespace_plugin = 1$/;"	v
g:loaded_deoplete	plugged/deoplete.nvim/plugin/deoplete.vim	/^let g:loaded_deoplete = 1$/;"	v
g:loaded_gitgutter	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:loaded_gitgutter = 1$/;"	v
g:loaded_gutentags	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:loaded_gutentags = 1$/;"	v
g:loaded_neomake	plugged/neomake/plugin/neomake.vim	/^let g:loaded_neomake = 1$/;"	v
g:loaded_neomake_java_javac_maker	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:loaded_neomake_java_javac_maker = 1$/;"	v
g:loaded_neosnippet	plugged/neosnippet.vim/plugin/neosnippet.vim	/^let g:loaded_neosnippet = 1$/;"	v
g:loaded_nerdtree_autoload	plugged/nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_git_status	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let g:loaded_nerdtree_git_status = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:loaded_plug	autoload/plug.vim	/^let g:loaded_plug = 1$/;"	v
g:loaded_rg	plugged/vim-ripgrep/plugin/vim-ripgrep.vim	/^let g:loaded_rg = 1$/;"	v
g:loaded_sensible	plugged/vim-sensible/plugin/sensible.vim	/^  let g:loaded_sensible = 'yes'$/;"	v
g:loaded_startify	plugged/vim-startify/plugin/startify.vim	/^let g:loaded_startify = 1$/;"	v
g:loaded_syntastic_rust_cargo_checker	plugged/rust.vim/syntax_checkers/rust/cargo.vim	/^let g:loaded_syntastic_rust_cargo_checker = 1$/;"	v
g:loaded_syntastic_rust_filetype	plugged/rust.vim/plugin/rust.vim	/^let g:loaded_syntastic_rust_filetype = 1$/;"	v
g:loaded_syntastic_rust_rustc_checker	plugged/rust.vim/syntax_checkers/rust/rustc.vim	/^let g:loaded_syntastic_rust_rustc_checker = 1$/;"	v
g:loaded_tagbar	plugged/tagbar/autoload/tagbar.vim	/^let g:loaded_tagbar = 1$/;"	v
g:loaded_undotree	plugged/undotree/autoload/undotree.vim	/^let g:loaded_undotree = 1   " Signal plugin availability with a value of 1.$/;"	v
g:loaded_undotree	plugged/undotree/plugin/undotree.vim	/^let g:loaded_undotree = 0$/;"	v
g:loaded_undotree	plugged/undotree/plugin/undotree.vim	/^let g:loaded_undotree = 1   " Signal plugin availability with a value of 1.$/;"	v
g:loaded_webdevicons	plugged/vim-devicons/plugin/webdevicons.vim	/^let g:loaded_webdevicons = 1$/;"	v
g:multi_cursor_next_key	config.d/multiplecursors.vim	/^let g:multi_cursor_next_key='<C-n>'$/;"	v
g:multi_cursor_normal_maps	plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let g:multi_cursor_normal_maps =$/;"	v
g:multi_cursor_prev_key	config.d/multiplecursors.vim	/^let g:multi_cursor_prev_key='<C-p>'$/;"	v
g:multi_cursor_quit_key	config.d/multiplecursors.vim	/^let g:multi_cursor_quit_key='<Esc>'$/;"	v
g:multi_cursor_skip_key	config.d/multiplecursors.vim	/^let g:multi_cursor_skip_key='<C-s>'$/;"	v
g:multi_cursor_start_word_key	plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^    let g:multi_cursor_start_word_key = g:multi_cursor_next_key$/;"	v
g:multi_cursor_use_default_mapping	config.d/multiplecursors.vim	/^let g:multi_cursor_use_default_mapping=0$/;"	v
g:multi_cursor_visual_maps	plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let g:multi_cursor_visual_maps =$/;"	v
g:neomake	plugged/neomake/autoload/neomake/config.vim	/^        let g:neomake = {}$/;"	v
g:neomake	plugged/neomake/autoload/neomake/configure.vim	/^        let g:neomake = {}$/;"	v
g:neomake	plugged/neomake/autoload/neomake/configure.vim	/^let g:neomake = get(g:, 'neomake', {})$/;"	v
g:neomake	plugged/neomake/autoload/neomake/configure.vim	/^let g:neomake.automake = get(g:neomake, 'automake', {})$/;"	v
g:neomake#compat#dev_null	plugged/neomake/autoload/neomake/compat.vim	/^    let g:neomake#compat#dev_null = 'NUL'$/;"	v
g:neomake#compat#dev_null	plugged/neomake/autoload/neomake/compat.vim	/^    let g:neomake#compat#dev_null = '\/dev\/null'$/;"	v
g:neomake#config#undefined	plugged/neomake/autoload/neomake/config.vim	/^let g:neomake#config#undefined = {}$/;"	v
g:neomake#core#command_maker_base	plugged/neomake/autoload/neomake/core.vim	/^let g:neomake#core#command_maker_base = {}$/;"	v
g:neomake#makers#ft#c#project_root_files	plugged/neomake/autoload/neomake/makers/ft/c.vim	/^let g:neomake#makers#ft#c#project_root_files = ['configure', 'CMakeLists.txt']$/;"	v
g:neomake_action_queue_timeouts	plugged/neomake/tests/vim/vimrc	/^let g:neomake_action_queue_timeouts = {1: 10, 2: 20, 3: 30}$/;"	v
g:neomake_hook_context	plugged/neomake/autoload/neomake/utils.vim	/^                let g:neomake_hook_context = remove(s:hook_context_stack, -1)$/;"	v
g:neomake_hook_context	plugged/neomake/autoload/neomake/utils.vim	/^        let g:neomake_hook_context = a:context$/;"	v
g:neomake_java_ant_executable	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_ant_executable =$/;"	v
g:neomake_java_checker_home	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_checker_home = fnamemodify(expand('<sfile>'), ':p:h:gs?\\\\?\/?')$/;"	v
g:neomake_java_checkstyle_executable	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_checkstyle_executable =$/;"	v
g:neomake_java_checkstyle_xml	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_checkstyle_xml =$/;"	v
g:neomake_java_gradle_executable	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_gradle_executable =$/;"	v
g:neomake_java_javac_ant_classpath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^            let g:neomake_java_javac_ant_classpath[ant] = cp$/;"	v
g:neomake_java_javac_ant_classpath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_ant_classpath =$/;"	v
g:neomake_java_javac_ant_ftime	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^            let g:neomake_java_javac_ant_ftime[ant] = getftime(ant)$/;"	v
g:neomake_java_javac_ant_ftime	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_ant_ftime =$/;"	v
g:neomake_java_javac_autoload_ant_classpath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_autoload_ant_classpath =$/;"	v
g:neomake_java_javac_autoload_eclipse_classpath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_autoload_eclipse_classpath =$/;"	v
g:neomake_java_javac_autoload_gradle_classpath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_autoload_gradle_classpath =$/;"	v
g:neomake_java_javac_autoload_maven_classpath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_autoload_maven_classpath =$/;"	v
g:neomake_java_javac_classpath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_classpath =$/;"	v
g:neomake_java_javac_delete_output	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_delete_output =$/;"	v
g:neomake_java_javac_executable	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_executable =$/;"	v
g:neomake_java_javac_gradle_classpath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^            let g:neomake_java_javac_gradle_classpath[gradle] = cp$/;"	v
g:neomake_java_javac_gradle_classpath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_gradle_classpath =$/;"	v
g:neomake_java_javac_gradle_ftime	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^            let g:neomake_java_javac_gradle_ftime[gradle] = getftime(gradle)$/;"	v
g:neomake_java_javac_gradle_ftime	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_gradle_ftime =$/;"	v
g:neomake_java_javac_maven_pom_classpath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^            let g:neomake_java_javac_maven_pom_classpath[pom] = mvn_classpath$/;"	v
g:neomake_java_javac_maven_pom_classpath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_maven_pom_classpath =$/;"	v
g:neomake_java_javac_maven_pom_ftime	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^            let g:neomake_java_javac_maven_pom_ftime[pom] = getftime(pom)$/;"	v
g:neomake_java_javac_maven_pom_ftime	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_maven_pom_ftime =$/;"	v
g:neomake_java_javac_maven_pom_properties	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^            let g:neomake_java_javac_maven_pom_properties[pom] = mvn_properties$/;"	v
g:neomake_java_javac_maven_pom_properties	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_maven_pom_properties = {}$/;"	v
g:neomake_java_javac_maven_pom_tags	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_maven_pom_tags = ['build', 'properties']$/;"	v
g:neomake_java_javac_options	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_options =$/;"	v
g:neomake_java_javac_outputdir	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_javac_outputdir =$/;"	v
g:neomake_java_maven_executable	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_maven_executable =$/;"	v
g:neomake_java_maven_options	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let g:neomake_java_maven_options =$/;"	v
g:neomake_list_height	config.d/neomake.vim	/^let g:neomake_list_height = 10$/;"	v
g:neomake_logfile	config.d/neomake.vim	/^let g:neomake_logfile = '\/tmp\/neomake.log'$/;"	v
g:neomake_open_list	config.d/neomake.vim	/^let g:neomake_open_list = 2$/;"	v
g:neomake_php_enabled_makers	config.d/neomake.vim	/^let g:neomake_php_enabled_makers = ['php']$/;"	v
g:neomake_php_phpcs_args_standard	config.d/neomake.vim	/^let g:neomake_php_phpcs_args_standard = 'PSR1,PSR2'$/;"	v
g:neomake_place_signs	plugged/neomake/plugin/neomake.vim	/^    let g:neomake_place_signs = 0$/;"	v
g:neomake_place_signs	plugged/neomake/plugin/neomake.vim	/^    let g:neomake_place_signs = get(g:, 'neomake_place_signs', 1)$/;"	v
g:neomake_postprocess_context	plugged/neomake/autoload/neomake.vim	/^            let g:neomake_postprocess_context = {'jobinfo': a:jobinfo}$/;"	v
g:neomake_serialize	config.d/neomake.vim	/^let g:neomake_serialize = 1$/;"	v
g:neomake_serialize_abort_on_erro	config.d/neomake.vim	/^let g:neomake_serialize_abort_on_erro = 1$/;"	v
g:neomake_test_countschanged	plugged/neomake/tests/include/init.vim	/^    let g:neomake_test_countschanged += [a:context]$/;"	v
g:neomake_test_countschanged	plugged/neomake/tests/include/init.vim	/^  let g:neomake_test_countschanged = []$/;"	v
g:neomake_test_errors	plugged/neomake/autoload/neomake.vim	/^            let g:neomake_test_errors += [msg]$/;"	v
g:neomake_test_finished	plugged/neomake/tests/include/init.vim	/^    let g:neomake_test_finished += [a:context]$/;"	v
g:neomake_test_finished	plugged/neomake/tests/include/init.vim	/^  let g:neomake_test_finished = []$/;"	v
g:neomake_test_inc_maker	plugged/neomake/tests/include/init.vim	/^let g:neomake_test_inc_maker = {$/;"	v
g:neomake_test_inc_maker_counter	plugged/neomake/tests/include/init.vim	/^  let g:neomake_test_inc_maker_counter += 1$/;"	v
g:neomake_test_inc_maker_counter	plugged/neomake/tests/include/init.vim	/^let g:neomake_test_inc_maker_counter = 0$/;"	v
g:neomake_test_jobfinished	plugged/neomake/tests/include/init.vim	/^    let g:neomake_test_jobfinished += [a:context]$/;"	v
g:neomake_test_jobfinished	plugged/neomake/tests/include/init.vim	/^  let g:neomake_test_jobfinished = []$/;"	v
g:neomake_test_matchlist	plugged/neomake/tests/include/init.vim	/^      let g:neomake_test_matchlist = matchlist(m, a:msg)$/;"	v
g:neomake_test_messages	plugged/neomake/tests/include/init.vim	/^  let g:neomake_test_messages = []$/;"	v
g:neomake_test_messages	plugged/neomake/tests/vim/vimrc	/^let g:neomake_test_messages = []$/;"	v
g:neomake_test_messages_last_idx	plugged/neomake/tests/include/init.vim	/^    let g:neomake_test_messages_last_idx = idx$/;"	v
g:neomake_test_messages_last_idx	plugged/neomake/tests/include/init.vim	/^  let g:neomake_test_messages_last_idx = -1$/;"	v
g:neosnippet#data_directory	plugged/neosnippet.vim/autoload/neosnippet/variables.vim	/^  let g:neosnippet#data_directory =$/;"	v
g:neosnippet#snippets_directory	config.d/neosnippet.vim	/^let g:neosnippet#snippets_directory = join([$NVIM_HOME, "after\/snippets"], "\/")$/;"	v
g:netrw_force_overwrite_statusline	plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^  let g:netrw_force_overwrite_statusline = 0$/;"	v
g:php_cs_fixer_command	plugged/vim-php-cs-fixer/autoload/php_cs_fixer.vim	/^    	let g:php_cs_fixer_command = g:php_cs_fixer_command.' --config='.g:php_cs_fixer_config$/;"	v
g:php_cs_fixer_command	plugged/vim-php-cs-fixer/autoload/php_cs_fixer.vim	/^        let g:php_cs_fixer_command = g:php_cs_fixer_command . ' --config-file=' . g:php_cs_fixer/;"	v
g:php_cs_fixer_command	plugged/vim-php-cs-fixer/autoload/php_cs_fixer.vim	/^        let g:php_cs_fixer_command = g:php_cs_fixer_command . ' --config=' . g:php_cs_fixer_conf/;"	v
g:php_cs_fixer_command	plugged/vim-php-cs-fixer/autoload/php_cs_fixer.vim	/^    let g:php_cs_fixer_command = 'php-cs-fixer fix'$/;"	v
g:php_cs_fixer_command	plugged/vim-php-cs-fixer/autoload/php_cs_fixer.vim	/^    let g:php_cs_fixer_command = g:php_cs_fixer_command . ' --cache-file=' . g:php_cs_fixer_cach/;"	v
g:php_cs_fixer_command	plugged/vim-php-cs-fixer/autoload/php_cs_fixer.vim	/^  let g:php_cs_fixer_command = g:php_cs_fixer_php_path.' '.g:php_cs_fixer_path.' fix'$/;"	v
g:php_cs_fixer_command	plugged/vim-php-cs-fixer/tests/misc.vim	/^    let g:php_cs_fixer_command = 'php-cs-fixer fix --cache-file=\/tmp\/.php_cs.cache'$/;"	v
g:php_cs_fixer_config_file	config.d/phpcs.vim	/^let g:php_cs_fixer_config_file = '\/Users\/yriveiro\/.php_cs'$/;"	v
g:php_cs_fixer_dry_run	plugged/vim-php-cs-fixer/plugin/php_cs_fixer.vim	/^let g:php_cs_fixer_dry_run = get(g:, 'php_cs_fixer_dry_run', 0)$/;"	v
g:php_cs_fixer_enable_default_mapping	plugged/vim-php-cs-fixer/plugin/php_cs_fixer.vim	/^let g:php_cs_fixer_enable_default_mapping = get(g:, 'php_cs_fixer_enable_default_mapping', '1')$/;"	v
g:php_cs_fixer_level	plugged/vim-php-cs-fixer/autoload/php_cs_fixer.vim	/^    let g:php_cs_fixer_level = get(g:, 'php_cs_fixer_level', 'symfony')$/;"	v
g:php_cs_fixer_path	config.d/phpcs.vim	/^let g:php_cs_fixer_path='\/usr\/local\/bin\/php-cs-fixer'$/;"	v
g:php_cs_fixer_path	plugged/vim-php-cs-fixer/autoload/php_cs_fixer.vim	/^let g:php_cs_fixer_path = get(g:, 'php_cs_fixer_path', '')$/;"	v
g:php_cs_fixer_php_path	config.d/phpcs.vim	/^let g:php_cs_fixer_php_path='\/usr\/local\/bin\/php'$/;"	v
g:php_cs_fixer_php_path	plugged/vim-php-cs-fixer/autoload/php_cs_fixer.vim	/^let g:php_cs_fixer_php_path = get(g:, 'php_cs_fixer_php_path', 'php')$/;"	v
g:php_cs_fixer_rules	plugged/vim-php-cs-fixer/autoload/php_cs_fixer.vim	/^    let g:php_cs_fixer_rules = get(g:, 'php_cs_fixer_rules', '@PSR2')$/;"	v
g:php_cs_fixer_verbose	config.d/phpcs.vim	/^let g:php_cs_fixer_verbose = 1$/;"	v
g:php_cs_fixer_verbose	plugged/vim-php-cs-fixer/plugin/php_cs_fixer.vim	/^let g:php_cs_fixer_verbose = get(g:, 'php_cs_fixer_verbose', 0)$/;"	v
g:php_cs_fixer_version	plugged/vim-php-cs-fixer/autoload/php_cs_fixer.vim	/^    let g:php_cs_fixer_version = strpart(matchstr(system(g:php_cs_fixer_version_command), '\\d\\/;"	v
g:php_cs_fixer_version	plugged/vim-php-cs-fixer/autoload/php_cs_fixer.vim	/^    let g:php_cs_fixer_version = system(g:php_cs_fixer_version_command . " | sed -e 's\/[^0-9.]*/;"	v
g:php_cs_fixer_version_command	plugged/vim-php-cs-fixer/autoload/php_cs_fixer.vim	/^    let g:php_cs_fixer_version_command = 'php-cs-fixer --version'$/;"	v
g:php_cs_fixer_version_command	plugged/vim-php-cs-fixer/autoload/php_cs_fixer.vim	/^  let g:php_cs_fixer_version_command = g:php_cs_fixer_php_path.' '.g:php_cs_fixer_path.' --versi/;"	v
g:plug_home	autoload/plug.vim	/^  let g:plug_home = home$/;"	v
g:plugs	autoload/plug.vim	/^    let g:plugs[name] = spec$/;"	v
g:plugs	autoload/plug.vim	/^  let g:plugs = {}$/;"	v
g:plugs_order	autoload/plug.vim	/^  let g:plugs_order = []$/;"	v
g:plugs_order	autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	v
g:promptline_symbols	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^    let g:promptline_symbols = {$/;"	v
g:rg_binary	plugged/vim-ripgrep/plugin/vim-ripgrep.vim	/^  let g:rg_binary = 'rg'$/;"	v
g:rg_command	plugged/vim-ripgrep/plugin/vim-ripgrep.vim	/^  let g:rg_command = g:rg_binary . ' --vimgrep'$/;"	v
g:rg_format	plugged/vim-ripgrep/plugin/vim-ripgrep.vim	/^  let g:rg_format = "%f:%l:%c:%m"$/;"	v
g:rg_root_types	plugged/vim-ripgrep/plugin/vim-ripgrep.vim	/^  let g:rg_root_types = ['.git']$/;"	v
g:rg_window_location	plugged/vim-ripgrep/plugin/vim-ripgrep.vim	/^  let g:rg_window_location = 'botright'$/;"	v
g:rustfmt_autosave	plugged/rust.vim/autoload/rustfmt.vim	/^	let g:rustfmt_autosave = 0$/;"	v
g:rustfmt_command	plugged/rust.vim/autoload/rustfmt.vim	/^	let g:rustfmt_command = "rustfmt"$/;"	v
g:rustfmt_fail_silently	plugged/rust.vim/autoload/rustfmt.vim	/^	let g:rustfmt_fail_silently = 0$/;"	v
g:rustfmt_options	plugged/rust.vim/autoload/rustfmt.vim	/^	let g:rustfmt_options = ""$/;"	v
g:sleep_efm_maker	plugged/neomake/tests/include/init.vim	/^let g:sleep_efm_maker = {$/;"	v
g:sleep_maker	plugged/neomake/tests/include/init.vim	/^let g:sleep_maker = NeomakeTestsCommandMaker('sleep-maker', 'sleep .05; echo slept')$/;"	v
g:startify_custom_header	plugged/vim-startify/test/vimrc	/^let g:startify_custom_header = []$/;"	v
g:startify_header	plugged/vim-startify/autoload/startify.vim	/^      let g:startify_header = copy(g:startify_custom_header)$/;"	v
g:startify_header	plugged/vim-startify/autoload/startify.vim	/^      let g:startify_header = eval(g:startify_custom_header)$/;"	v
g:startify_header	plugged/vim-startify/autoload/startify.vim	/^      let g:startify_header = startify#fortune#cowsay()$/;"	v
g:startify_header	plugged/vim-startify/autoload/startify.vim	/^    let g:startify_header += ['']  " add blank line$/;"	v
g:startify_header	plugged/vim-startify/autoload/startify.vim	/^    let g:startify_header = startify#fortune#cowsay()$/;"	v
g:startify_locked	plugged/vim-startify/plugin/startify.vim	/^let g:startify_locked = 0$/;"	v
g:startify_relative_path	plugged/vim-startify/test/vimrc	/^let g:startify_relative_path = 1$/;"	v
g:startify_session_dir	plugged/vim-startify/test/vimrc	/^let g:startify_session_dir = 'session'$/;"	v
g:success_maker	plugged/neomake/tests/include/init.vim	/^let g:success_maker = NeomakeTestsCommandMaker('success-maker', 'echo success')$/;"	v
g:success_maker	plugged/neomake/tests/include/init.vim	/^let g:success_maker.errorformat = '%-Gsuccess'$/;"	v
g:syntastic_extra_filetypes	plugged/rust.vim/plugin/rust.vim	/^    let g:syntastic_extra_filetypes = ['rust']$/;"	v
g:syntastic_rust_cargo_fname	plugged/rust.vim/syntax_checkers/rust/cargo.vim	/^let g:syntastic_rust_cargo_fname = ""$/;"	v
g:syntastic_stl_format	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^    let g:syntastic_stl_format = _backup$/;"	v
g:syntastic_stl_format	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^    let g:syntastic_stl_format = get(g:, 'airline#extensions#syntastic#stl_format_err', '%E{[%e(/;"	v
g:syntastic_stl_format	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^    let g:syntastic_stl_format = get(g:, 'airline#extensions#syntastic#stl_format_warn', '%W{[%w/;"	v
g:taboo_tabline	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  let g:taboo_tabline = 0$/;"	v
g:tagbar#icon_closed	plugged/tagbar/autoload/tagbar.vim	/^let g:tagbar#icon_closed = g:tagbar_iconchars[0]$/;"	v
g:tagbar#icon_open	plugged/tagbar/autoload/tagbar.vim	/^let g:tagbar#icon_open   = g:tagbar_iconchars[1]$/;"	v
g:tagbar_autoclose	plugged/tagbar/autoload/tagbar.vim	/^    let g:tagbar_autoclose = !g:tagbar_autoclose$/;"	v
g:tagbar_autofocus	config.d/tagbar.vim	/^let g:tagbar_autofocus = 1$/;"	v
g:tagbar_case_insensitive	plugged/tagbar/autoload/tagbar.vim	/^    let g:tagbar_case_insensitive = !g:tagbar_case_insensitive$/;"	v
g:tagbar_ctags_bin	plugged/tagbar/autoload/tagbar.vim	/^                let g:tagbar_ctags_bin = ctags$/;"	v
g:tagbar_ctags_bin	plugged/tagbar/autoload/tagbar.vim	/^        let g:tagbar_ctags_bin = expand(g:tagbar_ctags_bin)$/;"	v
g:tagbar_hide_nonpublic	plugged/tagbar/autoload/tagbar.vim	/^    let g:tagbar_hide_nonpublic = !g:tagbar_hide_nonpublic$/;"	v
g:tagbar_iconchars	plugged/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['+', '-']$/;"	v
g:tagbar_iconchars	plugged/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['▶', '▼']$/;"	v
g:tagbar_sort	plugged/tagbar/autoload/tagbar.vim	/^        let g:tagbar_sort = !g:tagbar_sort$/;"	v
g:tagbar_status_func	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^  let g:tagbar_status_func = 'airline#extensions#tagbar#get_status'$/;"	v
g:terminal_color_0	plugged/nova-vim/colors/nova.vim	/^let g:terminal_color_0 = "#3C4C55"$/;"	v
g:terminal_color_1	plugged/nova-vim/colors/nova.vim	/^let g:terminal_color_1 = "#DF8C8C"$/;"	v
g:terminal_color_10	plugged/nova-vim/colors/nova.vim	/^let g:terminal_color_10 = "#A8CE93"$/;"	v
g:terminal_color_11	plugged/nova-vim/colors/nova.vim	/^let g:terminal_color_11 = "#DADA93"$/;"	v
g:terminal_color_12	plugged/nova-vim/colors/nova.vim	/^let g:terminal_color_12 = "#83AFE5"$/;"	v
g:terminal_color_13	plugged/nova-vim/colors/nova.vim	/^let g:terminal_color_13 = "#D18EC2"$/;"	v
g:terminal_color_14	plugged/nova-vim/colors/nova.vim	/^let g:terminal_color_14 = "#7FC1CA"$/;"	v
g:terminal_color_15	plugged/nova-vim/colors/nova.vim	/^let g:terminal_color_15 = "#E6EEF3"$/;"	v
g:terminal_color_2	plugged/nova-vim/colors/nova.vim	/^let g:terminal_color_2 = "#A8CE93"$/;"	v
g:terminal_color_3	plugged/nova-vim/colors/nova.vim	/^let g:terminal_color_3 = "#DADA93"$/;"	v
g:terminal_color_4	plugged/nova-vim/colors/nova.vim	/^let g:terminal_color_4 = "#83AFE5"$/;"	v
g:terminal_color_5	plugged/nova-vim/colors/nova.vim	/^let g:terminal_color_5 = "#9A93E1"$/;"	v
g:terminal_color_6	plugged/nova-vim/colors/nova.vim	/^let g:terminal_color_6 = "#7FC1CA"$/;"	v
g:terminal_color_7	plugged/nova-vim/colors/nova.vim	/^let g:terminal_color_7 = "#C5D4DD"$/;"	v
g:terminal_color_8	plugged/nova-vim/colors/nova.vim	/^let g:terminal_color_8 = "#899BA6"$/;"	v
g:terminal_color_9	plugged/nova-vim/colors/nova.vim	/^let g:terminal_color_9 = "#F2C38F"$/;"	v
g:testname	plugged/vim-gitgutter/test/runner.vim	/^let g:testname = expand('%')$/;"	v
g:true_maker	plugged/neomake/tests/include/init.vim	/^let g:true_maker = NeomakeTestsCommandMaker('true-maker', 'true')$/;"	v
g:undotree_DiffAutoOpen	plugged/undotree/plugin/undotree.vim	/^    let g:undotree_DiffAutoOpen = 1$/;"	v
g:undotree_DiffCommand	plugged/undotree/plugin/undotree.vim	/^    let g:undotree_DiffCommand = "diff"$/;"	v
g:undotree_DiffpanelHeight	plugged/undotree/plugin/undotree.vim	/^    let g:undotree_DiffpanelHeight = 10$/;"	v
g:undotree_HelpLine	plugged/undotree/plugin/undotree.vim	/^    let g:undotree_HelpLine = 1$/;"	v
g:undotree_HighlightChangedText	plugged/undotree/plugin/undotree.vim	/^    let g:undotree_HighlightChangedText = 1$/;"	v
g:undotree_HighlightSyntaxAdd	plugged/undotree/plugin/undotree.vim	/^    let g:undotree_HighlightSyntaxAdd = "DiffAdd"$/;"	v
g:undotree_HighlightSyntaxChange	plugged/undotree/plugin/undotree.vim	/^    let g:undotree_HighlightSyntaxChange = "DiffChange"$/;"	v
g:undotree_RelativeTimestamp	plugged/undotree/autoload/undotree.vim	/^    let g:undotree_RelativeTimestamp = !g:undotree_RelativeTimestamp$/;"	v
g:undotree_RelativeTimestamp	plugged/undotree/plugin/undotree.vim	/^    let g:undotree_RelativeTimestamp = 1$/;"	v
g:undotree_SetFocusWhenToggle	plugged/undotree/plugin/undotree.vim	/^    let g:undotree_SetFocusWhenToggle = 0$/;"	v
g:undotree_ShortIndicators	plugged/undotree/plugin/undotree.vim	/^    let g:undotree_ShortIndicators = 0$/;"	v
g:undotree_SplitWidth	plugged/undotree/plugin/undotree.vim	/^        let g:undotree_SplitWidth = 24$/;"	v
g:undotree_SplitWidth	plugged/undotree/plugin/undotree.vim	/^        let g:undotree_SplitWidth = 30$/;"	v
g:undotree_TreeNodeShape	plugged/undotree/plugin/undotree.vim	/^    let g:undotree_TreeNodeShape = '*'$/;"	v
g:undotree_WindowLayout	plugged/undotree/plugin/undotree.vim	/^    let g:undotree_WindowLayout = 1$/;"	v
g:unite_force_overwrite_statusline	plugged/vim-airline/autoload/airline/extensions/unite.vim	/^  let g:unite_force_overwrite_statusline = 0$/;"	v
g:vdebug_features	plugged/vdebug/plugin/vdebug.vim	/^    let g:vdebug_features = {}$/;"	v
g:vdebug_force_ascii	plugged/vdebug/plugin/vdebug.vim	/^    let g:vdebug_force_ascii = 0$/;"	v
g:vdebug_force_ascii	plugged/vdebug/plugin/vdebug.vim	/^    let g:vdebug_force_ascii = 1$/;"	v
g:vdebug_keymap	plugged/vdebug/plugin/vdebug.vim	/^    let g:vdebug_keymap = extend(g:vdebug_keymap_defaults, a:keymaps)$/;"	v
g:vdebug_keymap	plugged/vdebug/plugin/vdebug.vim	/^    let g:vdebug_keymap = {}$/;"	v
g:vdebug_keymap_defaults	plugged/vdebug/plugin/vdebug.vim	/^let g:vdebug_keymap_defaults = {$/;"	v
g:vdebug_leader_key	plugged/vdebug/plugin/vdebug.vim	/^    let g:vdebug_leader_key = ""$/;"	v
g:vdebug_options	config.d/vdebug.vim	/^let g:vdebug_options= {$/;"	v
g:vdebug_options	plugged/vdebug/plugin/vdebug.vim	/^        let g:vdebug_options[a:option]$/;"	v
g:vdebug_options	plugged/vdebug/plugin/vdebug.vim	/^    let g:vdebug_options = extend(g:vdebug_options, single_defined_params)$/;"	v
g:vdebug_options	plugged/vdebug/plugin/vdebug.vim	/^    let g:vdebug_options = extend(g:vdebug_options_defaults, a:options)$/;"	v
g:vdebug_options	plugged/vdebug/plugin/vdebug.vim	/^    let g:vdebug_options = {}$/;"	v
g:vdebug_options	plugged/vdebug/plugin/vdebug.vim	/^    let g:vdebug_options['path_maps'] = extend(g:vdebug_options['path_maps'], {a:from: a:to})$/;"	v
g:vdebug_options	plugged/vdebug/plugin/vdebug.vim	/^    let g:vdebug_options['path_maps'] = {a:from: a:to}$/;"	v
g:vdebug_options	plugged/vdebug/plugin/vdebug.vim	/^    let g:vdebug_options[a:option] = a:1$/;"	v
g:vdebug_options_defaults	plugged/vdebug/plugin/vdebug.vim	/^    let g:vdebug_options_defaults["marker_closed_tree"] = '+'$/;"	v
g:vdebug_options_defaults	plugged/vdebug/plugin/vdebug.vim	/^    let g:vdebug_options_defaults["marker_default"] = '*'$/;"	v
g:vdebug_options_defaults	plugged/vdebug/plugin/vdebug.vim	/^    let g:vdebug_options_defaults["marker_open_tree"] = '-'$/;"	v
g:vdebug_options_defaults	plugged/vdebug/plugin/vdebug.vim	/^let g:vdebug_options_defaults = {$/;"	v
g:vim_php_cs_fixer	plugged/vim-php-cs-fixer/plugin/php_cs_fixer.vim	/^let g:vim_php_cs_fixer = 1$/;"	v
g:vimfiler_force_overwrite_statusline	plugged/vim-airline/autoload/airline/extensions.vim	/^    let g:vimfiler_force_overwrite_statusline = 0$/;"	v
g:webdevicons_conceal_nerdtree_brackets	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_conceal_nerdtree_brackets = 1$/;"	v
g:webdevicons_enable	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable = 1$/;"	v
g:webdevicons_enable	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable = 1$/;"	v
g:webdevicons_enable_airline_statusline	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_statusline = 1$/;"	v
g:webdevicons_enable_airline_statusline	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_statusline = 1$/;"	v
g:webdevicons_enable_airline_statusline_fileformat_symbols	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_statusline_fileformat_symbols = 1$/;"	v
g:webdevicons_enable_airline_tabline	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_tabline = 1$/;"	v
g:webdevicons_enable_airline_tabline	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_tabline = 1$/;"	v
g:webdevicons_enable_ctrlp	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_ctrlp = 1$/;"	v
g:webdevicons_enable_denite	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_denite = 1$/;"	v
g:webdevicons_enable_flagship_statusline	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_flagship_statusline = 1$/;"	v
g:webdevicons_enable_flagship_statusline_fileformat_symbols	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_flagship_statusline_fileformat_symbols = 1$/;"	v
g:webdevicons_enable_nerdtree	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^     let g:webdevicons_enable_nerdtree = 0$/;"	v
g:webdevicons_enable_nerdtree	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_nerdtree = 1$/;"	v
g:webdevicons_enable_nerdtree	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_nerdtree = 1$/;"	v
g:webdevicons_enable_unite	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_unite = 1$/;"	v
g:webdevicons_enable_vimfiler	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_vimfiler = 1$/;"	v
g:webdevicons_gui_glyph_fix	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:webdevicons_gui_glyph_fix = 0$/;"	v
g:webdevicons_gui_glyph_fix	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:webdevicons_gui_glyph_fix = 1$/;"	v
gather_candidates	plugged/deoplete-clang/rplugin/python3/deoplete/sources/cmake.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang.py	/^    def gather_candidates(self, context, refresh=False):$/;"	m	class:Source
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def gather_candidates(self, context):$/;"	m	class:Base
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/neosnippet.vim/rplugin/python3/deoplete/sources/neosnippet.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_commands	plugged/deoplete-clang/tests/test_cmake_source.py	/^def gather_commands():$/;"	f
gather_variables	plugged/deoplete-clang/tests/test_cmake_source.py	/^def gather_variables():$/;"	f
generate-function	plugged/nova-vim/package-lock.json	/^        "generate-function": "2.0.0",$/;"	s	object:dependencies.is-my-json-valid.requires
generate-function	plugged/nova-vim/package-lock.json	/^    "generate-function": {$/;"	o	object:dependencies
generate-object-property	plugged/nova-vim/package-lock.json	/^        "generate-object-property": "1.2.0",$/;"	s	object:dependencies.is-my-json-valid.requires
generate-object-property	plugged/nova-vim/package-lock.json	/^    "generate-object-property": {$/;"	o	object:dependencies
get	plugged/vdebug/pythonx/vdebug/opts.py	/^    def get(cls, name, as_type=str):$/;"	m	class:Options
getAllCompileCommands	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def getAllCompileCommands(self):$/;"	m	class:CompilationDatabase
getAllCompileCommands	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def getAllCompileCommands(self):$/;"	m	class:CompilationDatabase
getCompileCommands	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def getCompileCommands(self, filename):$/;"	m	class:CompilationDatabase
getCompileCommands	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def getCompileCommands(self, filename):$/;"	m	class:CompilationDatabase
getLogger	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^def getLogger(name):$/;"	f
get_abbr	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang.py	/^    def get_abbr(self, strings):$/;"	m	class:Source
get_abbrevation	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang.py	/^            def get_abbrevation(x):$/;"	f	member:Source.gather_candidates	file:
get_align	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_align(self):$/;"	m	class:Type
get_align	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_align(self):$/;"	m	class:Type
get_all_kinds	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_all_kinds():$/;"	m	class:CursorKind
get_all_kinds	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_all_kinds():$/;"	m	class:CursorKind
get_arguments	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_arguments(self):$/;"	m	class:Cursor
get_arguments	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_arguments(self):$/;"	m	class:Cursor
get_array_element_type	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_array_element_type(self):$/;"	m	class:Type
get_array_element_type	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_array_element_type(self):$/;"	m	class:Type
get_array_size	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_array_size(self):$/;"	m	class:Type
get_array_size	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_array_size(self):$/;"	m	class:Type
get_bitfield_width	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_bitfield_width(self):$/;"	m	class:Cursor
get_bitfield_width	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_bitfield_width(self):$/;"	m	class:Cursor
get_breakpoint_sign_positions	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def get_breakpoint_sign_positions(self):$/;"	m	class:Ui
get_buffer_config	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def get_buffer_config(context, filetype, buffer_var, user_var, default_var):$/;"	f
get_builtin_clang_header	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang.py	/^    def get_builtin_clang_header(self):$/;"	m	class:Source
get_canonical	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_canonical(self):$/;"	m	class:Type
get_canonical	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_canonical(self):$/;"	m	class:Type
get_children	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_children(self):$/;"	m	class:Cursor
get_children	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_children(self):$/;"	m	class:Cursor
get_cindex_library	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_cindex_library(self):$/;"	m	class:Config
get_cindex_library	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_cindex_library(self):$/;"	m	class:Config
get_class_type	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_class_type(self):$/;"	m	class:Type
get_class_type	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_class_type(self):$/;"	m	class:Type
get_cmd	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def get_cmd(self):$/;"	m	class:Breakpoint
get_cmd	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def get_cmd(self):$/;"	m	class:CallBreakpoint
get_cmd	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def get_cmd(self):$/;"	m	class:ConditionalBreakpoint
get_cmd	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def get_cmd(self):$/;"	m	class:ExceptionBreakpoint
get_cmd	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def get_cmd(self):$/;"	m	class:LineBreakpoint
get_cmd	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def get_cmd(self):$/;"	m	class:TemporaryLineBreakpoint
get_cmd	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def get_cmd(self):$/;"	m	class:WatchBreakpoint
get_cmd	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def get_cmd(self):$/;"	m	class:Response
get_cmd_args	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def get_cmd_args(self):$/;"	m	class:Response
get_code	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def get_code(self):$/;"	m	class:EvalResponse
get_command_help_text	plugged/deoplete-clang/tests/test_cmake_source.py	/^def get_command_help_text(command):$/;"	f
get_commands_for_file	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang.py	/^    def get_commands_for_file(self, fname):$/;"	m	class:Source
get_compilation_database	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang.py	/^    def get_compilation_database(self, fname):$/;"	m	class:Source
get_compile_params	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang.py	/^    def get_compile_params(self, fname):$/;"	m	class:Source
get_complete_position	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_complete_position	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def get_complete_position(self, context):$/;"	m	class:Base
get_complete_position	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_complete_position	plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_complete_position	plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_completion	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang.py	/^    def get_completion(self, fname, line, column, buf, args, refresh=False):$/;"	m	class:Source
get_configurations	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/handler.py	/^    def get_configurations(self):$/;"	m	class:EditorConfigHandler
get_context	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def get_context(self):$/;"	m	class:ContextGetResponse
get_context	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def get_context(self):$/;"	m	class:EvalResponse
get_context	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def get_context(self):$/;"	m	class:DebuggerInterface
get_current_buffer	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang.py	/^    def get_current_buffer(self, b):$/;"	m	class:Source
get_current_file	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def get_current_file():$/;"	m	class:Ui
get_current_line	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def get_current_line(self):$/;"	m	class:Ui
get_current_row	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def get_current_row():$/;"	m	class:Ui
get_cursor	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/util.py	/^def get_cursor(source, spelling):$/;"	f
get_cursor	plugged/deoplete-clang/tests/clang/tests/cindex/util.py	/^def get_cursor(source, spelling):$/;"	f
get_cursor_id	plugged/deoplete-clang/rplugin/python3/deoplete/clang/examples/cindex/cindex-dump.py	/^def get_cursor_id(cursor, cursor_list = []):$/;"	f
get_cursor_id	plugged/deoplete-clang/tests/clang/examples/cindex/cindex-dump.py	/^def get_cursor_id(cursor, cursor_list = []):$/;"	f
get_cursors	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/util.py	/^def get_cursors(source, spelling):$/;"	f
get_cursors	plugged/deoplete-clang/tests/clang/tests/cindex/util.py	/^def get_cursors(source, spelling):$/;"	f
get_custom	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def get_custom(custom, source_name, key, default):$/;"	f
get_debugger_id	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def get_debugger_id(self):$/;"	m	class:Breakpoint
get_declaration	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_declaration(self):$/;"	m	class:Type
get_declaration	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_declaration(self):$/;"	m	class:Type
get_definition	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_definition(self):$/;"	m	class:Cursor
get_definition	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_definition(self):$/;"	m	class:Cursor
get_diag_info	plugged/deoplete-clang/rplugin/python3/deoplete/clang/examples/cindex/cindex-dump.py	/^def get_diag_info(diag):$/;"	f
get_diag_info	plugged/deoplete-clang/tests/clang/examples/cindex/cindex-dump.py	/^def get_diag_info(diag):$/;"	f
get_eval_expression	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def get_eval_expression(self):$/;"	m	class:WatchWindow
get_extent	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_extent(self, filename, locations):$/;"	m	class:TranslationUnit
get_extent	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_extent(self, filename, locations):$/;"	m	class:TranslationUnit
get_file	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_file(self, filename):$/;"	m	class:TranslationUnit
get_file	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_file(self, filename):$/;"	m	class:TranslationUnit
get_file	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def get_file(self):$/;"	m	class:LineBreakpoint
get_file	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def get_file(self):$/;"	m	class:SourceWindow
get_file_content	plugged/vim-multiple-cursors/spec/benchmark_spec.rb	/^def get_file_content()$/;"	f
get_file_content	plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def get_file_content()$/;"	f
get_filename	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_filename(self):$/;"	m	class:Config
get_filename	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_filename(self):$/;"	m	class:Config
get_filenames	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/handler.py	/^def get_filenames(path, filename):$/;"	f
get_filetype_var	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def get_filetype_var(self, filetype, var_name):$/;"	m	class:Base
get_for_print	plugged/vdebug/pythonx/vdebug/opts.py	/^    def get_for_print(cls, name):$/;"	m	class:Options
get_id	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def get_id(self):$/;"	m	class:Breakpoint
get_id	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def get_id(self):$/;"	m	class:BreakpointSetResponse
get_includes	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_includes(self):$/;"	m	class:TranslationUnit
get_includes	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_includes(self):$/;"	m	class:TranslationUnit
get_info	plugged/deoplete-clang/rplugin/python3/deoplete/clang/examples/cindex/cindex-dump.py	/^def get_info(node, depth=0):$/;"	f
get_info	plugged/deoplete-clang/tests/clang/examples/cindex/cindex-dump.py	/^def get_info(node, depth=0):$/;"	f
get_last_error	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def get_last_error(self):$/;"	m	class:DebuggerInterface
get_last_error	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def get_last_error(self):$/;"	m	class:Ui
get_last_sent	plugged/vdebug/tests/test_connection.py	/^    def get_last_sent(self):$/;"	m	class:SocketMock
get_line	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def get_line(self):$/;"	m	class:LineBreakpoint
get_line	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def get_line(row):$/;"	m	class:Ui
get_location	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_location(self, filename, position):$/;"	m	class:TranslationUnit
get_location	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_location(self, filename, position):$/;"	m	class:TranslationUnit
get_logfile	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^function! <SID>get_logfile()$/;"	f
get_minimum_flags	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang.py	/^    def get_minimum_flags(self, filetype):$/;"	m	class:Source
get_num_template_arguments	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_num_template_arguments(self):$/;"	m	class:Cursor
get_num_template_arguments	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_num_template_arguments(self):$/;"	m	class:Cursor
get_offset	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_offset(self, fieldname):$/;"	m	class:Type
get_offset	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_offset(self, fieldname):$/;"	m	class:Type
get_params	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang.py	/^    def get_params(self, fname):$/;"	m	class:Source
get_pointee	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_pointee(self):$/;"	m	class:Type
get_pointee	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_pointee(self):$/;"	m	class:Type
get_priority	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang.py	/^            def get_priority(x):$/;"	f	member:Source.gather_candidates	file:
get_properties	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/__init__.py	/^def get_properties(filename):$/;"	f
get_ref_qualifier	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_ref_qualifier(self):$/;"	m	class:Type
get_ref_qualifier	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_ref_qualifier(self):$/;"	m	class:Type
get_result	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_result(self):$/;"	m	class:Type
get_result	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_result(self):$/;"	m	class:Type
get_simple_buffer_config	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def get_simple_buffer_config(context, buffer_var, user_var):$/;"	f
get_size	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_size(self):$/;"	m	class:Type
get_size	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_size(self):$/;"	m	class:Type
get_sorted_list	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def get_sorted_list(self):$/;"	m	class:Store
get_stack	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def get_stack(self):$/;"	m	class:StackGetResponse
get_syn_names	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def get_syn_names(vim):$/;"	f
get_template_argument_kind	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_template_argument_kind(self, num):$/;"	m	class:Cursor
get_template_argument_kind	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_template_argument_kind(self, num):$/;"	m	class:Cursor
get_template_argument_type	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_template_argument_type(self, num):$/;"	m	class:Cursor
get_template_argument_type	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_template_argument_type(self, num):$/;"	m	class:Cursor
get_template_argument_unsigned_value	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_template_argument_unsigned_value(self, num):$/;"	m	class:Cursor
get_template_argument_unsigned_value	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_template_argument_unsigned_value(self, num):$/;"	m	class:Cursor
get_template_argument_value	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_template_argument_value(self, num):$/;"	m	class:Cursor
get_template_argument_value	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_template_argument_value(self, num):$/;"	m	class:Cursor
get_tokens	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_tokens(self):$/;"	m	class:Cursor
get_tokens	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_tokens(self, locations=None, extent=None):$/;"	m	class:TranslationUnit
get_tokens	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_tokens(tu, extent):$/;"	m	class:TokenGroup
get_tokens	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_tokens(self):$/;"	m	class:Cursor
get_tokens	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_tokens(self, locations=None, extent=None):$/;"	m	class:TranslationUnit
get_tokens	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_tokens(tu, extent):$/;"	m	class:TokenGroup
get_trace_expression	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def get_trace_expression(self):$/;"	m	class:TraceWindow
get_translation_unit	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang.py	/^    def get_translation_unit(self, fname, args, buf):$/;"	m	class:Source
get_tu	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/util.py	/^def get_tu(source, lang='c', all_warnings=False, flags=[]):$/;"	f
get_tu	plugged/deoplete-clang/tests/clang/tests/cindex/util.py	/^def get_tu(source, lang='c', all_warnings=False, flags=[]):$/;"	f
get_usr	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def get_usr(self):$/;"	m	class:Cursor
get_usr	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def get_usr(self):$/;"	m	class:Cursor
getlines	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def getlines(vim, start=1, end='$'):$/;"	f
getting the status window content	plugged/vdebug/spec/vdebug_spec.rb	/^    context "getting the status window content" do$/;"	c
getting the watch window content	plugged/vdebug/spec/vdebug_spec.rb	/^    context "getting the watch window content" do$/;"	c
getwinnr	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def getwinnr(self):$/;"	m	class:Window
gitgutter	plugged/vim-gitgutter/plugin/gitgutter.vim	/^augroup gitgutter$/;"	a
gitgutter#all	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#all(force) abort$/;"	f
gitgutter#async#available	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#available()$/;"	f
gitgutter#async#execute	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#execute(cmd, bufnr, handler) abort$/;"	f
gitgutter#debug#debug	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#debug()$/;"	f
gitgutter#debug#log	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#log(message, ...) abort$/;"	f
gitgutter#diff#handler	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#handler(bufnr, diff) abort$/;"	f
gitgutter#diff#hunk_diff	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#hunk_diff(bufnr, full_diff)$/;"	f
gitgutter#diff#parse_diff	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_diff(diff) abort$/;"	f
gitgutter#diff#parse_hunk	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_hunk(line) abort$/;"	f
gitgutter#diff#process_hunks	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunks(bufnr, hunks) abort$/;"	f
gitgutter#diff#run_diff	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#run_diff(bufnr, preserve_full_diff) abort$/;"	f
gitgutter#disable	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#disable() abort$/;"	f
gitgutter#enable	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#enable() abort$/;"	f
gitgutter#highlight#define_highlights	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_highlights() abort$/;"	f
gitgutter#highlight#define_sign_column_highlight	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_column_highlight() abort$/;"	f
gitgutter#highlight#define_sign_text_highlights	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text_highlights() abort$/;"	f
gitgutter#highlight#define_signs	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_signs() abort$/;"	f
gitgutter#highlight#line_disable	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_disable() abort$/;"	f
gitgutter#highlight#line_enable	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_enable() abort$/;"	f
gitgutter#highlight#line_toggle	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_toggle() abort$/;"	f
gitgutter#hunk#cursor_in_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#cursor_in_hunk(hunk) abort$/;"	f
gitgutter#hunk#fix_file_references	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^  function! gitgutter#hunk#fix_file_references(filepath, hunk_diff)$/;"	f
gitgutter#hunk#hunks	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#hunks(bufnr) abort$/;"	f
gitgutter#hunk#increment_lines_added	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_added(bufnr, count) abort$/;"	f
gitgutter#hunk#increment_lines_modified	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_modified(bufnr, count) abort$/;"	f
gitgutter#hunk#increment_lines_removed	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_removed(bufnr, count) abort$/;"	f
gitgutter#hunk#next_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#next_hunk(count) abort$/;"	f
gitgutter#hunk#prev_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#prev_hunk(count) abort$/;"	f
gitgutter#hunk#preview	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#preview() abort$/;"	f
gitgutter#hunk#reset	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#reset(bufnr) abort$/;"	f
gitgutter#hunk#set_hunks	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#set_hunks(bufnr, hunks) abort$/;"	f
gitgutter#hunk#stage	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#stage() abort$/;"	f
gitgutter#hunk#summary	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#summary(bufnr) abort$/;"	f
gitgutter#hunk#text_object	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#text_object(inner) abort$/;"	f
gitgutter#hunk#undo	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#undo() abort$/;"	f
gitgutter#init_buffer	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#init_buffer(bufnr)$/;"	f
gitgutter#process_buffer	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#process_buffer(bufnr, force) abort$/;"	f
gitgutter#sign#clear_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#clear_signs(bufnr) abort$/;"	f
gitgutter#sign#disable	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#disable() abort$/;"	f
gitgutter#sign#enable	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#enable() abort$/;"	f
gitgutter#sign#remove_dummy_sign	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#remove_dummy_sign(bufnr, force) abort$/;"	f
gitgutter#sign#reset	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#reset()$/;"	f
gitgutter#sign#toggle	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#toggle() abort$/;"	f
gitgutter#sign#update_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#update_signs(bufnr, modified_lines) abort$/;"	f
gitgutter#toggle	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#toggle() abort$/;"	f
gitgutter#utility#cd_cmd	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#cd_cmd(bufnr, cmd) abort$/;"	f
gitgutter#utility#extension	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#extension(bufnr) abort$/;"	f
gitgutter#utility#file	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file(bufnr)$/;"	f
gitgutter#utility#getbufvar	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#getbufvar(buffer, varname, ...)$/;"	f
gitgutter#utility#is_active	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#is_active(bufnr) abort$/;"	f
gitgutter#utility#repo_path	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#repo_path(bufnr, shellesc) abort$/;"	f
gitgutter#utility#set_repo_path	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#set_repo_path(bufnr) abort$/;"	f
gitgutter#utility#setbufvar	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#setbufvar(buffer, varname, val)$/;"	f
gitgutter#utility#shellescape	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shellescape(arg) abort$/;"	f
gitgutter#utility#supports_overscore_sign	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#supports_overscore_sign()$/;"	f
gitgutter#utility#system	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#system(cmd, ...) abort$/;"	f
gitgutter#utility#warn	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn(message) abort$/;"	f
gitgutter#utility#warn_once	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn_once(bufnr, message, key) abort$/;"	f
gitgutter#utility#windows	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#windows()$/;"	f
glob	plugged/nova-vim/package-lock.json	/^        "glob": "7.1.2"$/;"	s	object:dependencies.rimraf.requires
glob	plugged/nova-vim/package-lock.json	/^        "glob": "7.1.2",$/;"	s	object:dependencies.eslint.requires
glob	plugged/nova-vim/package-lock.json	/^        "glob": "7.1.2",$/;"	s	object:dependencies.globby.requires
glob	plugged/nova-vim/package-lock.json	/^    "glob": {$/;"	o	object:dependencies
global_deoplete	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    global_deoplete = Deoplete(vim)$/;"	v
globals	plugged/nova-vim/package-lock.json	/^        "globals": "9.18.0",$/;"	s	object:dependencies.eslint.requires
globals	plugged/nova-vim/package-lock.json	/^    "globals": {$/;"	o	object:dependencies
globby	plugged/nova-vim/package-lock.json	/^        "globby": "5.0.0",$/;"	s	object:dependencies.del.requires
globby	plugged/nova-vim/package-lock.json	/^    "globby": {$/;"	o	object:dependencies
globruntime	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def globruntime(runtimepath, path):$/;"	f
globs	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    globs = m.__dict__.copy()$/;"	v
graceful-fs	plugged/nova-vim/package-lock.json	/^        "graceful-fs": "4.1.11",$/;"	s	object:dependencies.flat-cache.requires
graceful-fs	plugged/nova-vim/package-lock.json	/^    "graceful-fs": {$/;"	o	object:dependencies
gui_open?	plugged/vdebug/rubylib/vdebug.rb	/^  def gui_open?$/;"	f	class:Vdebug
gutentags#add_job	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#add_job(module, tags_file, data) abort$/;"	f
gutentags#build_default_job_options	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#build_default_job_options(module) abort$/;"	f
gutentags#chdir	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#chdir(path)$/;"	f
gutentags#cscope#generate	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#cscope#init	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#init(project_root) abort$/;"	f
gutentags#cscope#on_job_exit	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#ctags#generate	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#ctags#init	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#init(project_root) abort$/;"	f
gutentags#ctags#on_job_exit	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#on_job_exit(job, exit_val) abort$/;"	f
gutentags#default_io_cb	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_io_cb(chan, msg) abort$/;"	f
gutentags#error	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#error(message)$/;"	f
gutentags#fake	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#fake(...)$/;"	f
gutentags#find_job_index_by_data	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_data(module, data) abort$/;"	f
gutentags#find_job_index_by_tags_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_tags_file(module, tags_file) abort$/;"	f
gutentags#get_cachefile	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_cachefile(root_dir, filename) abort$/;"	f
gutentags#get_job_data	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_data(module, job_idx) abort$/;"	f
gutentags#get_job_tags_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_tags_file(module, job_idx) abort$/;"	f
gutentags#get_plat_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_plat_file(filename) abort$/;"	f
gutentags#get_project_file_list_cmd	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_file_list_cmd(path) abort$/;"	f
gutentags#get_project_info	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_info(path) abort$/;"	f
gutentags#get_project_root	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_root(path) abort$/;"	f
gutentags#get_res_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_res_file(filename) abort$/;"	f
gutentags#gtags_cscope#generate	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#gtags_cscope#init	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#init(project_root) abort$/;"	f
gutentags#gtags_cscope#on_job_exit	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#inprogress	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#inprogress()$/;"	f
gutentags#is_path_rooted	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#is_path_rooted(path) abort$/;"	f
gutentags#make_args	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#make_args(cmd) abort$/;"	f
gutentags#normalizepath	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#normalizepath(path)$/;"	f
gutentags#remove_job	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job(module, job_idx) abort$/;"	f
gutentags#remove_job_by_data	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job_by_data(module, data) abort$/;"	f
gutentags#rescan	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#rescan(...)$/;"	f
gutentags#setup_gutentags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#setup_gutentags() abort$/;"	f
gutentags#shellslash	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#shellslash(path)$/;"	f
gutentags#start_job	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#start_job(cmd, opts) abort$/;"	f
gutentags#statusline	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline(...) abort$/;"	f
gutentags#statusline_cb	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline_cb(fmt_cb, ...) abort$/;"	f
gutentags#stripslash	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#stripslash(path)$/;"	f
gutentags#throw	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throw(message)$/;"	f
gutentags#toggletrace	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#toggletrace(...)$/;"	f
gutentags#trace	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#trace(message, ...)$/;"	f
gutentags#validate_cmd	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#validate_cmd(cmd) abort$/;"	f
gutentags#warning	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#warning(message)$/;"	f
gutentags_detect	plugged/vim-gutentags/plugin/gutentags.vim	/^augroup gutentags_detect$/;"	a
handle	plugged/vdebug/pythonx/vdebug/util.py	/^    def handle(self, e):$/;"	m	class:ExceptionHandler
handle_cmd_result	plugged/neomake/contrib/run-tests-watch	/^handle_cmd_result() {$/;"	f
handle_dbgp_error	plugged/vdebug/pythonx/vdebug/util.py	/^    def handle_dbgp_error(self, e):$/;"	m	class:ExceptionHandler
handle_double_click	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def handle_double_click(self):$/;"	m	class:DebuggerInterface
handle_eval	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def handle_eval(self, bang, args):$/;"	m	class:DebuggerInterface
handle_general_exception	plugged/vdebug/pythonx/vdebug/util.py	/^    def handle_general_exception(self):$/;"	m	class:ExceptionHandler
handle_interrupt	plugged/vdebug/pythonx/vdebug/util.py	/^    def handle_interrupt(self):$/;"	m	class:ExceptionHandler
handle_readable_error	plugged/vdebug/pythonx/vdebug/util.py	/^    def handle_readable_error(self, e):$/;"	m	class:ExceptionHandler
handle_return_keypress	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def handle_return_keypress(self):$/;"	m	class:DebuggerInterface
handle_socket_end	plugged/vdebug/pythonx/vdebug/util.py	/^    def handle_socket_end(self):$/;"	m	class:ExceptionHandler
handle_timeout	plugged/vdebug/pythonx/vdebug/util.py	/^    def handle_timeout(self):$/;"	m	class:ExceptionHandler
handle_trace	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def handle_trace(self, args=None):$/;"	m	class:DebuggerInterface
handle_vim_error	plugged/vdebug/pythonx/vdebug/util.py	/^    def handle_vim_error(self, e):$/;"	m	class:ExceptionHandler
handle_visual_eval	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def handle_visual_eval(self):$/;"	m	class:DebuggerInterface
has-ansi	plugged/nova-vim/package-lock.json	/^        "has-ansi": "2.0.0",$/;"	s	object:dependencies.chalk.requires
has-ansi	plugged/nova-vim/package-lock.json	/^    "has-ansi": {$/;"	o	object:dependencies
has_persistent_eval	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def has_persistent_eval(self):$/;"	m	class:WatchWindow
has_socket	plugged/vdebug/pythonx/vdebug/connection.py	/^    def has_socket(self):$/;"	m	class:SocketCreator
has_socket	plugged/vdebug/pythonx/vdebug/connection.py	/^    def has_socket(self):$/;"	m	class:SocketServer
hash	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def hash(self):$/;"	m	class:Cursor
hash	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def hash(self):$/;"	m	class:Cursor
header	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    header = """===========================================================$/;"	v	class:BreakpointWindow
health#deoplete#check	plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! health#deoplete#check() abort$/;"	f
help	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^help:$/;"	t
highlight_end	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span.text.0
highlight_end	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span.text.1
highlight_end	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span.text.2
highlight_end	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span.text.3
highlight_end	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span.text.4
highlight_end	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span.text.5
highlight_end	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span.text.6
highlight_end	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span.text.7
highlight_end	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span.text.8
highlight_end	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span.text.9
highlight_end	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.span.text.0
highlight_end	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.text.0
highlight_end	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	n	object:message.spans.0.expansion.span.text.0
highlight_end	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	n	object:message.spans.0.text.0
highlight_end	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	n	object:message.spans.0.text.0
highlight_start	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span.text.0
highlight_start	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span.text.1
highlight_start	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span.text.2
highlight_start	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span.text.3
highlight_start	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span.text.4
highlight_start	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span.text.5
highlight_start	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span.text.6
highlight_start	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span.text.7
highlight_start	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span.text.8
highlight_start	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span.text.9
highlight_start	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.span.text.0
highlight_start	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.text.0
highlight_start	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	n	object:message.spans.0.expansion.span.text.0
highlight_start	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	n	object:message.spans.0.text.0
highlight_start	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	n	object:message.spans.0.text.0
hl	plugged/vim-airline/t/highlighter.vim	/^    let hl = airline#highlighter#get_highlight('Foo1_to_Foo2')$/;"	v
hl	plugged/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight('Foo', 'bold', 'italic')$/;"	v
hl	plugged/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight2(['Foo','bg'], ['Foo','fg'], 'italic', 'bold')$/;"	v
html	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^html:$/;"	t
html_static_path	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^html_static_path = ['_static']$/;"	v
html_theme	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^html_theme = 'agogo'$/;"	v
htmlhelp	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^htmlhelp:$/;"	t
htmlhelp_basename	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^htmlhelp_basename = 'EditorConfigPythonCoredoc'$/;"	v
i	plugged/vim-gitgutter/test/runner.vim	/^      let i += 1$/;"	v
i	plugged/vim-gitgutter/test/runner.vim	/^    let i = 0$/;"	v
ic	plugged/vim-gitgutter/plugin/gitgutter.vim	/^    omap ic <Plug>GitGutterTextObjectInnerPending$/;"	m
ic	plugged/vim-gitgutter/plugin/gitgutter.vim	/^    xmap ic <Plug>GitGutterTextObjectInnerVisual$/;"	m
id	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    id = 11000$/;"	v	class:Breakpoint
if	plugged/deoplete-clang/mk/debug_code.mk	/^LOGGER_GET_COMPILATION_DATABASE_BEFORE_SUFFIX := if self.compilation_database:$/;"	t
ignore	plugged/nova-vim/package-lock.json	/^        "ignore": "3.3.3",$/;"	s	object:dependencies.eslint.requires
ignore	plugged/nova-vim/package-lock.json	/^    "ignore": {$/;"	o	object:dependencies
import	plugged/deoplete-clang/Makefile	/^import: set_debug$/;"	t
import_plugin	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def import_plugin(path, source, classname):$/;"	f
imurmurhash	plugged/nova-vim/package-lock.json	/^        "imurmurhash": "0.1.4",$/;"	s	object:dependencies.eslint.requires
imurmurhash	plugged/nova-vim/package-lock.json	/^    "imurmurhash": {$/;"	o	object:dependencies
index	plugged/deoplete-clang/tests/ast.py	/^index = clang.cindex.Index(clang.cindex.conf.lib.clang_createIndex(False, True))$/;"	v
index	plugged/deoplete-clang/tests/code_completion.py	/^index = clang.cindex.Index.create()$/;"	v
index	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def index(self, key):$/;"	m	class:OrderedDict
index_h	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang/clang_data.py	/^class index_h(object):$/;"	c
inflight	plugged/nova-vim/package-lock.json	/^        "inflight": "1.0.6",$/;"	s	object:dependencies.glob.requires
inflight	plugged/nova-vim/package-lock.json	/^    "inflight": {$/;"	o	object:dependencies
info	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def info(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
inherits	plugged/nova-vim/package-lock.json	/^        "inherits": "2.0.3",$/;"	s	object:dependencies.concat-stream.requires
inherits	plugged/nova-vim/package-lock.json	/^        "inherits": "2.0.3",$/;"	s	object:dependencies.glob.requires
inherits	plugged/nova-vim/package-lock.json	/^        "inherits": "2.0.3",$/;"	s	object:dependencies.readable-stream.requires
inherits	plugged/nova-vim/package-lock.json	/^    "inherits": {$/;"	o	object:dependencies
init	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^init = False$/;"	v
init_channel	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def init_channel(self, args):$/;"	m	class:DeopleteHandlers
init_msg	plugged/vdebug/tests/test_dbgp_api.py	/^    init_msg = """<?xml version="1.0"$/;"	v	class:ApiTest
init_msg	plugged/vdebug/tests/test_dbgp_api.py	/^    init_msg = """<?xml version="1.0"$/;"	v	class:apiInvalidInitTest
initialize	plugged/vdebug/rubylib/vdebug.rb	/^  def initialize(vim)$/;"	f	class:Vdebug
inquirer	plugged/nova-vim/package-lock.json	/^        "inquirer": "0.12.0",$/;"	s	object:dependencies.eslint.requires
inquirer	plugged/nova-vim/package-lock.json	/^    "inquirer": {$/;"	o	object:dependencies
insert	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def insert(self, index, key, value):$/;"	m	class:OrderedDict
insert	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    def insert(self, msg, position=None):$/;"	m	class:Window
insert	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def insert(self, msg, lineno, overwrite, allowEmpty, after_callback):$/;"	m	class:HiddenBuffer
insert	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def insert(self, msg, lineno, overwrite, allowEmpty, after_callback):$/;"	m	class:VimBuffer
insert	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def insert(self, msg, lineno=None, overwrite=False, allowEmpty=False):$/;"	m	class:Window
inst	plugged/vdebug/pythonx/vdebug/opts.py	/^    def inst(cls):$/;"	m	class:Options
install	plugged/deoplete.nvim/Makefile	/^install: vim-themis$/;"	t
instance	plugged/vdebug/pythonx/vdebug/opts.py	/^    instance = None$/;"	v	class:Options
integrity	plugged/nova-vim/package-lock.json	/^          "integrity": "sha1-9srKcokzqFDvkGYdDheYK6RxEaI=",$/;"	s	object:dependencies.esrecurse.dependencies.estraverse
integrity	plugged/nova-vim/package-lock.json	/^          "integrity": "sha1-ReN\/s56No\/JbruP\/U2niu18iAXo=",$/;"	s	object:dependencies.acorn-jsx.dependencies.acorn
integrity	plugged/nova-vim/package-lock.json	/^          "integrity": "sha1-Y1xUNsxypuDDh87KJ41OLuxSaH4=",$/;"	s	object:dependencies.table.dependencies.string-width
integrity	plugged/nova-vim/package-lock.json	/^          "integrity": "sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ=",$/;"	s	object:dependencies.watch.dependencies.minimist
integrity	plugged/nova-vim/package-lock.json	/^          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",$/;"	s	object:dependencies.table.dependencies.is-fullwidth-code-point
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-+oZxTnLCHbiGAXYezy9VXRq8a5Y=",$/;"	s	object:dependencies.flat-cache
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-06ioOzGapneTZisT52HHkRQiMG4=",$/;"	s	object:dependencies.ansi-escapes
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-0aIUg\/0iu0HlihL6NCGCMUCJfEU=",$/;"	s	object:dependencies.pluralize
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-0iXsIxMuie3Tj9p2dHLmLmXxEG0=",$/;"	s	object:dependencies.is-path-cwd
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-0mPKVGls2KMGtcplUekt5XkY++c=",$/;"	s	object:dependencies.safe-buffer
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-0rPsXU2ADO2BjbU40ol02wpzzLE=",$/;"	s	object:dependencies.es6-set
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-2Klr13\/Wjfd5OnMDajug1UBdR3s=",$/;"	s	object:dependencies.concat-map
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-34xp7vFkeSPHFXuc6DhAYQsCzDk=",$/;"	s	object:dependencies.event-emitter
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-4Bl16BJ4GhY6ba392AOY3GTIicM=",$/;"	s	object:dependencies.escope
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-4mDHj2Fhzdmw5WzD4Khd4Xx6V74=",$/;"	s	object:dependencies.progress
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-5zFTHKLt4n0YgiJCfaF4IdaP9Pw=",$/;"	s	object:dependencies.debug
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-69hGZ8oNuzMLmbz8aOrCvFQ3Dg0=",$/;"	s	object:dependencies.globby
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",$/;"	s	object:dependencies.is-fullwidth-code-point
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-7GIRvtGSBEIIj+D3Cyg3Iy7SyKg=",$/;"	s	object:dependencies.shelljs
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw=",$/;"	s	object:dependencies.pify
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-7b+JA\/ZvfOL46v1s7tZeJkyDGzU=",$/;"	s	object:dependencies.slice-ansi
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-8FyiM7SMBdVP\/wd2XfhQfpXAL\/g=",$/;"	s	object:dependencies.exit-hook
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-8Hndm\/2uZe4gOKrorLyGqxCeNpM=",$/;"	s	object:dependencies.is-my-json-valid
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=",$/;"	s	object:dependencies.sprintf-js
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0=",$/;"	s	object:dependencies.number-is-nan
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-CqxmL9Ur54lk1VMvaUeE5wEQrPc=",$/;"	s	object:dependencies.concat-stream
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-Cr9PHKpbyx96nYrMbepPqqBLrJs=",$/;"	s	object:dependencies.esutils
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c=",$/;"	s	object:dependencies.code-point-at
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-DdTJ\/6q8NXlgsbckEV1+Doai4fU=",$/;"	s	object:dependencies.through
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-De4\/7TH81GlhjOc0IJn8GvoL2xM=",$/;"	s	object:dependencies.estraverse
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-Dovf5NHduIVNZOBOp8AOKgJuVlg=",$/;"	s	object:dependencies.graceful-fs
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",$/;"	s	object:dependencies.string-width
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18=",$/;"	s	object:dependencies.path-is-absolute
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-FPdd4\/INKG75MwmbLOUKkDWc7xA=",$/;"	s	object:dependencies.exec-sh
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-FQ4gt1ZZCtP5EJPyWk8q2L\/zC6M=",$/;"	s	object:dependencies.process-nextick-args
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8=",$/;"	s	object:dependencies.fs.realpath
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-G2HAViGQqN\/2rjuyzwIAyhMLhtQ=",$/;"	s	object:dependencies.escape-string-regexp
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-Gc5QLKVyZl87ZHsQk5+X\/RYV8QI=",$/;"	s	object:dependencies.rx-lite
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-HhX7ysl9Pumb8tc7TGVrCCu6+5E=",$/;"	s	object:dependencies.strip-json-comments
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-HvK\/1jUE3wvHV4X\/+MLEHfEvB34=",$/;"	s	object:dependencies.inquirer
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-IQmtx5ZYh8\/AXLvUQsrIv7s2CGM=",$/;"	s	object:dependencies.object-assign
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD\/o=",$/;"	s	object:dependencies.pinkie-promise
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-IZMqVJ9eUv\/ZqCf1cOBL5iqX2lQ=",$/;"	s	object:dependencies.prelude-ls
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-IvyfeA6lvKEwb6srbTM2sPpix1Q=",$/;"	s	object:dependencies.eslint
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM=",$/;"	s	object:dependencies.strip-bom
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-J1hIEIkUVqQXHI0CJkQa3pDLyus=",$/;"	s	object:dependencies.wordwrap
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-Jsv+k10a7uq7Kbw\/5a6wHpPUQiY=",$/;"	s	object:dependencies.resolve-from
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-K7xULw\/amGGnVdOUf+\/Ys\/UThV8=",$/;"	s	object:dependencies.table
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-KRC1zNSc6JPC\/\/+qtP2LOjG4I3Q=",$/;"	s	object:dependencies.espree
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-LHS27kHZPKUbe1qu6PUDYx0lKnM=",$/;"	s	object:dependencies.jsonify
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=",$/;"	s	object:dependencies.mkdirp
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-MU3QpLM2j609\/NxU7eYXG4htrzw=",$/;"	s	object:dependencies.ajv-keywords
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-MXr+3kg81inYEMTljvD\/jEH8ahg=",$/;"	s	object:dependencies.watch
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-N53Ocw9hZvds76TmcHoVmwLFpvo=",$/;"	s	object:dependencies.doctrine
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-NGYfRohjJ\/7SmRR5FSJS35LapUE=",$/;"	s	object:dependencies.restore-cursor
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=",$/;"	s	object:dependencies.has-ansi
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-NkxeQJ0\/TWMB1sC0wFu6UBgK62Q=",$/;"	s	object:dependencies.optionator
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9\/FM=",$/;"	s	object:dependencies.path-is-inside
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-OTvnMKlEb9Hq1tpZoBQwjzbCics=",$/;"	s	object:dependencies.tryit
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-OwmSTt+fCDwEkP3UwLxEIeBHZO4=",$/;"	s	object:dependencies.levn
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-PYpcZog6FqMMqGQ+hR8Zuqd5eRc=",$/;"	s	object:dependencies.fast-levenshtein
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-QQWWCP\/BVHV7cV2ZidGZ\/783LjU=",$/;"	s	object:dependencies.readline2
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-QyNS5XrM2HqzEQ6C0\/6g5HgSFW0=",$/;"	s	object:dependencies.ignore
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=",$/;"	s	object:dependencies.util-deprecate
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-RxO2U2rffyrE8yfVWed1a\/9kgiA=",$/;"	s	object:dependencies.esrecurse
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",$/;"	s	object:dependencies.inflight
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-Sr6\/7tdUHywnrPspvbvRXI1bpPc=",$/;"	s	object:dependencies.natural-compare
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-T9kss04OnbPInIYi7PUfm5eMbLk=",$/;"	s	object:dependencies.jsonpointer
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-Tg1W1slmL9MeQwEcS5WqSZVUIdM=",$/;"	s	object:dependencies.require-uncached
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",$/;"	s	object:dependencies.supports-color
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-UgtFZPhlc7qWZir4Woyvp7S1pvY=",$/;"	s	object:dependencies.js-yaml
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-V\/4cTkhHTt1lsJkR8msc1Ald2oQ=",$/;"	s	object:dependencies.is-property
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",$/;"	s	object:dependencies.ms
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",$/;"	s	object:dependencies.once
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-WITKtRLPHTVeP7eE8wgEsrUg23I=",$/;"	s	object:dependencies.type-check
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-X8A4KOJkzqP+kUVUdvejxWbLB1c=",$/;"	s	object:dependencies.write
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-XjqzIlH\/0VOKH45f+hNXdy+S2W8=",$/;"	s	object:dependencies.es6-weak-map
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",$/;"	s	object:dependencies.inherits
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-ZHdYK4IU1gI0YJRWcAO+ip6sBNw=",$/;"	s	object:dependencies.is-path-in-cwd
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-ZNo\/fValRBLll5S9Ytw1KV6PKYc=",$/;"	s	object:dependencies.cli-cursor
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-\/7xJiDNuDoM94MFox+8VISGqf7M=",$/;"	s	object:dependencies.os-homedir
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-\/AbloWg\/vaE95mev9xe7wQpI838=",$/;"	s	object:dependencies.is-path-inside
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-\/cpRzuYTOJXjyI1TXOSdv\/YqRjM=",$/;"	s	object:dependencies.esprima
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-aFj+fAlpt9TpCTM3ZHrHn2DfvnQ=",$/;"	s	object:dependencies.generate-function
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",$/;"	s	object:dependencies.strip-ansi
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-bqa989hTrlTMuOR7+gvz+QMfsYQ=",$/;"	s	object:dependencies.co
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-c9g7wmP4bpf4zE9rrhsOkKfSLIY=",$/;"	s	object:dependencies.argparse
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-clVrgM+g1IqXToDnckjoDtT3+HA=",$/;"	s	object:dependencies.pinkie
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-dTHjnUlJwoGma4xabgJl6LBYlNo=",$/;"	s	object:dependencies.merge
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-dUu1v+VUUdpppYuU1F9MWwRi1Y8=",$/;"	s	object:dependencies.d
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-dXi1G+l0IHpUh4IbVlOMIk5Oezg=",$/;"	s	object:dependencies.es5-ext
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-eCA6TRwyiuHYbcpkYONptX9AVa4=",$/;"	s	object:dependencies.lodash
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-f17oI66AUgfACvLfSoTsP8+lcLQ=",$/;"	s	object:dependencies.text-table
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-gv+wKynmYq5TvcIK8VlHcGc5xTY=",$/;"	s	object:dependencies.ajv
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-hX\/Kv8M5fSYluCKCYuhqp6ARsF0=",$/;"	s	object:dependencies.minimist
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-hnrHTjhkGHsdPUfZlqeOxciDB3c=",$/;"	s	object:dependencies.typedarray
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0=",$/;"	s	object:dependencies.arrify
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c=",$/;"	s	object:dependencies.balanced-match
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-j7+rsKmKJT0xhDMfno3rc3L6xsA=",$/;"	s	object:dependencies.mute-stream
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-jfV8YeouPFAUCNEA+wE8+NbgzGI=",$/;"	s	object:dependencies.is-resolvable
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-jjGcnwRTv1ddN0lAplWSDlnKVRI=",$/;"	s	object:dependencies.es6-iterator
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-kTbgUD3MBqMBaQ8LsU\/042TpSfA=",$/;"	s	object:dependencies.es6-map
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-khi5srkoojixPcT7a21XbyMUU+o=",$/;"	s	object:dependencies.imurmurhash
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-lAhe9jWB7NPaqSREqP6U6CV3dR8=",$/;"	s	object:dependencies.caller-path
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-mjRBDk9OPaI96jdb5b5w8kd47Dk=",$/;"	s	object:dependencies.array-union
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-mnWdOcXy\/1A\/1TAGRu1EX4jE+a8=",$/;"	s	object:dependencies.json-stable-stringify
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-nA4cQDCM6AT0eDYYuTf6iPmdUNA=",$/;"	s	object:dependencies.generate-object-property
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-nHC\/2Babwdy\/SGBODwS4tJzenp8=",$/;"	s	object:dependencies.user-home
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-nQPaOOi2mwes7YiOTZpEgAyqVkQ="$/;"	s	object:dependencies.nova-colors
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-ofeDj4MUxRbwXs78vEzP4EtO14k=",$/;"	s	object:dependencies.onetime
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-pcbVMr5lbiPbgg77lDofBJmNY68=",$/;"	s	object:dependencies.xtend
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J\/Jg=",$/;"	s	object:dependencies.chalk
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-r2rId6Jcx\/dOBYiUdThY39sk\/bY=",$/;"	s	object:dependencies.array-uniq
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-r6uWJikQp\/M8GaV3WCXGnzTjUMo=",$/;"	s	object:dependencies.callsites
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-r9+UiPsezvyDSPb7IvRk4ypYs2s=",$/;"	s	object:dependencies.acorn-jsx
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-s2nW+128E+7PUk+RsHD+7cNXzzQ=",$/;"	s	object:dependencies.deep-is
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-sjTKIJsp72b8UY2bmNWEewDt8Ao=",$/;"	s	object:dependencies.cli-width
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-sp4fThEl+pehA4K4pTNze3SR4Xk=",$/;"	s	object:dependencies.string_decoder
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",$/;"	s	object:dependencies.ansi-styles
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=",$/;"	s	object:dependencies.wrappy
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-tf1UIgqivFq1eqtxQMlAdUUDwac=",$/;"	s	object:dependencies.core-util-is
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",$/;"	s	object:dependencies.isarray
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-vos2rvzN6LPKeqLWr8B6NyQsDS0=",$/;"	s	object:dependencies.circular-json
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-vwDvT9q2uhtG7Le2KbTH7VcVzHc=",$/;"	s	object:dependencies.es6-symbol
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-w5KZDD5oR4PYOLjISkXYoEhFg2E=",$/;"	s	object:dependencies.file-entry-cache
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8=",$/;"	s	object:dependencies.ansi-regex
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-wHshHHyVLsH479Uad+8NHTmQopI=",$/;"	s	object:dependencies.brace-expansion
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-wSyYHQZ4RshLyvhiz\/kw2Qf\/0ag=",$/;"	s	object:dependencies.del
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-wjOOxkPfeht\/5cVPqG9XQopV8z0=",$/;"	s	object:dependencies.rimraf
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-xGDfCEkUY\/AozLguqzcwvwEIez0=",$/;"	s	object:dependencies.acorn
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-y+Hjr\/zxzUS4DK3+0o3Hk6lwHS4=",$/;"	s	object:dependencies.figures
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha1-yK1KXhEGYeQCp9IbUw4AnyX444k=",$/;"	s	object:dependencies.run-async
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA/;"	s	object:dependencies.glob
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha512-S0nG3CLEQiY\/ILxqtztTWH\/3iRRdyBLw6KMDxnKMchrtbj2OFmehVh0WUCfW3DUrIgx/;"	s	object:dependencies.globals
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha512-h+8+r3MKEhkiVrwdKL8aWs1oc1VvBu33ueshOvS26RsZQ3Amhx\/oO3TKe4lApSV9ueY6/;"	s	object:dependencies.readable-stream
integrity	plugged/nova-vim/package-lock.json	/^      "integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4h/;"	s	object:dependencies.minimatch
invalid_init_msg	plugged/vdebug/tests/test_dbgp_api.py	/^    invalid_init_msg = """<?xml version="1.0"$/;"	v	class:apiInvalidInitTest
is-fullwidth-code-point	plugged/nova-vim/package-lock.json	/^            "is-fullwidth-code-point": "2.0.0",$/;"	s	object:dependencies.table.dependencies.string-width.requires
is-fullwidth-code-point	plugged/nova-vim/package-lock.json	/^        "is-fullwidth-code-point": "1.0.0",$/;"	s	object:dependencies.readline2.requires
is-fullwidth-code-point	plugged/nova-vim/package-lock.json	/^        "is-fullwidth-code-point": "1.0.0",$/;"	s	object:dependencies.string-width.requires
is-fullwidth-code-point	plugged/nova-vim/package-lock.json	/^        "is-fullwidth-code-point": {$/;"	o	object:dependencies.table.dependencies
is-fullwidth-code-point	plugged/nova-vim/package-lock.json	/^    "is-fullwidth-code-point": {$/;"	o	object:dependencies
is-my-json-valid	plugged/nova-vim/package-lock.json	/^        "is-my-json-valid": "2.16.0",$/;"	s	object:dependencies.eslint.requires
is-my-json-valid	plugged/nova-vim/package-lock.json	/^    "is-my-json-valid": {$/;"	o	object:dependencies
is-path-cwd	plugged/nova-vim/package-lock.json	/^        "is-path-cwd": "1.0.0",$/;"	s	object:dependencies.del.requires
is-path-cwd	plugged/nova-vim/package-lock.json	/^    "is-path-cwd": {$/;"	o	object:dependencies
is-path-in-cwd	plugged/nova-vim/package-lock.json	/^        "is-path-in-cwd": "1.0.0",$/;"	s	object:dependencies.del.requires
is-path-in-cwd	plugged/nova-vim/package-lock.json	/^    "is-path-in-cwd": {$/;"	o	object:dependencies
is-path-inside	plugged/nova-vim/package-lock.json	/^        "is-path-inside": "1.0.0"$/;"	s	object:dependencies.is-path-in-cwd.requires
is-path-inside	plugged/nova-vim/package-lock.json	/^    "is-path-inside": {$/;"	o	object:dependencies
is-property	plugged/nova-vim/package-lock.json	/^        "is-property": "1.0.2"$/;"	s	object:dependencies.generate-object-property.requires
is-property	plugged/nova-vim/package-lock.json	/^    "is-property": {$/;"	o	object:dependencies
is-resolvable	plugged/nova-vim/package-lock.json	/^        "is-resolvable": "1.0.0",$/;"	s	object:dependencies.eslint.requires
is-resolvable	plugged/nova-vim/package-lock.json	/^    "is-resolvable": {$/;"	o	object:dependencies
isKindInformative	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def isKindInformative(self):$/;"	m	class:CompletionChunk
isKindInformative	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def isKindInformative(self):$/;"	m	class:CompletionChunk
isKindOptional	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def isKindOptional(self):$/;"	m	class:CompletionChunk
isKindOptional	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def isKindOptional(self):$/;"	m	class:CompletionChunk
isKindPlaceHolder	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def isKindPlaceHolder(self):$/;"	m	class:CompletionChunk
isKindPlaceHolder	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def isKindPlaceHolder(self):$/;"	m	class:CompletionChunk
isKindResultType	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def isKindResultType(self):$/;"	m	class:CompletionChunk
isKindResultType	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def isKindResultType(self):$/;"	m	class:CompletionChunk
isKindTypedText	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def isKindTypedText(self):$/;"	m	class:CompletionChunk
isKindTypedText	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def isKindTypedText(self):$/;"	m	class:CompletionChunk
is_alive	plugged/vdebug/pythonx/vdebug/connection.py	/^    def is_alive(self):$/;"	m	class:SocketServer
is_attribute	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def is_attribute(self):$/;"	m	class:CursorKind
is_attribute	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def is_attribute(self):$/;"	m	class:CursorKind
is_bitfield	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def is_bitfield(self):$/;"	m	class:Cursor
is_bitfield	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def is_bitfield(self):$/;"	m	class:Cursor
is_connected	plugged/vdebug/pythonx/vdebug/session.py	/^    def is_connected(self):$/;"	m	class:Session
is_connected	plugged/vdebug/pythonx/vdebug/session.py	/^    def is_connected(self):$/;"	m	class:SessionHandler
is_const_qualified	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def is_const_qualified(self):$/;"	m	class:Type
is_const_qualified	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def is_const_qualified(self):$/;"	m	class:Type
is_debug_enabled	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    is_debug_enabled = False$/;"	v	class:LoggingMixin
is_declaration	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def is_declaration(self):$/;"	m	class:CursorKind
is_declaration	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def is_declaration(self):$/;"	m	class:CursorKind
is_definition	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def is_definition(self):$/;"	m	class:Cursor
is_definition	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def is_definition(self):$/;"	m	class:Cursor
is_empty	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def is_empty(self):$/;"	m	class:HiddenBuffer
is_empty	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def is_empty(self):$/;"	m	class:VimBuffer
is_expression	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def is_expression(self):$/;"	m	class:CursorKind
is_expression	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def is_expression(self):$/;"	m	class:CursorKind
is_function_variadic	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def is_function_variadic(self):$/;"	m	class:Type
is_function_variadic	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def is_function_variadic(self):$/;"	m	class:Type
is_input_file	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def is_input_file(self):$/;"	m	class:FileInclusion
is_input_file	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def is_input_file(self):$/;"	m	class:FileInclusion
is_invalid	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def is_invalid(self):$/;"	m	class:CursorKind
is_invalid	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def is_invalid(self):$/;"	m	class:CursorKind
is_json	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang/profiler.py	/^    def is_json(json_data):$/;"	f	function:timeit	file:
is_listening	plugged/vdebug/pythonx/vdebug/listener.py	/^    def is_listening(self):$/;"	m	class:BackgroundListener
is_listening	plugged/vdebug/pythonx/vdebug/listener.py	/^    def is_listening(self):$/;"	m	class:ForegroundListener
is_listening	plugged/vdebug/pythonx/vdebug/session.py	/^    def is_listening(self):$/;"	m	class:SessionHandler
is_modified	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def is_modified():$/;"	m	class:Ui
is_open	plugged/vdebug/pythonx/vdebug/session.py	/^    def is_open(self):$/;"	m	class:Session
is_open	plugged/vdebug/pythonx/vdebug/session.py	/^    def is_open(self):$/;"	m	class:SessionHandler
is_open	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    is_open = False$/;"	v	class:Window
is_pod	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def is_pod(self):$/;"	m	class:Type
is_pod	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def is_pod(self):$/;"	m	class:Type
is_preprocessing	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def is_preprocessing(self):$/;"	m	class:CursorKind
is_preprocessing	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def is_preprocessing(self):$/;"	m	class:CursorKind
is_primary	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	b	object:message.spans.0
is_primary	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	b	object:message.spans.0.expansion.def_site_span
is_primary	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	b	object:message.spans.0.expansion.span
is_primary	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	b	object:message.spans.0
is_primary	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	b	object:message.spans.0.expansion.span
is_primary	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	b	object:message.spans.0
is_ready	plugged/vdebug/pythonx/vdebug/listener.py	/^    def is_ready(self):$/;"	m	class:BackgroundListener
is_ready	plugged/vdebug/pythonx/vdebug/listener.py	/^    def is_ready(self):$/;"	m	class:ForegroundListener
is_reference	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def is_reference(self):$/;"	m	class:CursorKind
is_reference	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def is_reference(self):$/;"	m	class:CursorKind
is_restrict_qualified	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def is_restrict_qualified(self):$/;"	m	class:Type
is_restrict_qualified	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def is_restrict_qualified(self):$/;"	m	class:Type
is_statement	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def is_statement(self):$/;"	m	class:CursorKind
is_statement	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def is_statement(self):$/;"	m	class:CursorKind
is_static_method	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def is_static_method(self):$/;"	m	class:Cursor
is_static_method	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def is_static_method(self):$/;"	m	class:Cursor
is_supported	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def is_supported(self):$/;"	m	class:FeatureGetResponse
is_tracing	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def is_tracing(self):$/;"	m	class:TraceWindow
is_translation_unit	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def is_translation_unit(self):$/;"	m	class:CursorKind
is_translation_unit	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def is_translation_unit(self):$/;"	m	class:CursorKind
is_unexposed	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def is_unexposed(self):$/;"	m	class:CursorKind
is_unexposed	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def is_unexposed(self):$/;"	m	class:CursorKind
is_uninitialized	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def is_uninitialized(self):$/;"	m	class:ContextProperty
is_volatile_qualified	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def is_volatile_qualified(self):$/;"	m	class:Type
is_volatile_qualified	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def is_volatile_qualified(self):$/;"	m	class:Type
is_win	plugged/vdebug/pythonx/vdebug/util.py	/^    is_win = False$/;"	v	class:FilePath
isarray	plugged/nova-vim/package-lock.json	/^        "isarray": "1.0.0"$/;"	s	object:dependencies.doctrine.requires
isarray	plugged/nova-vim/package-lock.json	/^        "isarray": "1.0.0",$/;"	s	object:dependencies.readable-stream.requires
isarray	plugged/nova-vim/package-lock.json	/^    "isarray": {$/;"	o	object:dependencies
isconnected	plugged/vdebug/pythonx/vdebug/connection.py	/^    def isconnected(self):$/;"	m	class:ConnectionHandler
isset	plugged/vdebug/pythonx/vdebug/opts.py	/^    def isset(cls, name):$/;"	m	class:Options
items	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def items(self):$/;"	m	class:OrderedDict
iteritems	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def iteritems(self):$/;"	m	class:OrderedDict
iterkeys	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def iterkeys(self):$/;"	m	class:OrderedDict
itervalues	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def itervalues(self):$/;"	m	class:OrderedDict
jest	plugged/nova-vim/package.json	/^      "jest": true$/;"	b	object:eslintConfig.env
join_version	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/versiontools.py	/^def join_version(version_tuple):$/;"	f
js-yaml	plugged/nova-vim/package-lock.json	/^        "js-yaml": "3.8.4",$/;"	s	object:dependencies.eslint.requires
js-yaml	plugged/nova-vim/package-lock.json	/^    "js-yaml": {$/;"	o	object:dependencies
json	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^json:$/;"	t
json-stable-stringify	plugged/nova-vim/package-lock.json	/^        "json-stable-stringify": "1.0.1"$/;"	s	object:dependencies.ajv.requires
json-stable-stringify	plugged/nova-vim/package-lock.json	/^        "json-stable-stringify": "1.0.1",$/;"	s	object:dependencies.eslint.requires
json-stable-stringify	plugged/nova-vim/package-lock.json	/^    "json-stable-stringify": {$/;"	o	object:dependencies
jsonify	plugged/nova-vim/package-lock.json	/^        "jsonify": "0.0.0"$/;"	s	object:dependencies.json-stable-stringify.requires
jsonify	plugged/nova-vim/package-lock.json	/^    "jsonify": {$/;"	o	object:dependencies
jsonpointer	plugged/nova-vim/package-lock.json	/^        "jsonpointer": "4.0.1",$/;"	s	object:dependencies.is-my-json-valid.requires
jsonpointer	plugged/nova-vim/package-lock.json	/^    "jsonpointer": {$/;"	o	object:dependencies
kInput	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^kInput = """\\$/;"	v
kInput	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^kInput = """\\$/;"	v
kInput	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^kInput = """\\$/;"	v
kInput	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^kInput = """\\$/;"	v
kInputsDir	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cdb.py	/^kInputsDir = os.path.join(os.path.dirname(__file__), 'INPUTS')$/;"	v
kInputsDir	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_index.py	/^kInputsDir = os.path.join(os.path.dirname(__file__), 'INPUTS')$/;"	v
kInputsDir	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_translation_unit.py	/^kInputsDir = os.path.join(os.path.dirname(__file__), 'INPUTS')$/;"	v
kInputsDir	plugged/deoplete-clang/tests/clang/tests/cindex/test_cdb.py	/^kInputsDir = os.path.join(os.path.dirname(__file__), 'INPUTS')$/;"	v
kInputsDir	plugged/deoplete-clang/tests/clang/tests/cindex/test_index.py	/^kInputsDir = os.path.join(os.path.dirname(__file__), 'INPUTS')$/;"	v
kInputsDir	plugged/deoplete-clang/tests/clang/tests/cindex/test_translation_unit.py	/^kInputsDir = os.path.join(os.path.dirname(__file__), 'INPUTS')$/;"	v
kParentTest	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^kParentTest = """\\$/;"	v
kParentTest	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^kParentTest = """\\$/;"	v
kTemplateArgTest	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^kTemplateArgTest = """\\$/;"	v
kTemplateArgTest	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^kTemplateArgTest = """\\$/;"	v
keymapper	plugged/vdebug/pythonx/vdebug/session.py	/^    def keymapper(self):$/;"	m	class:Session
keys	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def keys(self):$/;"	m	class:OrderedDict
kill_vim	plugged/vdebug/features/support/helpers.rb	/^  def kill_vim$/;"	f	module:VdebugHelper
kill_with_childs	plugged/neomake/contrib/run-tests-watch	/^kill_with_childs() {$/;"	f
kind	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def kind(self):$/;"	m	class:CodeCompletionResult
kind	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def kind(self):$/;"	m	class:CompletionChunk
kind	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def kind(self):$/;"	m	class:Cursor
kind	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def kind(self):$/;"	m	class:Token
kind	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def kind(self):$/;"	m	class:Type
kind	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def kind(self):$/;"	m	class:CodeCompletionResult
kind	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def kind(self):$/;"	m	class:CompletionChunk
kind	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def kind(self):$/;"	m	class:Cursor
kind	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def kind(self):$/;"	m	class:Token
kind	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def kind(self):$/;"	m	class:Type
kind	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	a	object:target
kind	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	a	object:target
kind	plugged/neomake/tests/fixtures/rust/cargo_error_without_span.json	/^ {"message":{"children":[],"code":null,"level":"error","message":"aborting due to 18 previous er/;"	a	object:target
kind	plugged/neomake/tests/fixtures/rust/cargo_info.json	/^{"features":["default"],"filenames":["\/home\/jelte\/fun\/derive_more\/target\/debug\/deps\/libu/;"	a	object:target
kind	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	a	object:target
kinds	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang/clang_data.py	/^    kinds = dict({$/;"	v	class:index_h
label	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.spans.0
label	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	z	object:message.spans.0.expansion.def_site_span
label	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	z	object:message.spans.0.expansion.span
label	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	z	object:message.spans.0
label	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	z	object:message.spans.0.expansion.span
label	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	z	object:message.spans.0
last_error	plugged/vdebug/rubylib/vdebug.rb	/^  def last_error$/;"	f	class:Vdebug
last_find	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^def last_find(s, needles):$/;"	f
latex	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^latex:$/;"	t
latex_documents	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^latex_documents = [$/;"	v
latexpdf	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^latexpdf:$/;"	t
level	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message
level	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.children.0
level	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.children.1
level	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	s	object:message
level	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	s	object:message.children.0
level	plugged/neomake/tests/fixtures/rust/cargo_error_without_span.json	/^ {"message":{"children":[],"code":null,"level":"error","message":"aborting due to 18 previous er/;"	s	object:message
level	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	s	object:message
level	plugged/vdebug/tests/test_log.py	/^    level = 1$/;"	v	class:LoggerTest
level	plugged/vdebug/tests/test_log.py	/^    level = 1$/;"	v	class:WindowLoggerTest
level	plugged/vdebug/tests/test_log.py	/^    level = 2$/;"	v	class:FileLoggerTest
levn	plugged/nova-vim/package-lock.json	/^        "levn": "0.3.0",$/;"	s	object:dependencies.eslint.requires
levn	plugged/nova-vim/package-lock.json	/^        "levn": "0.3.0",$/;"	s	object:dependencies.optionator.requires
levn	plugged/nova-vim/package-lock.json	/^    "levn": {$/;"	o	object:dependencies
lexical_parent	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def lexical_parent(self):$/;"	m	class:Cursor
lexical_parent	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def lexical_parent(self):$/;"	m	class:Cursor
lib	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def lib(self):$/;"	m	class:Config
lib	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def lib(self):$/;"	m	class:Config
library_file	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    library_file = None$/;"	v	class:Config
library_file	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    library_file = None$/;"	v	class:Config
library_path	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    library_path = None$/;"	v	class:Config
library_path	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    library_path = None$/;"	v	class:Config
line	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def line(self):$/;"	m	class:SourceLocation
line	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def line(self):$/;"	m	class:SourceLocation
line	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def line(self, number):$/;"	m	class:HiddenBuffer
line	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def line(self, number):$/;"	m	class:VimBuffer
line_at	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def line_at(self, line):$/;"	m	class:Window
line_end	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0
line_end	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span
line_end	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.span
line_end	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	n	object:message.spans.0
line_end	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	n	object:message.spans.0.expansion.span
line_end	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	n	object:message.spans.0
line_start	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0
line_start	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.def_site_span
line_start	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	n	object:message.spans.0.expansion.span
line_start	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	n	object:message.spans.0
line_start	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	n	object:message.spans.0.expansion.span
line_start	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	n	object:message.spans.0
link_api	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def link_api(self, api):$/;"	m	class:Store
linkcheck	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^linkcheck:$/;"	t
lint	plugged/deoplete-clang/Makefile	/^lint: lint_modules flake8$/;"	t
lint	plugged/deoplete.nvim/Makefile	/^lint:$/;"	t
lint	plugged/nova-vim/package.json	/^    "lint": "eslint src",$/;"	s	object:scripts
lint_modules	plugged/deoplete-clang/Makefile	/^lint_modules:$/;"	t
listen	plugged/vdebug/pythonx/vdebug/connection.py	/^    def listen(self, serv, timeout):$/;"	m	class:SocketCreator
listen	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def listen(self):$/;"	m	class:DebuggerInterface
listen	plugged/vdebug/pythonx/vdebug/session.py	/^    def listen(self):$/;"	m	class:SessionHandler
load_external_module	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def load_external_module(file, module):$/;"	f
load_filters	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def load_filters(self, context):$/;"	m	class:Deoplete
load_sources	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def load_sources(self, context):$/;"	m	class:Deoplete
loaded	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    loaded = False$/;"	v	class:Config
loaded	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    loaded = False$/;"	v	class:Config
loaded_nerd_comments	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^let loaded_nerd_comments = 1$/;"	v
loaded_nerd_tree	plugged/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loader	plugged/vim-php-cs-fixer/tests/fixtures/misc/phpdoc_to_comment,phpdoc_var_without_name.php	/^$loader = require_once __DIR__.'\/..\/app\/autoload.php';$/;"	v
loader	plugged/vim-php-cs-fixer/tests/results/misc/phpdoc_to_comment,phpdoc_var_without_name.php	/^$loader = require_once __DIR__.'\/..\/app\/autoload.php';$/;"	v
location	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def location(self):$/;"	m	class:Cursor
location	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def location(self):$/;"	m	class:Diagnostic
location	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def location(self):$/;"	m	class:Token
location	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def location(self):$/;"	m	class:Cursor
location	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def location(self):$/;"	m	class:Diagnostic
location	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def location(self):$/;"	m	class:Token
lockfileVersion	plugged/nova-vim/package-lock.json	/^  "lockfileVersion": 1,$/;"	n
lodash	plugged/nova-vim/package-lock.json	/^        "lodash": "4.17.4",$/;"	s	object:dependencies.eslint.requires
lodash	plugged/nova-vim/package-lock.json	/^        "lodash": "4.17.4",$/;"	s	object:dependencies.inquirer.requires
lodash	plugged/nova-vim/package-lock.json	/^        "lodash": "4.17.4",$/;"	s	object:dependencies.table.requires
lodash	plugged/nova-vim/package-lock.json	/^    "lodash": {$/;"	o	object:dependencies
log	plugged/vdebug/pythonx/vdebug/connection.py	/^    def log(message):$/;"	m	class:BackgroundSocketCreator
log	plugged/vdebug/pythonx/vdebug/log.py	/^    def log(cls, string, level=Logger.INFO):$/;"	m	class:Log
log	plugged/vdebug/pythonx/vdebug/log.py	/^    def log(self, string, level):$/;"	m	class:Logger
log	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    def log(self):$/;"	m	class:Ui
log	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def log(self):$/;"	m	class:WindowManager
log_format	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^log_format = '%(asctime)s %(levelname)-8s [%(process)d] (%(name)s) %(message)s'$/;"	v
log_message_cooldown	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^log_message_cooldown = 0.5$/;"	v
logger-get_compilation_database	plugged/deoplete-clang/Makefile	/^logger-get_compilation_database: import$/;"	t
logger-get_compile_params	plugged/deoplete-clang/Makefile	/^logger-get_compile_params: import$/;"	t
loggers	plugged/vdebug/pythonx/vdebug/log.py	/^    loggers = {}$/;"	v	class:Log
logmethod	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^def logmethod(func):$/;"	f
logwin	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    logwin = None$/;"	v	class:Ui
m	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    m = sys.modules.get('__main__')$/;"	v
macro_decl_name	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.spans.0.expansion
macro_decl_name	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	s	object:message.spans.0.expansion
main	plugged/deoplete-clang/rplugin/python3/deoplete/clang/examples/cindex/cindex-dump.py	/^def main():$/;"	f
main	plugged/deoplete-clang/rplugin/python3/deoplete/clang/examples/cindex/cindex-includes.py	/^def main():$/;"	f
main	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/INPUTS/hello.cpp	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
main	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/INPUTS/include.cpp	/^int main() { }$/;"	f	typeref:typename:int
main	plugged/deoplete-clang/tests/clang/examples/cindex/cindex-dump.py	/^def main():$/;"	f
main	plugged/deoplete-clang/tests/clang/examples/cindex/cindex-includes.py	/^def main():$/;"	f
main	plugged/deoplete-clang/tests/clang/tests/cindex/INPUTS/hello.cpp	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
main	plugged/deoplete-clang/tests/clang/tests/cindex/INPUTS/include.cpp	/^int main() { }$/;"	f	typeref:typename:int
main	plugged/deoplete-clang/tests/hello_world.m	/^int main()$/;"	f	interface:
main	plugged/deoplete-clang/tests/test_cmake_source.py	/^def main():$/;"	f
main	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def main(self, name, args, queue_id):$/;"	m	class:Child
main	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^def main(serveraddr):$/;"	f
main	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/main.py	/^def main():$/;"	f
main	plugged/editorconfig-vim/tests/spec/plugin_tests/test_files/4_space.py	/^def main():$/;"	f
main	plugged/nova-vim/package.json	/^  "main": "colors\/nova.vim",$/;"	s
main_loop	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def main_loop(self, stdout):$/;"	m	class:Child
main_syntax	plugged/vim-javascript-syntax/syntax/javascript.vim	/^	let main_syntax = 'javascript'$/;"	v
make_iter	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^        def make_iter(self=self):$/;"	f	member:OrderedDict.iteritems	file:
make_iter	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^        def make_iter(self=self):$/;"	f	member:OrderedDict.itervalues	file:
maker.filter_output	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^    function! maker.filter_output(lines, context) abort$/;"	f
maker.postprocess	plugged/neomake/autoload/neomake/makers/ft/css.vim	/^    function! maker.postprocess(entry) abort$/;"	f
maker.process_output	plugged/neomake/autoload/neomake/makers/ft/neomake_tests.vim	/^    function! maker.process_output(...) abort$/;"	f
maker.supports_stdin	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^    function! maker.supports_stdin(jobinfo) abort$/;"	f
man	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^man:$/;"	t
man_pages	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^man_pages = [$/;"	v
mangled_name	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def mangled_name(self):$/;"	m	class:Cursor
mangled_name	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def mangled_name(self):$/;"	m	class:Cursor
manual_completion_begin	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def manual_completion_begin(self, context):$/;"	m	class:DeopleteHandlers
map	plugged/vdebug/pythonx/vdebug/util.py	/^    def map(self):$/;"	m	class:Keymapper
map	plugged/vim-airline/t/themes.vim	/^    let map = airline#themes#generate_color_map($/;"	v
mapleader	plugged/neomake/tests/vim/vimrc	/^let mapleader=','$/;"	v
mark_as_closed	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def mark_as_closed(self):$/;"	m	class:Window
mark_as_last_child	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def mark_as_last_child(self):$/;"	m	class:ContextProperty
mark_as_stopped	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def mark_as_stopped(self):$/;"	m	class:StatusWindow
mark_as_stopped	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def mark_as_stopped(self):$/;"	m	class:Ui
mark_window_as_closed	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def mark_window_as_closed(self, window):$/;"	m	class:DebuggerInterface
mark_window_as_closed	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def mark_window_as_closed(self, name):$/;"	m	class:Ui
master_doc	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^master_doc = 'index'$/;"	v
matches_filename	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/ini.py	/^    def matches_filename(self, config_filename, glob):$/;"	m	class:EditorConfigParser
merge	plugged/nova-vim/package-lock.json	/^        "merge": "1.2.0"$/;"	s	object:dependencies.exec-sh.requires
merge	plugged/nova-vim/package-lock.json	/^    "merge": {$/;"	o	object:dependencies
merge_results	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def merge_results(self, context):$/;"	m	class:Deoplete
merge_results	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def merge_results(self, context):$/;"	m	class:Parent
message	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	o
message	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message
message	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.children.0
message	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.children.1
message	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	o
message	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	s	object:message
message	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	s	object:message.children.0
message	plugged/neomake/tests/fixtures/rust/cargo_error_without_span.json	/^ {"message":{"children":[],"code":null,"level":"error","message":"aborting due to 18 previous er/;"	o
message	plugged/neomake/tests/fixtures/rust/cargo_error_without_span.json	/^ {"message":{"children":[],"code":null,"level":"error","message":"aborting due to 18 previous er/;"	s	object:message
message	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	o
message	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	s	object:message
messages	plugged/vdebug/rubylib/vdebug.rb	/^  def messages$/;"	f	class:Vdebug
minimatch	plugged/nova-vim/package-lock.json	/^        "minimatch": "3.0.4",$/;"	s	object:dependencies.glob.requires
minimatch	plugged/nova-vim/package-lock.json	/^    "minimatch": {$/;"	o	object:dependencies
minimist	plugged/nova-vim/package-lock.json	/^        "minimist": "0.0.8"$/;"	s	object:dependencies.mkdirp.requires
minimist	plugged/nova-vim/package-lock.json	/^        "minimist": "1.2.0"$/;"	s	object:dependencies.watch.requires
minimist	plugged/nova-vim/package-lock.json	/^        "minimist": {$/;"	o	object:dependencies.watch.dependencies
minimist	plugged/nova-vim/package-lock.json	/^    "minimist": {$/;"	o	object:dependencies
mkdirp	plugged/nova-vim/package-lock.json	/^        "mkdirp": "0.5.1"$/;"	s	object:dependencies.write.requires
mkdirp	plugged/nova-vim/package-lock.json	/^        "mkdirp": "0.5.1",$/;"	s	object:dependencies.eslint.requires
mkdirp	plugged/nova-vim/package-lock.json	/^    "mkdirp": {$/;"	o	object:dependencies
ms	plugged/nova-vim/package-lock.json	/^        "ms": "2.0.0"$/;"	s	object:dependencies.debug.requires
ms	plugged/nova-vim/package-lock.json	/^    "ms": {$/;"	o	object:dependencies
multiple_cursors#debug	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#debug()$/;"	f
multiple_cursors#find	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#find(start, end, pattern)$/;"	f
multiple_cursors#get_latency_debug_file	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#get_latency_debug_file()$/;"	f
multiple_cursors#new	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#new(mode, word_boundary)$/;"	f
multiple_cursors#prev	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#prev()$/;"	f
multiple_cursors#quit	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#quit()$/;"	f
multiple_cursors#select_all	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#select_all(mode, word_boundary)$/;"	f
multiple_cursors#skip	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#skip()$/;"	f
mute-stream	plugged/nova-vim/package-lock.json	/^        "mute-stream": "0.0.5"$/;"	s	object:dependencies.readline2.requires
mute-stream	plugged/nova-vim/package-lock.json	/^    "mute-stream": {$/;"	o	object:dependencies
n	plugged/vim-startify/autoload/startify.vim	/^  nnoremap <buffer><expr> n ' j'[v:searchforward].'n'$/;"	m
name	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def name(self):$/;"	m	class:BaseEnumeration
name	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def name(self):$/;"	m	class:File
name	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def name(self):$/;"	m	class:RefQualifierKind
name	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def name(self):$/;"	m	class:StorageClass
name	plugged/deoplete-clang/rplugin/python3/deoplete/clang/examples/cindex/cindex-includes.py	/^    def name(f):$/;"	f	function:main	file:
name	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def name(self):$/;"	m	class:BaseEnumeration
name	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def name(self):$/;"	m	class:File
name	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def name(self):$/;"	m	class:RefQualifierKind
name	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def name(self):$/;"	m	class:StorageClass
name	plugged/deoplete-clang/tests/clang/examples/cindex/cindex-includes.py	/^    def name(f):$/;"	f	function:main	file:
name	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:target
name	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	s	object:target
name	plugged/neomake/tests/fixtures/rust/cargo_error_without_span.json	/^ {"message":{"children":[],"code":null,"level":"error","message":"aborting due to 18 previous er/;"	s	object:target
name	plugged/neomake/tests/fixtures/rust/cargo_info.json	/^{"features":["default"],"filenames":["\/home\/jelte\/fun\/derive_more\/target\/debug\/deps\/libu/;"	s	object:target
name	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	s	object:target
name	plugged/nova-vim/package-lock.json	/^  "name": "nova-vim",$/;"	s
name	plugged/nova-vim/package.json	/^  "name": "nova-vim",$/;"	s
name	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    name = "WINDOW"$/;"	v	class:Window
name	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    name = "DebuggerBreakpoints"$/;"	v	class:BreakpointWindow
name	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    name = "DebuggerLog"$/;"	v	class:LogWindow
name	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    name = "DebuggerStack"$/;"	v	class:StackWindow
name	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    name = "DebuggerStatus"$/;"	v	class:StatusWindow
name	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    name = "DebuggerTrace"$/;"	v	class:TraceWindow
name	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    name = "DebuggerWatch"$/;"	v	class:WatchWindow
name	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    name = "WINDOW"$/;"	v	class:Window
names	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def names(self):$/;"	m	class:ContextNamesResponse
natural-compare	plugged/nova-vim/package-lock.json	/^        "natural-compare": "1.4.0",$/;"	s	object:dependencies.eslint.requires
natural-compare	plugged/nova-vim/package-lock.json	/^    "natural-compare": {$/;"	o	object:dependencies
neocomplcache#sources#snippets_complete#define	plugged/neosnippet.vim/autoload/neocomplcache/sources/snippets_complete.vim	/^function! neocomplcache#sources#snippets_complete#define() abort$/;"	f
neocomplete#sources#neosnippet#define	plugged/neosnippet.vim/autoload/neocomplete/sources/neosnippet.vim	/^function! neocomplete#sources#neosnippet#define() abort$/;"	f
neomake	plugged/neomake/plugin/neomake.vim	/^            augroup neomake$/;"	a
neomake	plugged/neomake/plugin/neomake.vim	/^    augroup neomake$/;"	a
neomake#CancelAllMakes	plugged/neomake/autoload/neomake.vim	/^function! neomake#CancelAllMakes(...) abort$/;"	f
neomake#CancelJob	plugged/neomake/autoload/neomake.vim	/^function! neomake#CancelJob(job_id, ...) abort$/;"	f
neomake#CancelJobs	plugged/neomake/autoload/neomake.vim	/^function! neomake#CancelJobs(bang) abort$/;"	f
neomake#CancelMake	plugged/neomake/autoload/neomake.vim	/^function! neomake#CancelMake(make_id, ...) abort$/;"	f
neomake#CursorMoved	plugged/neomake/autoload/neomake.vim	/^function! neomake#CursorMoved() abort$/;"	f
neomake#CursorMovedDelayed	plugged/neomake/autoload/neomake.vim	/^function! neomake#CursorMovedDelayed() abort$/;"	f
neomake#DisplayInfo	plugged/neomake/autoload/neomake.vim	/^function! neomake#DisplayInfo(...) abort$/;"	f
neomake#EchoCurrentError	plugged/neomake/autoload/neomake.vim	/^function! neomake#EchoCurrentError(...) abort$/;"	f
neomake#GetCurrentErrorMsg	plugged/neomake/autoload/neomake.vim	/^function! neomake#GetCurrentErrorMsg() abort$/;"	f
neomake#GetEnabledMakers	plugged/neomake/autoload/neomake.vim	/^function! neomake#GetEnabledMakers(...) abort$/;"	f
neomake#GetJob	plugged/neomake/autoload/neomake.vim	/^function! neomake#GetJob(job_id) abort$/;"	f
neomake#GetJobs	plugged/neomake/autoload/neomake.vim	/^function! neomake#GetJobs(...) abort$/;"	f
neomake#GetMakeOptions	plugged/neomake/autoload/neomake.vim	/^    function! neomake#GetMakeOptions(...) abort$/;"	f
neomake#GetMaker	plugged/neomake/autoload/neomake.vim	/^function! neomake#GetMaker(name_or_maker, ...) abort$/;"	f
neomake#GetMakers	plugged/neomake/autoload/neomake.vim	/^function! neomake#GetMakers(ft) abort$/;"	f
neomake#GetProjectMakers	plugged/neomake/autoload/neomake.vim	/^function! neomake#GetProjectMakers() abort$/;"	f
neomake#GetStatus	plugged/neomake/autoload/neomake.vim	/^function! neomake#GetStatus() abort$/;"	f
neomake#ListJobs	plugged/neomake/autoload/neomake.vim	/^function! neomake#ListJobs() abort$/;"	f
neomake#Make	plugged/neomake/autoload/neomake.vim	/^function! neomake#Make(file_mode_or_options, ...) abort$/;"	f
neomake#Sh	plugged/neomake/autoload/neomake.vim	/^function! neomake#Sh(sh_command, ...) abort$/;"	f
neomake#ShCommand	plugged/neomake/autoload/neomake.vim	/^function! neomake#ShCommand(bang, sh_command, ...) abort$/;"	f
neomake#VimLeave	plugged/neomake/autoload/neomake.vim	/^function! neomake#VimLeave() abort$/;"	f
neomake#_get_s	plugged/neomake/autoload/neomake.vim	/^function! neomake#_get_s() abort$/;"	f
neomake#cmd#complete_jobs	plugged/neomake/autoload/neomake/cmd.vim	/^function! neomake#cmd#complete_jobs(...) abort$/;"	f
neomake#cmd#complete_makers	plugged/neomake/autoload/neomake/cmd.vim	/^function! neomake#cmd#complete_makers(ArgLead, CmdLine, ...) abort$/;"	f
neomake#compat#get_argv	plugged/neomake/autoload/neomake/compat.vim	/^    function! neomake#compat#get_argv(exe, args, args_is_list) abort$/;"	f
neomake#compat#get_mode	plugged/neomake/autoload/neomake/compat.vim	/^    function! neomake#compat#get_mode() abort$/;"	f
neomake#compat#getbufvar	plugged/neomake/autoload/neomake/compat.vim	/^    function! neomake#compat#getbufvar(buf, key, def) abort$/;"	f
neomake#compat#gettabwinvar	plugged/neomake/autoload/neomake/compat.vim	/^    function! neomake#compat#gettabwinvar(t, w, v, d) abort$/;"	f
neomake#compat#globpath_list	plugged/neomake/autoload/neomake/compat.vim	/^function! neomake#compat#globpath_list(path, pattern, suf) abort$/;"	f
neomake#compat#in_completion	plugged/neomake/autoload/neomake/compat.vim	/^function! neomake#compat#in_completion() abort$/;"	f
neomake#compat#json_decode	plugged/neomake/autoload/neomake/compat.vim	/^      function! neomake#compat#json_decode(json) abort$/;"	f
neomake#compat#json_decode	plugged/neomake/autoload/neomake/compat.vim	/^    function! neomake#compat#json_decode(json) abort " {{{2$/;"	f
neomake#compat#json_false	plugged/neomake/autoload/neomake/compat.vim	/^    let neomake#compat#json_false = 0$/;"	v
neomake#compat#json_false	plugged/neomake/autoload/neomake/compat.vim	/^    let neomake#compat#json_false = v:false$/;"	v
neomake#compat#json_none	plugged/neomake/autoload/neomake/compat.vim	/^    let neomake#compat#json_none = []$/;"	v
neomake#compat#json_none	plugged/neomake/autoload/neomake/compat.vim	/^    let neomake#compat#json_none = v:none$/;"	v
neomake#compat#json_null	plugged/neomake/autoload/neomake/compat.vim	/^    let neomake#compat#json_null = [function('s:json_null')]$/;"	v
neomake#compat#json_null	plugged/neomake/autoload/neomake/compat.vim	/^    let neomake#compat#json_null = v:null$/;"	v
neomake#compat#json_true	plugged/neomake/autoload/neomake/compat.vim	/^    let neomake#compat#json_true = 1$/;"	v
neomake#compat#json_true	plugged/neomake/autoload/neomake/compat.vim	/^    let neomake#compat#json_true = v:true$/;"	v
neomake#compat#reltimefloat	plugged/neomake/autoload/neomake/compat.vim	/^    function! neomake#compat#reltimefloat() abort$/;"	f
neomake#compat#restore_prev_windows	plugged/neomake/autoload/neomake/compat.vim	/^    function! neomake#compat#restore_prev_windows() abort$/;"	f
neomake#compat#save_prev_windows	plugged/neomake/autoload/neomake/compat.vim	/^    function! neomake#compat#save_prev_windows() abort$/;"	f
neomake#compat#systemlist	plugged/neomake/autoload/neomake/compat.vim	/^function! neomake#compat#systemlist(cmd) abort$/;"	f
neomake#compat#uniq	plugged/neomake/autoload/neomake/compat.vim	/^    function! neomake#compat#uniq(l) abort$/;"	f
neomake#config#get	plugged/neomake/autoload/neomake/config.vim	/^function! neomake#config#get(name, ...) abort$/;"	f
neomake#config#get_with_source	plugged/neomake/autoload/neomake/config.vim	/^function! neomake#config#get_with_source(name, ...) abort$/;"	f
neomake#config#set	plugged/neomake/autoload/neomake/config.vim	/^function! neomake#config#set(name, value) abort$/;"	f
neomake#config#set_buffer	plugged/neomake/autoload/neomake/config.vim	/^function! neomake#config#set_buffer(bufnr, name, value) abort$/;"	f
neomake#config#set_dict	plugged/neomake/autoload/neomake/config.vim	/^function! neomake#config#set_dict(dict, name, value) abort$/;"	f
neomake#config#unset_dict	plugged/neomake/autoload/neomake/config.vim	/^function! neomake#config#unset_dict(dict, name) abort$/;"	f
neomake#configure#automake	plugged/neomake/autoload/neomake/configure.vim	/^function! neomake#configure#automake(...) abort$/;"	f
neomake#configure#automake_for_buffer	plugged/neomake/autoload/neomake/configure.vim	/^function! neomake#configure#automake_for_buffer(string_or_dict_config, ...) abort$/;"	f
neomake#configure#reset_automake	plugged/neomake/autoload/neomake/configure.vim	/^function! neomake#configure#reset_automake() abort$/;"	f
neomake#core#create_jobs	plugged/neomake/autoload/neomake/core.vim	/^function! neomake#core#create_jobs(options, makers) abort$/;"	f
neomake#debug#_get_info_lines	plugged/neomake/autoload/neomake/debug.vim	/^function! neomake#debug#_get_info_lines() abort$/;"	f
neomake#debug#display_info	plugged/neomake/autoload/neomake/debug.vim	/^function! neomake#debug#display_info(...) abort$/;"	f
neomake#debug#validate_maker	plugged/neomake/autoload/neomake/debug.vim	/^function! neomake#debug#validate_maker(maker) abort$/;"	f
neomake#has_async_support	plugged/neomake/autoload/neomake.vim	/^function! neomake#has_async_support() abort$/;"	f
neomake#highlights#AddHighlight	plugged/neomake/autoload/neomake/highlights.vim	/^function! neomake#highlights#AddHighlight(entry, type) abort$/;"	f
neomake#highlights#DefineHighlights	plugged/neomake/autoload/neomake/highlights.vim	/^function! neomake#highlights#DefineHighlights() abort$/;"	f
neomake#highlights#ResetFile	plugged/neomake/autoload/neomake/highlights.vim	/^function! neomake#highlights#ResetFile(buf) abort$/;"	f
neomake#highlights#ResetProject	plugged/neomake/autoload/neomake/highlights.vim	/^function! neomake#highlights#ResetProject(buf) abort$/;"	f
neomake#highlights#ShowHighlights	plugged/neomake/autoload/neomake/highlights.vim	/^    function! neomake#highlights#ShowHighlights() abort$/;"	f
neomake#highlights#_get	plugged/neomake/autoload/neomake/highlights.vim	/^function! neomake#highlights#_get() abort$/;"	f
neomake#log#debug	plugged/neomake/autoload/neomake/log.vim	/^function! neomake#log#debug(...) abort$/;"	f
neomake#log#debug_obj	plugged/neomake/autoload/neomake/log.vim	/^function! neomake#log#debug_obj(msg, obj) abort$/;"	f
neomake#log#error	plugged/neomake/autoload/neomake/log.vim	/^function! neomake#log#error(...) abort$/;"	f
neomake#log#exception	plugged/neomake/autoload/neomake/log.vim	/^function! neomake#log#exception(error, ...) abort$/;"	f
neomake#log#info	plugged/neomake/autoload/neomake/log.vim	/^function! neomake#log#info(...) abort$/;"	f
neomake#log#warning	plugged/neomake/autoload/neomake/log.vim	/^function! neomake#log#warning(...) abort$/;"	f
neomake#makers#cabal#cabal	plugged/neomake/autoload/neomake/makers/cabal.vim	/^function! neomake#makers#cabal#cabal() abort$/;"	f
neomake#makers#clippy#clippy	plugged/neomake/autoload/neomake/makers/clippy.vim	/^function! neomake#makers#clippy#clippy() abort$/;"	f
neomake#makers#ft#ada#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/ada.vim	/^function! neomake#makers#ft#ada#EnabledMakers() abort$/;"	f
neomake#makers#ft#ada#gcc	plugged/neomake/autoload/neomake/makers/ft/ada.vim	/^function! neomake#makers#ft#ada#gcc() abort$/;"	f
neomake#makers#ft#angular#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/angular.vim	/^function! neomake#makers#ft#angular#EnabledMakers() abort$/;"	f
neomake#makers#ft#angular#SupersetOf	plugged/neomake/autoload/neomake/makers/ft/angular.vim	/^function! neomake#makers#ft#angular#SupersetOf() abort$/;"	f
neomake#makers#ft#ansible#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/ansible.vim	/^function! neomake#makers#ft#ansible#EnabledMakers() abort$/;"	f
neomake#makers#ft#ansible#ansiblelint	plugged/neomake/autoload/neomake/makers/ft/ansible.vim	/^function! neomake#makers#ft#ansible#ansiblelint() abort$/;"	f
neomake#makers#ft#apiblueprint#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/apiblueprint.vim	/^function! neomake#makers#ft#apiblueprint#EnabledMakers() abort$/;"	f
neomake#makers#ft#apiblueprint#drafter	plugged/neomake/autoload/neomake/makers/ft/apiblueprint.vim	/^function! neomake#makers#ft#apiblueprint#drafter() abort$/;"	f
neomake#makers#ft#applescript#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/applescript.vim	/^function! neomake#makers#ft#applescript#EnabledMakers() abort$/;"	f
neomake#makers#ft#applescript#osacompile	plugged/neomake/autoload/neomake/makers/ft/applescript.vim	/^function! neomake#makers#ft#applescript#osacompile() abort$/;"	f
neomake#makers#ft#asciidoc#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/asciidoc.vim	/^function! neomake#makers#ft#asciidoc#EnabledMakers() abort$/;"	f
neomake#makers#ft#asciidoc#SupersetOf	plugged/neomake/autoload/neomake/makers/ft/asciidoc.vim	/^function! neomake#makers#ft#asciidoc#SupersetOf() abort$/;"	f
neomake#makers#ft#asciidoc#asciidoc	plugged/neomake/autoload/neomake/makers/ft/asciidoc.vim	/^function! neomake#makers#ft#asciidoc#asciidoc() abort$/;"	f
neomake#makers#ft#asciidoc#asciidoctor	plugged/neomake/autoload/neomake/makers/ft/asciidoc.vim	/^function! neomake#makers#ft#asciidoc#asciidoctor() abort$/;"	f
neomake#makers#ft#bib#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/bib.vim	/^function! neomake#makers#ft#bib#EnabledMakers() abort$/;"	f
neomake#makers#ft#bib#bibtex	plugged/neomake/autoload/neomake/makers/ft/bib.vim	/^function! neomake#makers#ft#bib#bibtex() abort$/;"	f
neomake#makers#ft#c#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/c.vim	/^function! neomake#makers#ft#c#EnabledMakers() abort$/;"	f
neomake#makers#ft#c#checkpatch	plugged/neomake/autoload/neomake/makers/ft/c.vim	/^function! neomake#makers#ft#c#checkpatch() abort$/;"	f
neomake#makers#ft#c#clang	plugged/neomake/autoload/neomake/makers/ft/c.vim	/^function! neomake#makers#ft#c#clang() abort$/;"	f
neomake#makers#ft#c#clangcheck	plugged/neomake/autoload/neomake/makers/ft/c.vim	/^function! neomake#makers#ft#c#clangcheck() abort$/;"	f
neomake#makers#ft#c#clangtidy	plugged/neomake/autoload/neomake/makers/ft/c.vim	/^function! neomake#makers#ft#c#clangtidy() abort$/;"	f
neomake#makers#ft#c#cppcheck	plugged/neomake/autoload/neomake/makers/ft/c.vim	/^function! neomake#makers#ft#c#cppcheck() abort$/;"	f
neomake#makers#ft#c#gcc	plugged/neomake/autoload/neomake/makers/ft/c.vim	/^function! neomake#makers#ft#c#gcc() abort$/;"	f
neomake#makers#ft#cf3#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/cf3.vim	/^function! neomake#makers#ft#cf3#EnabledMakers() abort$/;"	f
neomake#makers#ft#cf3#cfpromises	plugged/neomake/autoload/neomake/makers/ft/cf3.vim	/^function! neomake#makers#ft#cf3#cfpromises() abort$/;"	f
neomake#makers#ft#chef#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/chef.vim	/^function! neomake#makers#ft#chef#EnabledMakers() abort$/;"	f
neomake#makers#ft#chef#SupersetOf	plugged/neomake/autoload/neomake/makers/ft/chef.vim	/^function! neomake#makers#ft#chef#SupersetOf() abort$/;"	f
neomake#makers#ft#chef#cookstyle	plugged/neomake/autoload/neomake/makers/ft/chef.vim	/^function! neomake#makers#ft#chef#cookstyle() abort$/;"	f
neomake#makers#ft#chef#foodcritic	plugged/neomake/autoload/neomake/makers/ft/chef.vim	/^function! neomake#makers#ft#chef#foodcritic() abort$/;"	f
neomake#makers#ft#coffee#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/coffee.vim	/^function! neomake#makers#ft#coffee#EnabledMakers() abort$/;"	f
neomake#makers#ft#coffee#coffeelint	plugged/neomake/autoload/neomake/makers/ft/coffee.vim	/^function! neomake#makers#ft#coffee#coffeelint() abort$/;"	f
neomake#makers#ft#cpp#CpplintEntryProcess	plugged/neomake/autoload/neomake/makers/ft/cpp.vim	/^function! neomake#makers#ft#cpp#CpplintEntryProcess(entry) abort$/;"	f
neomake#makers#ft#cpp#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/cpp.vim	/^function! neomake#makers#ft#cpp#EnabledMakers() abort$/;"	f
neomake#makers#ft#cpp#clang	plugged/neomake/autoload/neomake/makers/ft/cpp.vim	/^function! neomake#makers#ft#cpp#clang() abort$/;"	f
neomake#makers#ft#cpp#clangcheck	plugged/neomake/autoload/neomake/makers/ft/cpp.vim	/^function! neomake#makers#ft#cpp#clangcheck() abort$/;"	f
neomake#makers#ft#cpp#clangtidy	plugged/neomake/autoload/neomake/makers/ft/cpp.vim	/^function! neomake#makers#ft#cpp#clangtidy() abort$/;"	f
neomake#makers#ft#cpp#cppcheck	plugged/neomake/autoload/neomake/makers/ft/cpp.vim	/^function! neomake#makers#ft#cpp#cppcheck() abort$/;"	f
neomake#makers#ft#cpp#cpplint	plugged/neomake/autoload/neomake/makers/ft/cpp.vim	/^function! neomake#makers#ft#cpp#cpplint() abort$/;"	f
neomake#makers#ft#cpp#gcc	plugged/neomake/autoload/neomake/makers/ft/cpp.vim	/^function! neomake#makers#ft#cpp#gcc() abort$/;"	f
neomake#makers#ft#crystal#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/crystal.vim	/^function! neomake#makers#ft#crystal#EnabledMakers() abort$/;"	f
neomake#makers#ft#crystal#crystal	plugged/neomake/autoload/neomake/makers/ft/crystal.vim	/^function! neomake#makers#ft#crystal#crystal() abort$/;"	f
neomake#makers#ft#cs#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/cs.vim	/^function! neomake#makers#ft#cs#EnabledMakers() abort$/;"	f
neomake#makers#ft#cs#mcs	plugged/neomake/autoload/neomake/makers/ft/cs.vim	/^function! neomake#makers#ft#cs#mcs() abort$/;"	f
neomake#makers#ft#cs#msbuild	plugged/neomake/autoload/neomake/makers/ft/cs.vim	/^function! neomake#makers#ft#cs#msbuild() abort$/;"	f
neomake#makers#ft#css#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/css.vim	/^function! neomake#makers#ft#css#EnabledMakers() abort$/;"	f
neomake#makers#ft#css#csslint	plugged/neomake/autoload/neomake/makers/ft/css.vim	/^function! neomake#makers#ft#css#csslint() abort$/;"	f
neomake#makers#ft#css#stylelint	plugged/neomake/autoload/neomake/makers/ft/css.vim	/^function! neomake#makers#ft#css#stylelint() abort$/;"	f
neomake#makers#ft#cuda#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/cuda.vim	/^function! neomake#makers#ft#cuda#EnabledMakers() abort$/;"	f
neomake#makers#ft#cuda#nvcc	plugged/neomake/autoload/neomake/makers/ft/cuda.vim	/^function! neomake#makers#ft#cuda#nvcc() abort$/;"	f
neomake#makers#ft#d#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/d.vim	/^function! neomake#makers#ft#d#EnabledMakers() abort$/;"	f
neomake#makers#ft#d#dmd	plugged/neomake/autoload/neomake/makers/ft/d.vim	/^function! neomake#makers#ft#d#dmd() abort$/;"	f
neomake#makers#ft#d#gdmd	plugged/neomake/autoload/neomake/makers/ft/d.vim	/^function! neomake#makers#ft#d#gdmd() abort$/;"	f
neomake#makers#ft#d#ldmd	plugged/neomake/autoload/neomake/makers/ft/d.vim	/^function! neomake#makers#ft#d#ldmd() abort$/;"	f
neomake#makers#ft#elixir#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/elixir.vim	/^function! neomake#makers#ft#elixir#EnabledMakers() abort$/;"	f
neomake#makers#ft#elixir#PostprocessCredo	plugged/neomake/autoload/neomake/makers/ft/elixir.vim	/^function! neomake#makers#ft#elixir#PostprocessCredo(entry) abort$/;"	f
neomake#makers#ft#elixir#PostprocessEnforceMaxBufferLine	plugged/neomake/autoload/neomake/makers/ft/elixir.vim	/^function! neomake#makers#ft#elixir#PostprocessEnforceMaxBufferLine(entry) abort$/;"	f
neomake#makers#ft#elixir#credo	plugged/neomake/autoload/neomake/makers/ft/elixir.vim	/^function! neomake#makers#ft#elixir#credo() abort$/;"	f
neomake#makers#ft#elixir#dogma	plugged/neomake/autoload/neomake/makers/ft/elixir.vim	/^function! neomake#makers#ft#elixir#dogma() abort$/;"	f
neomake#makers#ft#elixir#elixir	plugged/neomake/autoload/neomake/makers/ft/elixir.vim	/^function! neomake#makers#ft#elixir#elixir() abort$/;"	f
neomake#makers#ft#elixir#mix	plugged/neomake/autoload/neomake/makers/ft/elixir.vim	/^function! neomake#makers#ft#elixir#mix() abort$/;"	f
neomake#makers#ft#elm#ElmMakeProcessOutput	plugged/neomake/autoload/neomake/makers/ft/elm.vim	/^function! neomake#makers#ft#elm#ElmMakeProcessOutput(context) abort$/;"	f
neomake#makers#ft#elm#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/elm.vim	/^function! neomake#makers#ft#elm#EnabledMakers() abort$/;"	f
neomake#makers#ft#elm#elmMake	plugged/neomake/autoload/neomake/makers/ft/elm.vim	/^function! neomake#makers#ft#elm#elmMake() abort$/;"	f
neomake#makers#ft#erlang#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/erlang.vim	/^function! neomake#makers#ft#erlang#EnabledMakers() abort$/;"	f
neomake#makers#ft#erlang#erlc	plugged/neomake/autoload/neomake/makers/ft/erlang.vim	/^function! neomake#makers#ft#erlang#erlc() abort$/;"	f
neomake#makers#ft#fish#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/fish.vim	/^function! neomake#makers#ft#fish#EnabledMakers() abort$/;"	f
neomake#makers#ft#fish#fish	plugged/neomake/autoload/neomake/makers/ft/fish.vim	/^function! neomake#makers#ft#fish#fish() abort$/;"	f
neomake#makers#ft#fortran#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/fortran.vim	/^function! neomake#makers#ft#fortran#EnabledMakers() abort$/;"	f
neomake#makers#ft#fortran#gfortran	plugged/neomake/autoload/neomake/makers/ft/fortran.vim	/^function! neomake#makers#ft#fortran#gfortran() abort$/;"	f
neomake#makers#ft#fortran#ifort	plugged/neomake/autoload/neomake/makers/ft/fortran.vim	/^function! neomake#makers#ft#fortran#ifort() abort$/;"	f
neomake#makers#ft#go#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/go.vim	/^function! neomake#makers#ft#go#EnabledMakers() abort$/;"	f
neomake#makers#ft#go#go	plugged/neomake/autoload/neomake/makers/ft/go.vim	/^function! neomake#makers#ft#go#go() abort$/;"	f
neomake#makers#ft#go#golint	plugged/neomake/autoload/neomake/makers/ft/go.vim	/^function! neomake#makers#ft#go#golint() abort$/;"	f
neomake#makers#ft#go#gometalinter	plugged/neomake/autoload/neomake/makers/ft/go.vim	/^function! neomake#makers#ft#go#gometalinter() abort$/;"	f
neomake#makers#ft#go#govet	plugged/neomake/autoload/neomake/makers/ft/go.vim	/^function! neomake#makers#ft#go#govet() abort$/;"	f
neomake#makers#ft#haml#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/haml.vim	/^function! neomake#makers#ft#haml#EnabledMakers() abort$/;"	f
neomake#makers#ft#haml#hamllint	plugged/neomake/autoload/neomake/makers/ft/haml.vim	/^function! neomake#makers#ft#haml#hamllint() abort$/;"	f
neomake#makers#ft#haskell#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/haskell.vim	/^function! neomake#makers#ft#haskell#EnabledMakers() abort$/;"	f
neomake#makers#ft#haskell#HlintEntryProcess	plugged/neomake/autoload/neomake/makers/ft/haskell.vim	/^function! neomake#makers#ft#haskell#HlintEntryProcess(entry) abort$/;"	f
neomake#makers#ft#haskell#ghcmod	plugged/neomake/autoload/neomake/makers/ft/haskell.vim	/^function! neomake#makers#ft#haskell#ghcmod() abort$/;"	f
neomake#makers#ft#haskell#hdevtools	plugged/neomake/autoload/neomake/makers/ft/haskell.vim	/^function! neomake#makers#ft#haskell#hdevtools() abort$/;"	f
neomake#makers#ft#haskell#hlint	plugged/neomake/autoload/neomake/makers/ft/haskell.vim	/^function! neomake#makers#ft#haskell#hlint() abort$/;"	f
neomake#makers#ft#haskell#liquid	plugged/neomake/autoload/neomake/makers/ft/haskell.vim	/^function! neomake#makers#ft#haskell#liquid() abort$/;"	f
neomake#makers#ft#help#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^function! neomake#makers#ft#help#EnabledMakers() abort$/;"	f
neomake#makers#ft#help#proselint	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^function! neomake#makers#ft#help#proselint() abort$/;"	f
neomake#makers#ft#help#vimhelplint	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^function! neomake#makers#ft#help#vimhelplint() abort$/;"	f
neomake#makers#ft#help#writegood	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^function! neomake#makers#ft#help#writegood() abort$/;"	f
neomake#makers#ft#html#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/html.vim	/^function! neomake#makers#ft#html#EnabledMakers() abort$/;"	f
neomake#makers#ft#html#htmlhint	plugged/neomake/autoload/neomake/makers/ft/html.vim	/^function! neomake#makers#ft#html#htmlhint() abort$/;"	f
neomake#makers#ft#html#tidy	plugged/neomake/autoload/neomake/makers/ft/html.vim	/^function! neomake#makers#ft#html#tidy() abort$/;"	f
neomake#makers#ft#idris#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/idris.vim	/^function! neomake#makers#ft#idris#EnabledMakers() abort$/;"	f
neomake#makers#ft#idris#Postprocess	plugged/neomake/autoload/neomake/makers/ft/idris.vim	/^function! neomake#makers#ft#idris#Postprocess(entry) abort$/;"	f
neomake#makers#ft#idris#idris	plugged/neomake/autoload/neomake/makers/ft/idris.vim	/^function! neomake#makers#ft#idris#idris() abort$/;"	f
neomake#makers#ft#jade#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/jade.vim	/^function! neomake#makers#ft#jade#EnabledMakers() abort$/;"	f
neomake#makers#ft#jade#jadelint	plugged/neomake/autoload/neomake/makers/ft/jade.vim	/^function! neomake#makers#ft#jade#jadelint() abort$/;"	f
neomake#makers#ft#jasmine#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/jasmine.vim	/^function! neomake#makers#ft#jasmine#EnabledMakers() abort$/;"	f
neomake#makers#ft#jasmine#SupersetOf	plugged/neomake/autoload/neomake/makers/ft/jasmine.vim	/^function! neomake#makers#ft#jasmine#SupersetOf() abort$/;"	f
neomake#makers#ft#java#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! neomake#makers#ft#java#EnabledMakers() abort$/;"	f
neomake#makers#ft#java#checkstyle	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! neomake#makers#ft#java#checkstyle() abort$/;"	f
neomake#makers#ft#java#javac	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! neomake#makers#ft#java#javac() abort$/;"	f
neomake#makers#ft#javascript#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#EnabledMakers() abort$/;"	f
neomake#makers#ft#javascript#FlowProcess	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#FlowProcess(entry) abort$/;"	f
neomake#makers#ft#javascript#eslint	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#eslint() abort$/;"	f
neomake#makers#ft#javascript#eslint_d	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#eslint_d() abort$/;"	f
neomake#makers#ft#javascript#flow	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#flow() abort$/;"	f
neomake#makers#ft#javascript#gjslint	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#gjslint() abort$/;"	f
neomake#makers#ft#javascript#jscs	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#jscs() abort$/;"	f
neomake#makers#ft#javascript#jshint	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#jshint() abort$/;"	f
neomake#makers#ft#javascript#rjsx	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#rjsx() abort$/;"	f
neomake#makers#ft#javascript#semistandard	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#semistandard() abort$/;"	f
neomake#makers#ft#javascript#standard	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#standard() abort$/;"	f
neomake#makers#ft#javascript#stylelint	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#stylelint() abort$/;"	f
neomake#makers#ft#javascript#xo	plugged/neomake/autoload/neomake/makers/ft/javascript.vim	/^function! neomake#makers#ft#javascript#xo() abort$/;"	f
neomake#makers#ft#json#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/json.vim	/^function! neomake#makers#ft#json#EnabledMakers() abort$/;"	f
neomake#makers#ft#json#eslint	plugged/neomake/autoload/neomake/makers/ft/json.vim	/^function! neomake#makers#ft#json#eslint() abort$/;"	f
neomake#makers#ft#json#eslint_d	plugged/neomake/autoload/neomake/makers/ft/json.vim	/^function! neomake#makers#ft#json#eslint_d() abort$/;"	f
neomake#makers#ft#json#jsonlint	plugged/neomake/autoload/neomake/makers/ft/json.vim	/^function! neomake#makers#ft#json#jsonlint() abort$/;"	f
neomake#makers#ft#json#jsonlintpy	plugged/neomake/autoload/neomake/makers/ft/json.vim	/^function! neomake#makers#ft#json#jsonlintpy() abort$/;"	f
neomake#makers#ft#jsx#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/jsx.vim	/^function! neomake#makers#ft#jsx#EnabledMakers() abort$/;"	f
neomake#makers#ft#jsx#SupersetOf	plugged/neomake/autoload/neomake/makers/ft/jsx.vim	/^function! neomake#makers#ft#jsx#SupersetOf() abort$/;"	f
neomake#makers#ft#jsx#jsxhint	plugged/neomake/autoload/neomake/makers/ft/jsx.vim	/^function! neomake#makers#ft#jsx#jsxhint() abort$/;"	f
neomake#makers#ft#jsx#stylelint	plugged/neomake/autoload/neomake/makers/ft/jsx.vim	/^function! neomake#makers#ft#jsx#stylelint() abort$/;"	f
neomake#makers#ft#julia#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/julia.vim	/^function! neomake#makers#ft#julia#EnabledMakers() abort$/;"	f
neomake#makers#ft#julia#lint	plugged/neomake/autoload/neomake/makers/ft/julia.vim	/^function! neomake#makers#ft#julia#lint() abort$/;"	f
neomake#makers#ft#less#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/less.vim	/^function! neomake#makers#ft#less#EnabledMakers() abort$/;"	f
neomake#makers#ft#less#lessc	plugged/neomake/autoload/neomake/makers/ft/less.vim	/^function! neomake#makers#ft#less#lessc() abort$/;"	f
neomake#makers#ft#less#stylelint	plugged/neomake/autoload/neomake/makers/ft/less.vim	/^function! neomake#makers#ft#less#stylelint() abort$/;"	f
neomake#makers#ft#lex#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/lex.vim	/^function! neomake#makers#ft#lex#EnabledMakers() abort$/;"	f
neomake#makers#ft#lex#flex	plugged/neomake/autoload/neomake/makers/ft/lex.vim	/^function! neomake#makers#ft#lex#flex() abort$/;"	f
neomake#makers#ft#lua#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/lua.vim	/^function! neomake#makers#ft#lua#EnabledMakers() abort$/;"	f
neomake#makers#ft#lua#PostprocessLuacheck	plugged/neomake/autoload/neomake/makers/ft/lua.vim	/^function! neomake#makers#ft#lua#PostprocessLuacheck(entry) abort$/;"	f
neomake#makers#ft#lua#luac	plugged/neomake/autoload/neomake/makers/ft/lua.vim	/^function! neomake#makers#ft#lua#luac() abort$/;"	f
neomake#makers#ft#lua#luacheck	plugged/neomake/autoload/neomake/makers/ft/lua.vim	/^function! neomake#makers#ft#lua#luacheck() abort$/;"	f
neomake#makers#ft#mail#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/mail.vim	/^function! neomake#makers#ft#mail#EnabledMakers() abort$/;"	f
neomake#makers#ft#mail#proselint	plugged/neomake/autoload/neomake/makers/ft/mail.vim	/^function! neomake#makers#ft#mail#proselint() abort$/;"	f
neomake#makers#ft#markdown#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/markdown.vim	/^function! neomake#makers#ft#markdown#EnabledMakers() abort$/;"	f
neomake#makers#ft#markdown#SupersetOf	plugged/neomake/autoload/neomake/makers/ft/markdown.vim	/^function! neomake#makers#ft#markdown#SupersetOf() abort$/;"	f
neomake#makers#ft#markdown#alex	plugged/neomake/autoload/neomake/makers/ft/markdown.vim	/^function! neomake#makers#ft#markdown#alex() abort$/;"	f
neomake#makers#ft#markdown#markdownlint	plugged/neomake/autoload/neomake/makers/ft/markdown.vim	/^function! neomake#makers#ft#markdown#markdownlint() abort$/;"	f
neomake#makers#ft#markdown#mdl	plugged/neomake/autoload/neomake/makers/ft/markdown.vim	/^function! neomake#makers#ft#markdown#mdl() abort$/;"	f
neomake#makers#ft#mlint#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/mlint.vim	/^function! neomake#makers#ft#mlint#EnabledMakers() abort$/;"	f
neomake#makers#ft#mlint#mlint	plugged/neomake/autoload/neomake/makers/ft/mlint.vim	/^function! neomake#makers#ft#mlint#mlint() abort$/;"	f
neomake#makers#ft#moon#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/moon.vim	/^function! neomake#makers#ft#moon#EnabledMakers() abort$/;"	f
neomake#makers#ft#moon#moonc	plugged/neomake/autoload/neomake/makers/ft/moon.vim	/^function! neomake#makers#ft#moon#moonc() abort$/;"	f
neomake#makers#ft#neomake_tests#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/neomake_tests.vim	/^function! neomake#makers#ft#neomake_tests#EnabledMakers() abort$/;"	f
neomake#makers#ft#neomake_tests#echo_args	plugged/neomake/autoload/neomake/makers/ft/neomake_tests.vim	/^function! neomake#makers#ft#neomake_tests#echo_args() abort$/;"	f
neomake#makers#ft#neomake_tests#echo_maker	plugged/neomake/autoload/neomake/makers/ft/neomake_tests.vim	/^function! neomake#makers#ft#neomake_tests#echo_maker() abort$/;"	f
neomake#makers#ft#neomake_tests#error_maker	plugged/neomake/autoload/neomake/makers/ft/neomake_tests.vim	/^function! neomake#makers#ft#neomake_tests#error_maker() abort$/;"	f
neomake#makers#ft#neomake_tests#maker_with_nonstring_exe	plugged/neomake/autoload/neomake/makers/ft/neomake_tests.vim	/^function! neomake#makers#ft#neomake_tests#maker_with_nonstring_exe() abort$/;"	f
neomake#makers#ft#neomake_tests#maker_without_exe	plugged/neomake/autoload/neomake/makers/ft/neomake_tests.vim	/^function! neomake#makers#ft#neomake_tests#maker_without_exe() abort$/;"	f
neomake#makers#ft#neomake_tests#process_output_error	plugged/neomake/autoload/neomake/makers/ft/neomake_tests.vim	/^function! neomake#makers#ft#neomake_tests#process_output_error() abort$/;"	f
neomake#makers#ft#neomake_tests#true	plugged/neomake/autoload/neomake/makers/ft/neomake_tests.vim	/^function! neomake#makers#ft#neomake_tests#true() abort$/;"	f
neomake#makers#ft#nim#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/nim.vim	/^function! neomake#makers#ft#nim#EnabledMakers() abort$/;"	f
neomake#makers#ft#nim#nim	plugged/neomake/autoload/neomake/makers/ft/nim.vim	/^function! neomake#makers#ft#nim#nim() abort$/;"	f
neomake#makers#ft#nix#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/nix.vim	/^function! neomake#makers#ft#nix#EnabledMakers() abort$/;"	f
neomake#makers#ft#nix#nix_instantiate	plugged/neomake/autoload/neomake/makers/ft/nix.vim	/^function! neomake#makers#ft#nix#nix_instantiate() abort$/;"	f
neomake#makers#ft#node#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/node.vim	/^function! neomake#makers#ft#node#EnabledMakers() abort$/;"	f
neomake#makers#ft#node#SupersetOf	plugged/neomake/autoload/neomake/makers/ft/node.vim	/^function! neomake#makers#ft#node#SupersetOf() abort$/;"	f
neomake#makers#ft#objc#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/objc.vim	/^function! neomake#makers#ft#objc#EnabledMakers() abort$/;"	f
neomake#makers#ft#objc#clang	plugged/neomake/autoload/neomake/makers/ft/objc.vim	/^function! neomake#makers#ft#objc#clang() abort$/;"	f
neomake#makers#ft#objc#clangcheck	plugged/neomake/autoload/neomake/makers/ft/objc.vim	/^function! neomake#makers#ft#objc#clangcheck() abort$/;"	f
neomake#makers#ft#objc#clangtidy	plugged/neomake/autoload/neomake/makers/ft/objc.vim	/^function! neomake#makers#ft#objc#clangtidy() abort$/;"	f
neomake#makers#ft#pandoc#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/pandoc.vim	/^function! neomake#makers#ft#pandoc#EnabledMakers() abort$/;"	f
neomake#makers#ft#pandoc#SupersetOf	plugged/neomake/autoload/neomake/makers/ft/pandoc.vim	/^function! neomake#makers#ft#pandoc#SupersetOf() abort$/;"	f
neomake#makers#ft#perl#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/perl.vim	/^function! neomake#makers#ft#perl#EnabledMakers() abort$/;"	f
neomake#makers#ft#perl#PerlEntryProcess	plugged/neomake/autoload/neomake/makers/ft/perl.vim	/^function! neomake#makers#ft#perl#PerlEntryProcess(entry) abort$/;"	f
neomake#makers#ft#perl#perl	plugged/neomake/autoload/neomake/makers/ft/perl.vim	/^function! neomake#makers#ft#perl#perl() abort$/;"	f
neomake#makers#ft#perl#perlcritic	plugged/neomake/autoload/neomake/makers/ft/perl.vim	/^function! neomake#makers#ft#perl#perlcritic() abort$/;"	f
neomake#makers#ft#php#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/php.vim	/^function! neomake#makers#ft#php#EnabledMakers() abort$/;"	f
neomake#makers#ft#php#php	plugged/neomake/autoload/neomake/makers/ft/php.vim	/^function! neomake#makers#ft#php#php() abort$/;"	f
neomake#makers#ft#php#phpcs	plugged/neomake/autoload/neomake/makers/ft/php.vim	/^function! neomake#makers#ft#php#phpcs() abort$/;"	f
neomake#makers#ft#php#phpmd	plugged/neomake/autoload/neomake/makers/ft/php.vim	/^function! neomake#makers#ft#php#phpmd() abort$/;"	f
neomake#makers#ft#php#phpstan	plugged/neomake/autoload/neomake/makers/ft/php.vim	/^function! neomake#makers#ft#php#phpstan() abort$/;"	f
neomake#makers#ft#pug#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/pug.vim	/^function! neomake#makers#ft#pug#EnabledMakers() abort$/;"	f
neomake#makers#ft#pug#puglint	plugged/neomake/autoload/neomake/makers/ft/pug.vim	/^function! neomake#makers#ft#pug#puglint() abort$/;"	f
neomake#makers#ft#puppet#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/puppet.vim	/^function! neomake#makers#ft#puppet#EnabledMakers() abort$/;"	f
neomake#makers#ft#puppet#puppet	plugged/neomake/autoload/neomake/makers/ft/puppet.vim	/^function! neomake#makers#ft#puppet#puppet() abort$/;"	f
neomake#makers#ft#puppet#puppetlint	plugged/neomake/autoload/neomake/makers/ft/puppet.vim	/^function! neomake#makers#ft#puppet#puppetlint() abort$/;"	f
neomake#makers#ft#purescript#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/purescript.vim	/^function! neomake#makers#ft#purescript#EnabledMakers() abort$/;"	f
neomake#makers#ft#purescript#PSProcessOutput	plugged/neomake/autoload/neomake/makers/ft/purescript.vim	/^function! neomake#makers#ft#purescript#PSProcessOutput(context) abort$/;"	f
neomake#makers#ft#purescript#pulp	plugged/neomake/autoload/neomake/makers/ft/purescript.vim	/^function! neomake#makers#ft#purescript#pulp() abort$/;"	f
neomake#makers#ft#python#DetectPythonVersion	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#DetectPythonVersion() abort$/;"	f
neomake#makers#ft#python#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#EnabledMakers() abort$/;"	f
neomake#makers#ft#python#FilterPythonWarnings	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#FilterPythonWarnings(lines, context) abort$/;"	f
neomake#makers#ft#python#Flake8EntryProcess	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#Flake8EntryProcess(entry) abort$/;"	f
neomake#makers#ft#python#Pep8EntryProcess	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#Pep8EntryProcess(entry) abort$/;"	f
neomake#makers#ft#python#PylamaEntryProcess	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#PylamaEntryProcess(entry) abort$/;"	f
neomake#makers#ft#python#PylintEntryProcess	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#PylintEntryProcess(entry) abort$/;"	f
neomake#makers#ft#python#flake8	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#flake8() abort$/;"	f
neomake#makers#ft#python#frosted	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#frosted() abort$/;"	f
neomake#makers#ft#python#mypy	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#mypy() abort$/;"	f
neomake#makers#ft#python#pep257	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#pep257() abort$/;"	f
neomake#makers#ft#python#pep8	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#pep8() abort$/;"	f
neomake#makers#ft#python#project_root_files	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^let neomake#makers#ft#python#project_root_files = ['setup.cfg', 'tox.ini']$/;"	v
neomake#makers#ft#python#py3kwarn	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#py3kwarn() abort$/;"	f
neomake#makers#ft#python#pycodestyle	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#pycodestyle() abort$/;"	f
neomake#makers#ft#python#pydocstyle	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#pydocstyle() abort$/;"	f
neomake#makers#ft#python#pyflakes	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#pyflakes() abort$/;"	f
neomake#makers#ft#python#pylama	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#pylama() abort$/;"	f
neomake#makers#ft#python#pylint	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#pylint() abort$/;"	f
neomake#makers#ft#python#python	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#python() abort$/;"	f
neomake#makers#ft#python#vulture	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! neomake#makers#ft#python#vulture() abort$/;"	f
neomake#makers#ft#racket#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/racket.vim	/^function! neomake#makers#ft#racket#EnabledMakers() abort$/;"	f
neomake#makers#ft#racket#raco	plugged/neomake/autoload/neomake/makers/ft/racket.vim	/^function! neomake#makers#ft#racket#raco() abort$/;"	f
neomake#makers#ft#rst#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/rst.vim	/^function! neomake#makers#ft#rst#EnabledMakers() abort$/;"	f
neomake#makers#ft#rst#SupersetOf	plugged/neomake/autoload/neomake/makers/ft/rst.vim	/^function! neomake#makers#ft#rst#SupersetOf() abort$/;"	f
neomake#makers#ft#rst#rstcheck	plugged/neomake/autoload/neomake/makers/ft/rst.vim	/^function! neomake#makers#ft#rst#rstcheck() abort$/;"	f
neomake#makers#ft#rst#rstlint	plugged/neomake/autoload/neomake/makers/ft/rst.vim	/^function! neomake#makers#ft#rst#rstlint() abort$/;"	f
neomake#makers#ft#rst#sphinx	plugged/neomake/autoload/neomake/makers/ft/rst.vim	/^function! neomake#makers#ft#rst#sphinx() abort$/;"	f
neomake#makers#ft#ruby#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/ruby.vim	/^function! neomake#makers#ft#ruby#EnabledMakers() abort$/;"	f
neomake#makers#ft#ruby#RubocopEntryProcess	plugged/neomake/autoload/neomake/makers/ft/ruby.vim	/^function! neomake#makers#ft#ruby#RubocopEntryProcess(entry) abort$/;"	f
neomake#makers#ft#ruby#jruby	plugged/neomake/autoload/neomake/makers/ft/ruby.vim	/^function! neomake#makers#ft#ruby#jruby() abort$/;"	f
neomake#makers#ft#ruby#mri	plugged/neomake/autoload/neomake/makers/ft/ruby.vim	/^function! neomake#makers#ft#ruby#mri() abort$/;"	f
neomake#makers#ft#ruby#reek	plugged/neomake/autoload/neomake/makers/ft/ruby.vim	/^function! neomake#makers#ft#ruby#reek() abort$/;"	f
neomake#makers#ft#ruby#rubocop	plugged/neomake/autoload/neomake/makers/ft/ruby.vim	/^function! neomake#makers#ft#ruby#rubocop() abort$/;"	f
neomake#makers#ft#ruby#rubocop_rails	plugged/neomake/autoload/neomake/makers/ft/ruby.vim	/^function! neomake#makers#ft#ruby#rubocop_rails() abort$/;"	f
neomake#makers#ft#ruby#rubylint	plugged/neomake/autoload/neomake/makers/ft/ruby.vim	/^function! neomake#makers#ft#ruby#rubylint() abort$/;"	f
neomake#makers#ft#rust#CargoProcessOutput	plugged/neomake/autoload/neomake/makers/ft/rust.vim	/^function! neomake#makers#ft#rust#CargoProcessOutput(context) abort$/;"	f
neomake#makers#ft#rust#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/rust.vim	/^function! neomake#makers#ft#rust#EnabledMakers() abort$/;"	f
neomake#makers#ft#rust#FillErrorFromSpan	plugged/neomake/autoload/neomake/makers/ft/rust.vim	/^function! neomake#makers#ft#rust#FillErrorFromSpan(error, span) abort$/;"	f
neomake#makers#ft#rust#cargo	plugged/neomake/autoload/neomake/makers/ft/rust.vim	/^function! neomake#makers#ft#rust#cargo() abort$/;"	f
neomake#makers#ft#rust#rustc	plugged/neomake/autoload/neomake/makers/ft/rust.vim	/^function! neomake#makers#ft#rust#rustc() abort$/;"	f
neomake#makers#ft#scala#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/scala.vim	/^function! neomake#makers#ft#scala#EnabledMakers() abort$/;"	f
neomake#makers#ft#scala#fsc	plugged/neomake/autoload/neomake/makers/ft/scala.vim	/^function! neomake#makers#ft#scala#fsc() abort$/;"	f
neomake#makers#ft#scala#scalac	plugged/neomake/autoload/neomake/makers/ft/scala.vim	/^function! neomake#makers#ft#scala#scalac() abort$/;"	f
neomake#makers#ft#scala#scalastyle	plugged/neomake/autoload/neomake/makers/ft/scala.vim	/^function! neomake#makers#ft#scala#scalastyle() abort$/;"	f
neomake#makers#ft#scss#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/scss.vim	/^function! neomake#makers#ft#scss#EnabledMakers() abort$/;"	f
neomake#makers#ft#scss#sasslint	plugged/neomake/autoload/neomake/makers/ft/scss.vim	/^function! neomake#makers#ft#scss#sasslint() abort$/;"	f
neomake#makers#ft#scss#scsslint	plugged/neomake/autoload/neomake/makers/ft/scss.vim	/^function! neomake#makers#ft#scss#scsslint() abort$/;"	f
neomake#makers#ft#scss#stylelint	plugged/neomake/autoload/neomake/makers/ft/scss.vim	/^function! neomake#makers#ft#scss#stylelint() abort$/;"	f
neomake#makers#ft#serpent#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/serpent.vim	/^function! neomake#makers#ft#serpent#EnabledMakers() abort$/;"	f
neomake#makers#ft#serpent#serplint	plugged/neomake/autoload/neomake/makers/ft/serpent.vim	/^function! neomake#makers#ft#serpent#serplint() abort$/;"	f
neomake#makers#ft#sh#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/sh.vim	/^function! neomake#makers#ft#sh#EnabledMakers() abort$/;"	f
neomake#makers#ft#sh#checkbashisms	plugged/neomake/autoload/neomake/makers/ft/sh.vim	/^function! neomake#makers#ft#sh#checkbashisms() abort$/;"	f
neomake#makers#ft#sh#dash	plugged/neomake/autoload/neomake/makers/ft/sh.vim	/^function! neomake#makers#ft#sh#dash() abort$/;"	f
neomake#makers#ft#sh#sh	plugged/neomake/autoload/neomake/makers/ft/sh.vim	/^function! neomake#makers#ft#sh#sh() abort$/;"	f
neomake#makers#ft#sh#shellcheck	plugged/neomake/autoload/neomake/makers/ft/sh.vim	/^function! neomake#makers#ft#sh#shellcheck() abort$/;"	f
neomake#makers#ft#slim#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/slim.vim	/^function! neomake#makers#ft#slim#EnabledMakers() abort$/;"	f
neomake#makers#ft#slim#slimlint	plugged/neomake/autoload/neomake/makers/ft/slim.vim	/^function! neomake#makers#ft#slim#slimlint() abort$/;"	f
neomake#makers#ft#sml#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/sml.vim	/^function! neomake#makers#ft#sml#EnabledMakers() abort$/;"	f
neomake#makers#ft#sml#smlnj	plugged/neomake/autoload/neomake/makers/ft/sml.vim	/^function! neomake#makers#ft#sml#smlnj() abort$/;"	f
neomake#makers#ft#solidity#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/solidity.vim	/^function! neomake#makers#ft#solidity#EnabledMakers() abort$/;"	f
neomake#makers#ft#solidity#solhint	plugged/neomake/autoload/neomake/makers/ft/solidity.vim	/^function! neomake#makers#ft#solidity#solhint() abort$/;"	f
neomake#makers#ft#solidity#solium	plugged/neomake/autoload/neomake/makers/ft/solidity.vim	/^function! neomake#makers#ft#solidity#solium() abort$/;"	f
neomake#makers#ft#spar#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/spar.vim	/^function! neomake#makers#ft#spar#EnabledMakers() abort$/;"	f
neomake#makers#ft#spar#spar	plugged/neomake/autoload/neomake/makers/ft/spar.vim	/^function! neomake#makers#ft#spar#spar() abort$/;"	f
neomake#makers#ft#spec#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/spec.vim	/^function! neomake#makers#ft#spec#EnabledMakers() abort$/;"	f
neomake#makers#ft#spec#rpmlint	plugged/neomake/autoload/neomake/makers/ft/spec.vim	/^function! neomake#makers#ft#spec#rpmlint() abort$/;"	f
neomake#makers#ft#sql#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/sql.vim	/^function! neomake#makers#ft#sql#EnabledMakers() abort$/;"	f
neomake#makers#ft#sql#sqlint	plugged/neomake/autoload/neomake/makers/ft/sql.vim	/^function! neomake#makers#ft#sql#sqlint() abort$/;"	f
neomake#makers#ft#stylus#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/stylus.vim	/^function! neomake#makers#ft#stylus#EnabledMakers() abort$/;"	f
neomake#makers#ft#stylus#stylint	plugged/neomake/autoload/neomake/makers/ft/stylus.vim	/^function! neomake#makers#ft#stylus#stylint() abort$/;"	f
neomake#makers#ft#swift#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/swift.vim	/^function! neomake#makers#ft#swift#EnabledMakers() abort$/;"	f
neomake#makers#ft#swift#swiftc	plugged/neomake/autoload/neomake/makers/ft/swift.vim	/^function! neomake#makers#ft#swift#swiftc() abort$/;"	f
neomake#makers#ft#swift#swiftpm	plugged/neomake/autoload/neomake/makers/ft/swift.vim	/^function! neomake#makers#ft#swift#swiftpm() abort$/;"	f
neomake#makers#ft#tcl#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/tcl.vim	/^function! neomake#makers#ft#tcl#EnabledMakers() abort$/;"	f
neomake#makers#ft#tcl#nagelfar	plugged/neomake/autoload/neomake/makers/ft/tcl.vim	/^function! neomake#makers#ft#tcl#nagelfar() abort$/;"	f
neomake#makers#ft#tex#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/tex.vim	/^function! neomake#makers#ft#tex#EnabledMakers() abort$/;"	f
neomake#makers#ft#tex#chktex	plugged/neomake/autoload/neomake/makers/ft/tex.vim	/^function! neomake#makers#ft#tex#chktex() abort$/;"	f
neomake#makers#ft#tex#lacheck	plugged/neomake/autoload/neomake/makers/ft/tex.vim	/^function! neomake#makers#ft#tex#lacheck() abort$/;"	f
neomake#makers#ft#tex#latexrun	plugged/neomake/autoload/neomake/makers/ft/tex.vim	/^function! neomake#makers#ft#tex#latexrun() abort$/;"	f
neomake#makers#ft#tex#pdflatex	plugged/neomake/autoload/neomake/makers/ft/tex.vim	/^function! neomake#makers#ft#tex#pdflatex() abort$/;"	f
neomake#makers#ft#tex#proselint	plugged/neomake/autoload/neomake/makers/ft/tex.vim	/^function! neomake#makers#ft#tex#proselint() abort$/;"	f
neomake#makers#ft#tex#rubber	plugged/neomake/autoload/neomake/makers/ft/tex.vim	/^function! neomake#makers#ft#tex#rubber() abort$/;"	f
neomake#makers#ft#tex#rubberinfo	plugged/neomake/autoload/neomake/makers/ft/tex.vim	/^function! neomake#makers#ft#tex#rubberinfo() abort$/;"	f
neomake#makers#ft#text#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/text.vim	/^function! neomake#makers#ft#text#EnabledMakers() abort$/;"	f
neomake#makers#ft#text#PostprocessWritegood	plugged/neomake/autoload/neomake/makers/ft/text.vim	/^function! neomake#makers#ft#text#PostprocessWritegood(entry) abort$/;"	f
neomake#makers#ft#text#proselint	plugged/neomake/autoload/neomake/makers/ft/text.vim	/^function! neomake#makers#ft#text#proselint() abort$/;"	f
neomake#makers#ft#text#writegood	plugged/neomake/autoload/neomake/makers/ft/text.vim	/^function! neomake#makers#ft#text#writegood() abort$/;"	f
neomake#makers#ft#toml#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/toml.vim	/^function! neomake#makers#ft#toml#EnabledMakers() abort$/;"	f
neomake#makers#ft#toml#tomlcheck	plugged/neomake/autoload/neomake/makers/ft/toml.vim	/^function! neomake#makers#ft#toml#tomlcheck() abort$/;"	f
neomake#makers#ft#tsx#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/tsx.vim	/^function! neomake#makers#ft#tsx#EnabledMakers() abort$/;"	f
neomake#makers#ft#tsx#SupersetOf	plugged/neomake/autoload/neomake/makers/ft/tsx.vim	/^function! neomake#makers#ft#tsx#SupersetOf() abort$/;"	f
neomake#makers#ft#tsx#tsc	plugged/neomake/autoload/neomake/makers/ft/tsx.vim	/^function! neomake#makers#ft#tsx#tsc() abort$/;"	f
neomake#makers#ft#typescript#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/typescript.vim	/^function! neomake#makers#ft#typescript#EnabledMakers() abort$/;"	f
neomake#makers#ft#typescript#tsc	plugged/neomake/autoload/neomake/makers/ft/typescript.vim	/^function! neomake#makers#ft#typescript#tsc() abort$/;"	f
neomake#makers#ft#typescript#tslint	plugged/neomake/autoload/neomake/makers/ft/typescript.vim	/^function! neomake#makers#ft#typescript#tslint() abort$/;"	f
neomake#makers#ft#verilog#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/verilog.vim	/^function! neomake#makers#ft#verilog#EnabledMakers() abort$/;"	f
neomake#makers#ft#verilog#iverilog	plugged/neomake/autoload/neomake/makers/ft/verilog.vim	/^function! neomake#makers#ft#verilog#iverilog() abort$/;"	f
neomake#makers#ft#vhdl#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/vhdl.vim	/^function! neomake#makers#ft#vhdl#EnabledMakers() abort$/;"	f
neomake#makers#ft#vhdl#ghdl	plugged/neomake/autoload/neomake/makers/ft/vhdl.vim	/^function! neomake#makers#ft#vhdl#ghdl() abort$/;"	f
neomake#makers#ft#vim#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/vim.vim	/^function! neomake#makers#ft#vim#EnabledMakers() abort$/;"	f
neomake#makers#ft#vim#PostprocessVimlint	plugged/neomake/autoload/neomake/makers/ft/vim.vim	/^function! neomake#makers#ft#vim#PostprocessVimlint(entry) abort$/;"	f
neomake#makers#ft#vim#vimlint	plugged/neomake/autoload/neomake/makers/ft/vim.vim	/^function! neomake#makers#ft#vim#vimlint() abort$/;"	f
neomake#makers#ft#vim#vint	plugged/neomake/autoload/neomake/makers/ft/vim.vim	/^function! neomake#makers#ft#vim#vint() abort$/;"	f
neomake#makers#ft#vue#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/vue.vim	/^function! neomake#makers#ft#vue#EnabledMakers() abort$/;"	f
neomake#makers#ft#vue#eslint	plugged/neomake/autoload/neomake/makers/ft/vue.vim	/^function! neomake#makers#ft#vue#eslint() abort$/;"	f
neomake#makers#ft#vue#eslint_d	plugged/neomake/autoload/neomake/makers/ft/vue.vim	/^function! neomake#makers#ft#vue#eslint_d() abort$/;"	f
neomake#makers#ft#vue#semistandard	plugged/neomake/autoload/neomake/makers/ft/vue.vim	/^function! neomake#makers#ft#vue#semistandard() abort$/;"	f
neomake#makers#ft#vue#standard	plugged/neomake/autoload/neomake/makers/ft/vue.vim	/^function! neomake#makers#ft#vue#standard() abort$/;"	f
neomake#makers#ft#yacc#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/yacc.vim	/^function! neomake#makers#ft#yacc#EnabledMakers() abort$/;"	f
neomake#makers#ft#yacc#bison	plugged/neomake/autoload/neomake/makers/ft/yacc.vim	/^function! neomake#makers#ft#yacc#bison() abort$/;"	f
neomake#makers#ft#yaml#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/yaml.vim	/^function! neomake#makers#ft#yaml#EnabledMakers() abort$/;"	f
neomake#makers#ft#yaml#yamllint	plugged/neomake/autoload/neomake/makers/ft/yaml.vim	/^function! neomake#makers#ft#yaml#yamllint() abort$/;"	f
neomake#makers#ft#zsh#EnabledMakers	plugged/neomake/autoload/neomake/makers/ft/zsh.vim	/^function! neomake#makers#ft#zsh#EnabledMakers() abort$/;"	f
neomake#makers#ft#zsh#shellcheck	plugged/neomake/autoload/neomake/makers/ft/zsh.vim	/^function! neomake#makers#ft#zsh#shellcheck() abort$/;"	f
neomake#makers#ft#zsh#zsh	plugged/neomake/autoload/neomake/makers/ft/zsh.vim	/^function! neomake#makers#ft#zsh#zsh() abort$/;"	f
neomake#makers#gradle#gradle	plugged/neomake/autoload/neomake/makers/gradle.vim	/^function! neomake#makers#gradle#gradle() abort$/;"	f
neomake#makers#mvn#mvn	plugged/neomake/autoload/neomake/makers/mvn.vim	/^function! neomake#makers#mvn#mvn() abort$/;"	f
neomake#makers#sbt#sbt	plugged/neomake/autoload/neomake/makers/sbt.vim	/^function! neomake#makers#sbt#sbt() abort$/;"	f
neomake#map_makers	plugged/neomake/autoload/neomake.vim	/^function! neomake#map_makers(makers, ft, auto_enabled) abort$/;"	f
neomake#postprocess#GenericLengthPostprocess	plugged/neomake/autoload/neomake/postprocess.vim	/^function! neomake#postprocess#GenericLengthPostprocess(entry) abort dict$/;"	f
neomake#postprocess#compress_whitespace	plugged/neomake/autoload/neomake/postprocess.vim	/^function! neomake#postprocess#compress_whitespace(entry) abort$/;"	f
neomake#postprocess#generic_length	plugged/neomake/autoload/neomake/postprocess.vim	/^function! neomake#postprocess#generic_length(entry) abort dict$/;"	f
neomake#postprocess#generic_length_with_pattern	plugged/neomake/autoload/neomake/postprocess.vim	/^function! neomake#postprocess#generic_length_with_pattern(entry, pattern) abort$/;"	f
neomake#quickfix#FormatQuickfix	plugged/neomake/autoload/neomake/quickfix.vim	/^function! neomake#quickfix#FormatQuickfix() abort$/;"	f
neomake#quickfix#disable	plugged/neomake/autoload/neomake/quickfix.vim	/^function! neomake#quickfix#disable() abort$/;"	f
neomake#quickfix#enable	plugged/neomake/autoload/neomake/quickfix.vim	/^function! neomake#quickfix#enable() abort$/;"	f
neomake#quickfix#is_enabled	plugged/neomake/autoload/neomake/quickfix.vim	/^function! neomake#quickfix#is_enabled() abort$/;"	f
neomake#quickfix#set_syntax	plugged/neomake/autoload/neomake/quickfix.vim	/^function! neomake#quickfix#set_syntax(names) abort$/;"	f
neomake#signs#Clean	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#Clean(bufnr, type) abort$/;"	f
neomake#signs#CleanAllOldSigns	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#CleanAllOldSigns(type) abort$/;"	f
neomake#signs#CleanOldSigns	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#CleanOldSigns(bufnr, type) abort$/;"	f
neomake#signs#DefineHighlights	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#DefineHighlights() abort$/;"	f
neomake#signs#DefineSigns	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#DefineSigns() abort$/;"	f
neomake#signs#PlaceSigns	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#PlaceSigns(bufnr, entries, type) abort$/;"	f
neomake#signs#RedefineErrorSign	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#RedefineErrorSign(...) abort$/;"	f
neomake#signs#RedefineInfoSign	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#RedefineInfoSign(...) abort$/;"	f
neomake#signs#RedefineMessageSign	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#RedefineMessageSign(...) abort$/;"	f
neomake#signs#RedefineSign	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#RedefineSign(name, opts) abort$/;"	f
neomake#signs#RedefineWarningSign	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#RedefineWarningSign(...) abort$/;"	f
neomake#signs#Reset	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#Reset(bufnr, type) abort$/;"	f
neomake#signs#ResetFile	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#ResetFile(bufnr) abort$/;"	f
neomake#signs#ResetProject	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#ResetProject() abort$/;"	f
neomake#signs#by_lnum	plugged/neomake/autoload/neomake/signs.vim	/^function! neomake#signs#by_lnum(bufnr) abort$/;"	f
neomake#statusline#AddLoclistCount	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#AddLoclistCount(buf, item) abort$/;"	f
neomake#statusline#AddQflistCount	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#AddQflistCount(item) abort$/;"	f
neomake#statusline#DefineHighlights	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#DefineHighlights() abort$/;"	f
neomake#statusline#LoclistCounts	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#LoclistCounts(...) abort$/;"	f
neomake#statusline#LoclistStatus	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#LoclistStatus(...) abort$/;"	f
neomake#statusline#QflistCounts	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#QflistCounts() abort$/;"	f
neomake#statusline#QflistStatus	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#QflistStatus(...) abort$/;"	f
neomake#statusline#ResetCounts	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#ResetCounts() abort$/;"	f
neomake#statusline#ResetCountsForBuf	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#ResetCountsForBuf(...) abort$/;"	f
neomake#statusline#ResetCountsForProject	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#ResetCountsForProject(...) abort$/;"	f
neomake#statusline#clear_cache	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#clear_cache() abort$/;"	f
neomake#statusline#get	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#get(bufnr, options) abort$/;"	f
neomake#statusline#get_counts	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#get_counts(bufnr) abort$/;"	f
neomake#statusline#get_s	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#get_s() abort$/;"	f
neomake#statusline#get_status	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#get_status(bufnr, options) abort$/;"	f
neomake#statusline#make_finished	plugged/neomake/autoload/neomake/statusline.vim	/^function! neomake#statusline#make_finished(make_info) abort$/;"	f
neomake#utils#CompressWhitespace	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#CompressWhitespace(entry) abort$/;"	f
neomake#utils#Exists	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#Exists(exe) abort$/;"	f
neomake#utils#ExpandArgs	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#ExpandArgs(args) abort$/;"	f
neomake#utils#FindGlobFile	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#FindGlobFile(glob, ...) abort$/;"	f
neomake#utils#GetHighlight	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#GetHighlight(group, what) abort$/;"	f
neomake#utils#GetSetting	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#GetSetting(key, maker, default, ft, bufnr, ...) abort$/;"	f
neomake#utils#GetSupersetOf	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#GetSupersetOf(ft) abort$/;"	f
neomake#utils#IsRunningWindows	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#IsRunningWindows() abort$/;"	f
neomake#utils#JSONdecode	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#JSONdecode(json) abort$/;"	f
neomake#utils#MakerFromCommand	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#MakerFromCommand(command) abort$/;"	f
neomake#utils#ReverseSynIDattr	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#ReverseSynIDattr(attr) abort$/;"	f
neomake#utils#Slash	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#Slash() abort$/;"	f
neomake#utils#Stringify	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#Stringify(obj) abort$/;"	f
neomake#utils#WideMessage	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#WideMessage(msg) abort " {{{2$/;"	f
neomake#utils#diff_dict	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#diff_dict(old, new) abort$/;"	f
neomake#utils#fix_self_ref	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#fix_self_ref(obj, ...) abort$/;"	f
neomake#utils#fnamemodify	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#fnamemodify(bufnr, modifier) abort$/;"	f
neomake#utils#get_buffer_lines	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#get_buffer_lines(bufnr) abort$/;"	f
neomake#utils#get_config_fts	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#get_config_fts(ft, ...) abort$/;"	f
neomake#utils#get_ft_confname	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#get_ft_confname(ft, ...) abort$/;"	f
neomake#utils#get_project_root	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#get_project_root(bufnr) abort$/;"	f
neomake#utils#get_verbosity	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#get_verbosity(...) abort$/;"	f
neomake#utils#highlight_is_defined	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#highlight_is_defined(group) abort$/;"	f
neomake#utils#hook	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#hook(event, context, ...) abort$/;"	f
neomake#utils#load_ft_makers	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#load_ft_makers(ft) abort$/;"	f
neomake#utils#load_global_makers	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#load_global_makers() abort$/;"	f
neomake#utils#parse_highlight	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#parse_highlight(group) abort$/;"	f
neomake#utils#path_sep	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#path_sep() abort$/;"	f
neomake#utils#redir	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#redir(cmd) abort$/;"	f
neomake#utils#shellescape	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#shellescape(arg) abort$/;"	f
neomake#utils#sort_by_col	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#sort_by_col(a, b) abort$/;"	f
neomake#utils#write_tempfile	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#write_tempfile(bufnr, temp_file) abort$/;"	f
neomake#utils#wstrpart	plugged/neomake/autoload/neomake/utils.vim	/^function! neomake#utils#wstrpart(mb_string, start, len) abort$/;"	f
neomake_automake	plugged/neomake/autoload/neomake/configure.vim	/^    augroup neomake_automake$/;"	a
neomake_automake_retry	plugged/neomake/autoload/neomake/configure.vim	/^        augroup neomake_automake_retry$/;"	a
neomake_automake_update	plugged/neomake/autoload/neomake/configure.vim	/^    augroup neomake_automake_update$/;"	a
neomake_event_queue	plugged/neomake/autoload/neomake.vim	/^                    augroup neomake_event_queue$/;"	a
neomake_event_queue	plugged/neomake/autoload/neomake.vim	/^                augroup neomake_event_queue$/;"	a
neomake_event_queue	plugged/neomake/autoload/neomake.vim	/^            augroup neomake_event_queue$/;"	a
neomake_highlights	plugged/neomake/autoload/neomake/highlights.vim	/^augroup neomake_highlights$/;"	a
neomake_qf	plugged/neomake/autoload/neomake/quickfix.vim	/^            augroup neomake_qf$/;"	a
neomake_qf	plugged/neomake/autoload/neomake/quickfix.vim	/^    augroup neomake_qf$/;"	a
neomake_signs	plugged/neomake/autoload/neomake/signs.vim	/^augroup neomake_signs$/;"	a
neomake_statusline	plugged/neomake/autoload/neomake/statusline.vim	/^    augroup neomake_statusline$/;"	a
neomake_statusline	plugged/neomake/autoload/neomake/statusline.vim	/^augroup neomake_statusline$/;"	a
neomake_tests	plugged/neomake/tests/include/init.vim	/^  augroup neomake_tests$/;"	a
neosnippet	plugged/neosnippet.vim/autoload/neosnippet/init.vim	/^  augroup neosnippet$/;"	a
neosnippet	plugged/neosnippet.vim/plugin/neosnippet.vim	/^augroup neosnippet$/;"	a
neosnippet#anonymous	plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#anonymous(snippet) abort$/;"	f
neosnippet#commands#_clear_markers	plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_clear_markers() abort$/;"	f
neosnippet#commands#_complete_target_snippets	plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_complete_target_snippets(arglead, cmdline, cursorpos) abort$/;"	f
neosnippet#commands#_edit	plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_edit(args) abort$/;"	f
neosnippet#commands#_edit_complete	plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_edit_complete(arglead, cmdline, cursorpos) abort$/;"	f
neosnippet#commands#_filetype_complete	plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_filetype_complete(arglead, cmdline, cursorpos) abort$/;"	f
neosnippet#commands#_make_cache	plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_make_cache(filetype) abort$/;"	f
neosnippet#commands#_source	plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_source(filename) abort$/;"	f
neosnippet#complete_done	plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#complete_done() abort$/;"	f
neosnippet#expand	plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#expand(trigger) abort$/;"	f
neosnippet#expandable	plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#expandable() abort$/;"	f
neosnippet#expandable_or_jumpable	plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#expandable_or_jumpable() abort$/;"	f
neosnippet#get_mirror_placeholder_marker_pattern	plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_mirror_placeholder_marker_pattern() abort$/;"	f
neosnippet#get_mirror_placeholder_marker_substitute_pattern	plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_mirror_placeholder_marker_substitute_pattern() abort$/;"	f
neosnippet#get_placeholder_marker_default_pattern	plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_placeholder_marker_default_pattern() abort$/;"	f
neosnippet#get_placeholder_marker_pattern	plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_placeholder_marker_pattern() abort$/;"	f
neosnippet#get_placeholder_marker_substitute_nonzero_pattern	plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_placeholder_marker_substitute_nonzero_pattern() abort$/;"	f
neosnippet#get_placeholder_marker_substitute_pattern	plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_placeholder_marker_substitute_pattern() abort$/;"	f
neosnippet#get_placeholder_marker_substitute_zero_pattern	plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_placeholder_marker_substitute_zero_pattern() abort$/;"	f
neosnippet#get_placeholder_target_marker_pattern	plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_placeholder_target_marker_pattern() abort$/;"	f
neosnippet#get_runtime_snippets_directory	plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_runtime_snippets_directory() abort$/;"	f
neosnippet#get_snippets_directory	plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_snippets_directory() abort$/;"	f
neosnippet#get_sync_placeholder_marker_default_pattern	plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_sync_placeholder_marker_default_pattern() abort$/;"	f
neosnippet#get_sync_placeholder_marker_pattern	plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_sync_placeholder_marker_pattern() abort$/;"	f
neosnippet#get_user_snippets_directory	plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_user_snippets_directory() abort$/;"	f
neosnippet#handlers#_all_clear_markers	plugged/neosnippet.vim/autoload/neosnippet/handlers.vim	/^function! neosnippet#handlers#_all_clear_markers() abort$/;"	f
neosnippet#handlers#_cursor_moved	plugged/neosnippet.vim/autoload/neosnippet/handlers.vim	/^function! neosnippet#handlers#_cursor_moved() abort$/;"	f
neosnippet#handlers#_restore_unnamed_register	plugged/neosnippet.vim/autoload/neosnippet/handlers.vim	/^function! neosnippet#handlers#_restore_unnamed_register() abort$/;"	f
neosnippet#helpers#delete_selected_text	plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#delete_selected_text(type, ...) abort$/;"	f
neosnippet#helpers#get_completion_snippets	plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_completion_snippets() abort$/;"	f
neosnippet#helpers#get_cursor_snippet	plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_cursor_snippet(snippets, cur_text) abort$/;"	f
neosnippet#helpers#get_filetype	plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_filetype() abort$/;"	f
neosnippet#helpers#get_selected_text	plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_selected_text(type, ...) abort$/;"	f
neosnippet#helpers#get_snippets	plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_snippets(...) abort$/;"	f
neosnippet#helpers#get_snippets_directory	plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_snippets_directory() abort$/;"	f
neosnippet#helpers#json2vim	plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#json2vim(expr) abort$/;"	f
neosnippet#helpers#substitute_selected_text	plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#substitute_selected_text(type, text) abort$/;"	f
neosnippet#helpers#vim2json	plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#vim2json(expr) abort$/;"	f
neosnippet#init#_initialize	plugged/neosnippet.vim/autoload/neosnippet/init.vim	/^function! neosnippet#init#_initialize() abort$/;"	f
neosnippet#init#check	plugged/neosnippet.vim/autoload/neosnippet/init.vim	/^function! neosnippet#init#check() abort$/;"	f
neosnippet#jumpable	plugged/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#jumpable() abort$/;"	f
neosnippet#mappings#_anonymous	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_anonymous(snippet) abort$/;"	f
neosnippet#mappings#_clear_select_mode_mappings	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_clear_select_mode_mappings() abort$/;"	f
neosnippet#mappings#_complete_done	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_complete_done(cur_text, col) abort$/;"	f
neosnippet#mappings#_expand	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_expand(trigger) abort$/;"	f
neosnippet#mappings#_expand_target	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_expand_target() abort$/;"	f
neosnippet#mappings#_expand_target_trigger	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_expand_target_trigger(trigger) abort$/;"	f
neosnippet#mappings#_pre_trigger	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_pre_trigger() abort$/;"	f
neosnippet#mappings#_register_oneshot_snippet	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_register_oneshot_snippet() abort$/;"	f
neosnippet#mappings#_trigger	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_trigger(function) abort$/;"	f
neosnippet#mappings#completed_expandable	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#completed_expandable() abort$/;"	f
neosnippet#mappings#expand_impl	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#expand_impl() abort$/;"	f
neosnippet#mappings#expand_or_jump_impl	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#expand_or_jump_impl() abort$/;"	f
neosnippet#mappings#expandable	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#expandable() abort$/;"	f
neosnippet#mappings#expandable_or_jumpable	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#expandable_or_jumpable() abort$/;"	f
neosnippet#mappings#jump_impl	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#jump_impl() abort$/;"	f
neosnippet#mappings#jump_or_expand_impl	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#jump_or_expand_impl() abort$/;"	f
neosnippet#mappings#jumpable	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#jumpable() abort$/;"	f
neosnippet#parser#_conceal_argument	plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! neosnippet#parser#_conceal_argument(arg, cnt, args) abort$/;"	f
neosnippet#parser#_get_completed_snippet	plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! neosnippet#parser#_get_completed_snippet(completed_item, cur_text, next_text) abort$/;"	f
neosnippet#parser#_get_in_paren	plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! neosnippet#parser#_get_in_paren(key, pair, str) abort$/;"	f
neosnippet#parser#_initialize_snippet	plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! neosnippet#parser#_initialize_snippet(dict, path, line, pattern, name) abort$/;"	f
neosnippet#parser#_initialize_snippet_options	plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! neosnippet#parser#_initialize_snippet_options() abort$/;"	f
neosnippet#parser#_parse_snippet	plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! neosnippet#parser#_parse_snippet(filename, trigger) abort$/;"	f
neosnippet#parser#_parse_snippets	plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! neosnippet#parser#_parse_snippets(filename) abort$/;"	f
neosnippet#util#escape_pattern	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#escape_pattern(...) abort$/;"	f
neosnippet#util#expand	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#expand(path) abort$/;"	f
neosnippet#util#get_buffer_config	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#get_buffer_config($/;"	f
neosnippet#util#get_cur_text	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#get_cur_text() abort$/;"	f
neosnippet#util#get_last_status	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#get_last_status(...) abort$/;"	f
neosnippet#util#get_next_text	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#get_next_text() abort$/;"	f
neosnippet#util#get_vital	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#get_vital() abort$/;"	f
neosnippet#util#has_vimproc	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#has_vimproc(...) abort$/;"	f
neosnippet#util#iconv	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#iconv(...) abort$/;"	f
neosnippet#util#is_mac	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#is_mac(...) abort$/;"	f
neosnippet#util#is_sudo	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#is_sudo() abort$/;"	f
neosnippet#util#is_windows	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#is_windows(...) abort$/;"	f
neosnippet#util#option2list	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#option2list(str) abort$/;"	f
neosnippet#util#parse_options	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#parse_options(args, options_list) abort$/;"	f
neosnippet#util#print_error	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#print_error(string) abort$/;"	f
neosnippet#util#set_default	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#set_default(var, val, ...) abort $/;"	f
neosnippet#util#set_dictionary_helper	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#set_dictionary_helper(...) abort$/;"	f
neosnippet#util#strwidthpart	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#strwidthpart(...) abort$/;"	f
neosnippet#util#substitute_path_separator	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#substitute_path_separator(...) abort$/;"	f
neosnippet#util#system	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#system(...) abort$/;"	f
neosnippet#util#truncate	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#truncate(...) abort$/;"	f
neosnippet#util#uniq	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#uniq(list) abort$/;"	f
neosnippet#variables#clear_expand_stack	plugged/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#clear_expand_stack() abort$/;"	f
neosnippet#variables#current_neosnippet	plugged/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#current_neosnippet() abort$/;"	f
neosnippet#variables#data_dir	plugged/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#data_dir() abort$/;"	f
neosnippet#variables#expand_stack	plugged/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#expand_stack() abort$/;"	f
neosnippet#variables#pop_expand_stack	plugged/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#pop_expand_stack() abort$/;"	f
neosnippet#variables#runtime_dir	plugged/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#runtime_dir() abort$/;"	f
neosnippet#variables#set_snippets	plugged/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#set_snippets(list) abort$/;"	f
neosnippet#variables#snippets	plugged/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#snippets() abort$/;"	f
neosnippet#variables#snippets_dir	plugged/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#snippets_dir() abort$/;"	f
neosnippet#view#_clear_markers	plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! neosnippet#view#_clear_markers(expand_info) abort$/;"	f
neosnippet#view#_expand	plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! neosnippet#view#_expand(cur_text, col, trigger_name) abort$/;"	f
neosnippet#view#_get_snippet_range	plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! neosnippet#view#_get_snippet_range(begin_line, begin_patterns, end_line, end_patterns)/;"	f
neosnippet#view#_insert	plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! neosnippet#view#_insert(snippet, options, cur_text, col) abort$/;"	f
neosnippet#view#_jump	plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! neosnippet#view#_jump(_, col) abort$/;"	f
neosnippet#view#_search_outof_range	plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! neosnippet#view#_search_outof_range(col) abort$/;"	f
neosnippet#view#_search_snippet_range	plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! neosnippet#view#_search_snippet_range(start, end, cnt, ...) abort$/;"	f
nerdtree#checkForBrowse	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir)$/;"	f
nerdtree#compareNodes	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2)$/;"	f
nerdtree#compareNodesBySortKey	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodesBySortKey(n1, n2)$/;"	f
nerdtree#completeBookmarks	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P)$/;"	f
nerdtree#deprecated	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...)$/;"	f
nerdtree#echo	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg)$/;"	f
nerdtree#echoError	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg)$/;"	f
nerdtree#echoWarning	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg)$/;"	f
nerdtree#exec	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd)$/;"	f
nerdtree#has_opt	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name)$/;"	f
nerdtree#loadClassFiles	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles()$/;"	f
nerdtree#postSourceActions	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions()$/;"	f
nerdtree#renderView	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView()$/;"	f
nerdtree#runningCygwin	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningCygwin()$/;"	f
nerdtree#runningWindows	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows()$/;"	f
nerdtree#ui_glue#bookmarkNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...)$/;"	f
nerdtree#ui_glue#chRootCwd	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd()$/;"	f
nerdtree#ui_glue#clearBookmarks	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks)$/;"	f
nerdtree#ui_glue#createDefaultBindings	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings()$/;"	f
nerdtree#ui_glue#invokeKeyMap	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key)$/;"	f
nerdtree#ui_glue#openBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name)$/;"	f
nerdtree#ui_glue#revealBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name)$/;"	f
nerdtree#ui_glue#setupCommands	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands()$/;"	f
nerdtree#ui_glue#upDir	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#upDir(keepState)$/;"	f
nerdtree#version	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version()$/;"	f
nerdtreegitplugin	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^augroup nerdtreegitplugin$/;"	a
node	plugged/nova-vim/package.json	/^      "node": true,$/;"	b	object:eslintConfig.env
normpaths_equal	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_translation_unit.py	/^def normpaths_equal(path1, path2):$/;"	f
normpaths_equal	plugged/deoplete-clang/tests/clang/tests/cindex/test_translation_unit.py	/^def normpaths_equal(path1, path2):$/;"	f
nova-colors	plugged/nova-vim/package-lock.json	/^    "nova-colors": {$/;"	o	object:dependencies
nova-colors	plugged/nova-vim/package.json	/^    "nova-colors": "^2.1.5"$/;"	s	object:dependencies
ns	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    ns = '{urn:debugger_protocol_v1}'$/;"	v	class:ContextProperty
ns	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    ns = '{urn:debugger_protocol_v1}'$/;"	v	class:Response
num	plugged/vim-gitgutter/unplace.vim	/^let num = 500$/;"	v
num_chunks	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def num_chunks(self):$/;"	m	class:CompletionString
num_chunks	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def num_chunks(self):$/;"	m	class:CompletionString
number-is-nan	plugged/nova-vim/package-lock.json	/^        "number-is-nan": "1.0.1"$/;"	s	object:dependencies.is-fullwidth-code-point.requires
number-is-nan	plugged/nova-vim/package-lock.json	/^    "number-is-nan": {$/;"	o	object:dependencies
o	autoload/plug.vim	/^    nnoremap <silent> <buffer> o    :silent! call <SID>preview_commit()<cr>$/;"	m
objc_type_encoding	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def objc_type_encoding(self):$/;"	m	class:Cursor
objc_type_encoding	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def objc_type_encoding(self):$/;"	m	class:Cursor
object-assign	plugged/nova-vim/package-lock.json	/^        "object-assign": "4.1.1"$/;"	s	object:dependencies.esrecurse.requires
object-assign	plugged/nova-vim/package-lock.json	/^        "object-assign": "4.1.1"$/;"	s	object:dependencies.figures.requires
object-assign	plugged/nova-vim/package-lock.json	/^        "object-assign": "4.1.1"$/;"	s	object:dependencies.file-entry-cache.requires
object-assign	plugged/nova-vim/package-lock.json	/^        "object-assign": "4.1.1",$/;"	s	object:dependencies.del.requires
object-assign	plugged/nova-vim/package-lock.json	/^        "object-assign": "4.1.1",$/;"	s	object:dependencies.globby.requires
object-assign	plugged/nova-vim/package-lock.json	/^    "object-assign": {$/;"	o	object:dependencies
offset	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def offset(self):$/;"	m	class:SourceLocation
offset	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def offset(self):$/;"	m	class:SourceLocation
on_add	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def on_add(self):$/;"	m	class:Breakpoint
on_add	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def on_add(self):$/;"	m	class:TemporaryLineBreakpoint
on_create	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    def on_create(self):$/;"	m	class:Window
on_create	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def on_create(self):$/;"	m	class:BreakpointWindow
on_create	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def on_create(self):$/;"	m	class:LogWindow
on_create	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def on_create(self):$/;"	m	class:StackWindow
on_create	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def on_create(self):$/;"	m	class:StatusWindow
on_create	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def on_create(self):$/;"	m	class:TraceWindow
on_create	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def on_create(self):$/;"	m	class:WatchWindow
on_destroy	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    def on_destroy(self):$/;"	m	class:Window
on_destroy	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def on_destroy(self):$/;"	m	class:TraceWindow
on_event	plugged/deoplete-clang/rplugin/python3/deoplete/sources/cmake.py	/^    def on_event(self, context):$/;"	m	class:Source
on_event	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang.py	/^    def on_event(self, context):$/;"	m	class:Source
on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def on_event(self, context):$/;"	m	class:DeopleteHandlers
on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def on_event(self, context):$/;"	m	class:Deoplete
on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def on_event(self, context):$/;"	m	class:Parent
on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def on_event(self, context):$/;"	m	class:Base
on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def on_event(self, context):$/;"	m	class:Source
on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def on_event(self, context):$/;"	m	class:Source
on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def on_event(self, context):$/;"	m	class:Source
on_event	plugged/neosnippet.vim/rplugin/python3/deoplete/sources/neosnippet.py	/^    def on_event(self, context):$/;"	m	class:Source
on_init	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang.py	/^    def on_init(self, context):$/;"	m	class:Source
on_remove	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def on_remove(self):$/;"	m	class:Breakpoint
on_remove	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def on_remove(self):$/;"	m	class:TemporaryLineBreakpoint
once	plugged/nova-vim/package-lock.json	/^        "once": "1.4.0"$/;"	s	object:dependencies.run-async.requires
once	plugged/nova-vim/package-lock.json	/^        "once": "1.4.0",$/;"	s	object:dependencies.glob.requires
once	plugged/nova-vim/package-lock.json	/^        "once": "1.4.0",$/;"	s	object:dependencies.inflight.requires
once	plugged/nova-vim/package-lock.json	/^    "once": {$/;"	o	object:dependencies
onetime	plugged/nova-vim/package-lock.json	/^        "onetime": "1.1.0"$/;"	s	object:dependencies.restore-cursor.requires
onetime	plugged/nova-vim/package-lock.json	/^    "onetime": {$/;"	o	object:dependencies
open	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    def open(self):$/;"	m	class:Ui
open	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def open(self):$/;"	m	class:Ui
open	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def open(self, name):$/;"	m	class:WindowManager
open_all	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def open_all(self):$/;"	m	class:WindowManager
open_name	plugged/vdebug/tests/test_log.py	/^        open_name = '__builtin__.open'$/;"	v	class:FileLoggerTest
open_name	plugged/vdebug/tests/test_log.py	/^        open_name = 'builtins.open'$/;"	v	class:FileLoggerTest
opt_level	plugged/neomake/tests/fixtures/rust/cargo_info.json	/^{"features":["default"],"filenames":["\/home\/jelte\/fun\/derive_more\/target\/debug\/deps\/libu/;"	s	object:profile
option	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def option(self):$/;"	m	class:Diagnostic
option	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def option(self):$/;"	m	class:Diagnostic
option_value	plugged/vdebug/rubylib/vdebug.rb	/^  def option_value(name)$/;"	f	class:Vdebug
optionator	plugged/nova-vim/package-lock.json	/^        "optionator": "0.8.2",$/;"	s	object:dependencies.eslint.requires
optionator	plugged/nova-vim/package-lock.json	/^    "optionator": {$/;"	o	object:dependencies
optionxform	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/ini.py	/^    def optionxform(self, optionstr):$/;"	m	class:EditorConfigParser
opts.sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! opts.sink(lines)$/;"	f
os-homedir	plugged/nova-vim/package-lock.json	/^        "os-homedir": "1.0.2"$/;"	s	object:dependencies.user-home.requires
os-homedir	plugged/nova-vim/package-lock.json	/^    "os-homedir": {$/;"	o	object:dependencies
overlap_length	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^def overlap_length(left, right):$/;"	f
overwrite	plugged/vdebug/pythonx/vdebug/opts.py	/^    def overwrite(cls, name, value):$/;"	m	class:Options
overwrite	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def overwrite(self, content):$/;"	m	class:VimBuffer
package_id	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s
package_id	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	s
package_id	plugged/neomake/tests/fixtures/rust/cargo_error_without_span.json	/^ {"message":{"children":[],"code":null,"level":"error","message":"aborting due to 18 previous er/;"	s
package_id	plugged/neomake/tests/fixtures/rust/cargo_info.json	/^{"features":["default"],"filenames":["\/home\/jelte\/fun\/derive_more\/target\/debug\/deps\/libu/;"	s
package_id	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	s
parse	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def parse(self, path, args=None, unsaved_files=None, options = 0):$/;"	m	class:Index
parse	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def parse(self, path, args=None, unsaved_files=None, options = 0):$/;"	m	class:Index
parse	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def parse(ui, args):$/;"	m	class:Breakpoint
parse_buffer_pattern	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def parse_buffer_pattern(b, pattern):$/;"	f
parse_candidates	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang.py	/^    def parse_candidates(self, result):$/;"	m	class:Source
parse_file_pattern	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def parse_file_pattern(f, pattern):$/;"	f
parserOptions	plugged/nova-vim/package.json	/^    "parserOptions": {$/;"	o	object:eslintConfig
path-is-absolute	plugged/nova-vim/package-lock.json	/^        "path-is-absolute": "1.0.1"$/;"	s	object:dependencies.glob.requires
path-is-absolute	plugged/nova-vim/package-lock.json	/^    "path-is-absolute": {$/;"	o	object:dependencies
path-is-inside	plugged/nova-vim/package-lock.json	/^        "path-is-inside": "1.0.2"$/;"	s	object:dependencies.is-path-inside.requires
path-is-inside	plugged/nova-vim/package-lock.json	/^        "path-is-inside": "1.0.2",$/;"	s	object:dependencies.eslint.requires
path-is-inside	plugged/nova-vim/package-lock.json	/^    "path-is-inside": {$/;"	o	object:dependencies
php_cs_fixer#fix	plugged/vim-php-cs-fixer/autoload/php_cs_fixer.vim	/^fun! php_cs_fixer#fix(path, dry_run)$/;"	f
pickle	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^pickle:$/;"	t
pify	plugged/nova-vim/package-lock.json	/^        "pify": "2.3.0",$/;"	s	object:dependencies.del.requires
pify	plugged/nova-vim/package-lock.json	/^        "pify": "2.3.0",$/;"	s	object:dependencies.globby.requires
pify	plugged/nova-vim/package-lock.json	/^    "pify": {$/;"	o	object:dependencies
pinkie	plugged/nova-vim/package-lock.json	/^        "pinkie": "2.0.4"$/;"	s	object:dependencies.pinkie-promise.requires
pinkie	plugged/nova-vim/package-lock.json	/^    "pinkie": {$/;"	o	object:dependencies
pinkie-promise	plugged/nova-vim/package-lock.json	/^        "pinkie-promise": "2.0.1"$/;"	s	object:dependencies.globby.requires
pinkie-promise	plugged/nova-vim/package-lock.json	/^        "pinkie-promise": "2.0.1",$/;"	s	object:dependencies.del.requires
pinkie-promise	plugged/nova-vim/package-lock.json	/^    "pinkie-promise": {$/;"	o	object:dependencies
pipe_data_received	plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def pipe_data_received(self, fd, data):$/;"	m	class:Process
place_breakpoint	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def place_breakpoint(sign_id, file, line):$/;"	m	class:Ui
place_pointer	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def place_pointer(self, line):$/;"	m	class:SourceWindow
plug#	autoload/plug.vim	/^function! plug#(repo, ...)$/;"	f
plug#begin	autoload/plug.vim	/^function! plug#begin(...)$/;"	f
plug#end	autoload/plug.vim	/^function! plug#end()$/;"	f
plug#helptags	autoload/plug.vim	/^function! plug#helptags()$/;"	f
plug#load	autoload/plug.vim	/^function! plug#load(...)$/;"	f
plugin/editorconfig.vim	plugged/editorconfig-vim/tests/spec/editorconfig_spec.rb	/^describe 'plugin\/editorconfig.vim' do$/;"	d
plugin_dir	plugged/neomake/tests/vim/vimrc	/^let plugin_dir = expand('<sfile>:p:h:h:h')$/;"	v
pluralize	plugged/nova-vim/package-lock.json	/^        "pluralize": "1.2.1",$/;"	s	object:dependencies.eslint.requires
pluralize	plugged/nova-vim/package-lock.json	/^    "pluralize": {$/;"	o	object:dependencies
pointer_sign_id	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    pointer_sign_id = '6145'$/;"	v	class:SourceWindow
pop	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def pop(self, key, *args):$/;"	m	class:OrderedDict
popitem	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def popitem(self, i=-1):$/;"	m	class:OrderedDict
postrelease	plugged/nova-vim/package.json	/^    "postrelease": "npm run build && git push && git push --tags && open https:\/\/github.com\/t/;"	s	object:scripts
prelude-ls	plugged/nova-vim/package-lock.json	/^        "prelude-ls": "1.1.2"$/;"	s	object:dependencies.type-check.requires
prelude-ls	plugged/nova-vim/package-lock.json	/^        "prelude-ls": "1.1.2",$/;"	s	object:dependencies.levn.requires
prelude-ls	plugged/nova-vim/package-lock.json	/^        "prelude-ls": "1.1.2",$/;"	s	object:dependencies.optionator.requires
prelude-ls	plugged/nova-vim/package-lock.json	/^    "prelude-ls": {$/;"	o	object:dependencies
preprocess_values	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/handler.py	/^    def preprocess_values(self):$/;"	m	class:EditorConfigHandler
print	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def print(self, expr):$/;"	m	class:Base
print_error	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def print_error(self, expr):$/;"	m	class:Base
print_help	plugged/neomake/contrib/vim-checks	/^function print_help() {$/;"	f
priority	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def priority(self):$/;"	m	class:CompletionString
priority	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def priority(self):$/;"	m	class:CompletionString
probe	plugged/vdebug/pythonx/vdebug/util.py	/^    def probe():$/;"	m	class:InputStream
process-nextick-args	plugged/nova-vim/package-lock.json	/^        "process-nextick-args": "1.0.7",$/;"	s	object:dependencies.readable-stream.requires
process-nextick-args	plugged/nova-vim/package-lock.json	/^    "process-nextick-args": {$/;"	o	object:dependencies
process_exited	plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def process_exited(self):$/;"	m	class:Process
profile	plugged/neomake/tests/fixtures/rust/cargo_info.json	/^{"features":["default"],"filenames":["\/home\/jelte\/fun\/derive_more\/target\/debug\/deps\/libu/;"	o
progress	plugged/nova-vim/package-lock.json	/^        "progress": "1.1.8",$/;"	s	object:dependencies.eslint.requires
progress	plugged/nova-vim/package-lock.json	/^    "progress": {$/;"	o	object:dependencies
project	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^project = u'EditorConfig Python Core'$/;"	v
property_get	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def property_get(self, name):$/;"	m	class:Api
pygments_style	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^pygments_style = 'sphinx'$/;"	v
q	autoload/plug.vim	/^  nnoremap <silent> <buffer> q  :if b:plug_preview==1<bar>pc<bar>endif<bar>bd<cr>$/;"	m
q	autoload/plug.vim	/^  nnoremap <silent> <buffer> q :q<cr>$/;"	m
qthelp	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^qthelp:$/;"	t
queue	plugged/vdebug/pythonx/vdebug/connection.py	/^    import Queue as queue$/;"	I
ranges	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def ranges(self):$/;"	m	class:Diagnostic
ranges	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def ranges(self):$/;"	m	class:Diagnostic
raw_comment	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def raw_comment(self):$/;"	m	class:Cursor
raw_comment	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def raw_comment(self):$/;"	m	class:Cursor
read	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def read(self, path):$/;"	m	class:Index
read	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def read(self, path):$/;"	m	class:Index
read	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/ini.py	/^    def read(self, filename):$/;"	m	class:EditorConfigParser
readable-stream	plugged/nova-vim/package-lock.json	/^        "readable-stream": "2.2.11",$/;"	s	object:dependencies.concat-stream.requires
readable-stream	plugged/nova-vim/package-lock.json	/^    "readable-stream": {$/;"	o	object:dependencies
readline2	plugged/nova-vim/package-lock.json	/^        "readline2": "1.0.1",$/;"	s	object:dependencies.inquirer.requires
readline2	plugged/nova-vim/package-lock.json	/^    "readline2": {$/;"	o	object:dependencies
reason	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s
reason	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	s
reason	plugged/neomake/tests/fixtures/rust/cargo_error_without_span.json	/^ {"message":{"children":[],"code":null,"level":"error","message":"aborting due to 18 previous er/;"	s
reason	plugged/neomake/tests/fixtures/rust/cargo_info.json	/^{"features":["default"],"filenames":["\/home\/jelte\/fun\/derive_more\/target\/debug\/deps\/libu/;"	s
reason	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	s
recv	plugged/vdebug/tests/test_connection.py	/^    def recv(self,length):$/;"	m	class:SocketMock
recv_msg	plugged/vdebug/pythonx/vdebug/connection.py	/^    def recv_msg(self):$/;"	m	class:ConnectionHandler
referenced	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def referenced(self):$/;"	m	class:Cursor
referenced	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def referenced(self):$/;"	m	class:Cursor
register	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def register(item):$/;"	f	function:register_functions	file:
register	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def register(value, name):$/;"	m	class:TokenKind
register	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def register(item):$/;"	f	function:register_functions	file:
register	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def register(value, name):$/;"	m	class:TokenKind
register_breakpoint	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def register_breakpoint(self, breakpoint):$/;"	m	class:Ui
register_enumerations	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^def register_enumerations():$/;"	f
register_enumerations	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^def register_enumerations():$/;"	f
register_function	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^def register_function(lib, item, ignore_errors):$/;"	f
register_function	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^def register_function(lib, item, ignore_errors):$/;"	f
register_functions	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^def register_functions(lib, ignore_errors):$/;"	f
register_functions	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^def register_functions(lib, ignore_errors):$/;"	f
release	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^release = __version__$/;"	v
release	plugged/nova-vim/package.json	/^    "release": "git checkout master && git pull && npm version",$/;"	s	object:scripts
reload	plugged/vdebug/pythonx/vdebug/util.py	/^    def reload(options=opts.Options):$/;"	m	class:Environment
reload	plugged/vdebug/pythonx/vdebug/util.py	/^    def reload(self):$/;"	m	class:Keymapper
reload_keymappings	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def reload_keymappings(self):$/;"	m	class:DebuggerInterface
reload_options	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def reload_options():$/;"	m	class:DebuggerInterface
remote_enable	plugged/vdebug/.travis.php.ini	/^xdebug.remote_enable=1$/;"	k
remove_breakpoint	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def remove_breakpoint(self, breakpoint):$/;"	m	class:Store
remove_breakpoint	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def remove_breakpoint(self, args=None):$/;"	m	class:DebuggerInterface
remove_breakpoint	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def remove_breakpoint(self, breakpoint):$/;"	m	class:Ui
remove_breakpoint	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def remove_breakpoint(self, breakpoint_id):$/;"	m	class:BreakpointWindow
remove_breakpoint_by_id	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def remove_breakpoint_by_id(self, id):$/;"	m	class:Store
remove_lock_file!	plugged/vdebug/rubylib/vdebug.rb	/^  def remove_lock_file!$/;"	f	class:Vdebug
remove_logger	plugged/vdebug/pythonx/vdebug/log.py	/^    def remove_logger(cls, type):$/;"	m	class:Log
remove_pointer	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def remove_pointer(self):$/;"	m	class:SourceWindow
rename	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def rename(self, old_key, new_key):$/;"	m	class:OrderedDict
render	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def render(self):$/;"	m	class:ResponseRenderer
render	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def render(self):$/;"	m	class:StackGetResponseRenderer
render	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def render(self, indent=0):$/;"	m	class:ContextGetResponseRenderer
render	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def render(self, renderer):$/;"	m	class:TraceWindow
render_in_error_case	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def render_in_error_case(self):$/;"	m	class:TraceWindow
rendered	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	z	object:message
rendered	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	z	object:message.children.0
rendered	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	z	object:message.children.1
rendered	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	z	object:message
rendered	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	z	object:message.children.0
rendered	plugged/neomake/tests/fixtures/rust/cargo_error_without_span.json	/^ {"message":{"children":[],"code":null,"level":"error","message":"aborting due to 18 previous er/;"	z	object:message
rendered	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	z	object:message
reparse	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def reparse(self, unsaved_files=None, options=0):$/;"	m	class:TranslationUnit
reparse	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def reparse(self, unsaved_files=None, options=0):$/;"	m	class:TranslationUnit
require-uncached	plugged/nova-vim/package-lock.json	/^        "require-uncached": "1.0.3",$/;"	s	object:dependencies.eslint.requires
require-uncached	plugged/nova-vim/package-lock.json	/^    "require-uncached": {$/;"	o	object:dependencies
requires	plugged/nova-vim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.table.dependencies.string-width
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.acorn-jsx
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.ajv
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.argparse
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.array-union
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.brace-expansion
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.caller-path
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.chalk
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.cli-cursor
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.concat-stream
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.d
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.debug
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.del
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.doctrine
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.es5-ext
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.es6-iterator
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.es6-map
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.es6-set
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.es6-symbol
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.es6-weak-map
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.escope
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.eslint
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.espree
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.esrecurse
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.event-emitter
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.exec-sh
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.figures
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.file-entry-cache
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.flat-cache
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.generate-object-property
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.glob
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.globby
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.has-ansi
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.inflight
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.inquirer
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-fullwidth-code-point
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-my-json-valid
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-path-in-cwd
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-path-inside
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-resolvable
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.js-yaml
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.json-stable-stringify
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.levn
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.minimatch
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.mkdirp
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.once
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.optionator
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.pinkie-promise
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.readable-stream
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.readline2
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.require-uncached
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.restore-cursor
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.rimraf
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.run-async
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.string-width
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.string_decoder
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.strip-ansi
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.table
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.type-check
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.user-home
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.watch
requires	plugged/nova-vim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.write
requires	plugged/nova-vim/package-lock.json	/^  "requires": true,$/;"	b
resolve-from	plugged/nova-vim/package-lock.json	/^        "resolve-from": "1.0.1"$/;"	s	object:dependencies.require-uncached.requires
resolve-from	plugged/nova-vim/package-lock.json	/^    "resolve-from": {$/;"	o	object:dependencies
resolved	plugged/nova-vim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/acorn\/-\/acorn-3.3.0.tgz",$/;"	s	object:dependencies.acorn-jsx.dependencies.acorn
resolved	plugged/nova-vim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/estraverse\/-\/estraverse-4.1.1.tgz",$/;"	s	object:dependencies.esrecurse.dependencies.estraverse
resolved	plugged/nova-vim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-fullwidth-code-point\/-\/is-fullwidth-co/;"	s	object:dependencies.table.dependencies.is-fullwidth-code-point
resolved	plugged/nova-vim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/minimist\/-\/minimist-1.2.0.tgz",$/;"	s	object:dependencies.watch.dependencies.minimist
resolved	plugged/nova-vim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/string-width\/-\/string-width-2.0.0.tgz",$/;"	s	object:dependencies.table.dependencies.string-width
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/acorn-jsx\/-\/acorn-jsx-3.0.1.tgz",$/;"	s	object:dependencies.acorn-jsx
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/acorn\/-\/acorn-5.0.3.tgz",$/;"	s	object:dependencies.acorn
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ajv-keywords\/-\/ajv-keywords-1.5.1.tgz",$/;"	s	object:dependencies.ajv-keywords
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ajv\/-\/ajv-4.11.8.tgz",$/;"	s	object:dependencies.ajv
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ansi-escapes\/-\/ansi-escapes-1.4.0.tgz",$/;"	s	object:dependencies.ansi-escapes
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ansi-regex\/-\/ansi-regex-2.1.1.tgz",$/;"	s	object:dependencies.ansi-regex
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-2.2.1.tgz",$/;"	s	object:dependencies.ansi-styles
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/argparse\/-\/argparse-1.0.9.tgz",$/;"	s	object:dependencies.argparse
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/array-union\/-\/array-union-1.0.2.tgz",$/;"	s	object:dependencies.array-union
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/array-uniq\/-\/array-uniq-1.0.3.tgz",$/;"	s	object:dependencies.array-uniq
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/arrify\/-\/arrify-1.0.1.tgz",$/;"	s	object:dependencies.arrify
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/balanced-match\/-\/balanced-match-1.0.0.tgz",$/;"	s	object:dependencies.balanced-match
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/brace-expansion\/-\/brace-expansion-1.1.8.tgz",$/;"	s	object:dependencies.brace-expansion
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/caller-path\/-\/caller-path-0.1.0.tgz",$/;"	s	object:dependencies.caller-path
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/callsites\/-\/callsites-0.2.0.tgz",$/;"	s	object:dependencies.callsites
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/chalk\/-\/chalk-1.1.3.tgz",$/;"	s	object:dependencies.chalk
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/circular-json\/-\/circular-json-0.3.1.tgz",$/;"	s	object:dependencies.circular-json
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/cli-cursor\/-\/cli-cursor-1.0.2.tgz",$/;"	s	object:dependencies.cli-cursor
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/cli-width\/-\/cli-width-2.1.0.tgz",$/;"	s	object:dependencies.cli-width
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/co\/-\/co-4.6.0.tgz",$/;"	s	object:dependencies.co
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/code-point-at\/-\/code-point-at-1.1.0.tgz",$/;"	s	object:dependencies.code-point-at
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/concat-map\/-\/concat-map-0.0.1.tgz",$/;"	s	object:dependencies.concat-map
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/concat-stream\/-\/concat-stream-1.6.0.tgz",$/;"	s	object:dependencies.concat-stream
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/core-util-is\/-\/core-util-is-1.0.2.tgz",$/;"	s	object:dependencies.core-util-is
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/d\/-\/d-1.0.0.tgz",$/;"	s	object:dependencies.d
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/debug\/-\/debug-2.6.8.tgz",$/;"	s	object:dependencies.debug
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/deep-is\/-\/deep-is-0.1.3.tgz",$/;"	s	object:dependencies.deep-is
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/del\/-\/del-2.2.2.tgz",$/;"	s	object:dependencies.del
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/doctrine\/-\/doctrine-1.5.0.tgz",$/;"	s	object:dependencies.doctrine
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/es5-ext\/-\/es5-ext-0.10.23.tgz",$/;"	s	object:dependencies.es5-ext
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/es6-iterator\/-\/es6-iterator-2.0.1.tgz",$/;"	s	object:dependencies.es6-iterator
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/es6-map\/-\/es6-map-0.1.5.tgz",$/;"	s	object:dependencies.es6-map
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/es6-set\/-\/es6-set-0.1.5.tgz",$/;"	s	object:dependencies.es6-set
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/es6-symbol\/-\/es6-symbol-3.1.1.tgz",$/;"	s	object:dependencies.es6-symbol
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/es6-weak-map\/-\/es6-weak-map-2.0.2.tgz",$/;"	s	object:dependencies.es6-weak-map
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/escape-string-regexp\/-\/escape-string-regexp-1/;"	s	object:dependencies.escape-string-regexp
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/escope\/-\/escope-3.6.0.tgz",$/;"	s	object:dependencies.escope
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/eslint\/-\/eslint-3.5.0.tgz",$/;"	s	object:dependencies.eslint
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/espree\/-\/espree-3.4.3.tgz",$/;"	s	object:dependencies.espree
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/esprima\/-\/esprima-3.1.3.tgz",$/;"	s	object:dependencies.esprima
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/esrecurse\/-\/esrecurse-4.1.0.tgz",$/;"	s	object:dependencies.esrecurse
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/estraverse\/-\/estraverse-4.2.0.tgz",$/;"	s	object:dependencies.estraverse
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/esutils\/-\/esutils-2.0.2.tgz",$/;"	s	object:dependencies.esutils
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/event-emitter\/-\/event-emitter-0.3.5.tgz",$/;"	s	object:dependencies.event-emitter
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/exec-sh\/-\/exec-sh-0.2.0.tgz",$/;"	s	object:dependencies.exec-sh
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/exit-hook\/-\/exit-hook-1.1.1.tgz",$/;"	s	object:dependencies.exit-hook
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fast-levenshtein\/-\/fast-levenshtein-2.0.6.tgz/;"	s	object:dependencies.fast-levenshtein
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/figures\/-\/figures-1.7.0.tgz",$/;"	s	object:dependencies.figures
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/file-entry-cache\/-\/file-entry-cache-2.0.0.tgz/;"	s	object:dependencies.file-entry-cache
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/flat-cache\/-\/flat-cache-1.2.2.tgz",$/;"	s	object:dependencies.flat-cache
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fs.realpath\/-\/fs.realpath-1.0.0.tgz",$/;"	s	object:dependencies.fs.realpath
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/generate-function\/-\/generate-function-2.0.0.t/;"	s	object:dependencies.generate-function
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/generate-object-property\/-\/generate-object-pr/;"	s	object:dependencies.generate-object-property
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/glob\/-\/glob-7.1.2.tgz",$/;"	s	object:dependencies.glob
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/globals\/-\/globals-9.18.0.tgz",$/;"	s	object:dependencies.globals
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/globby\/-\/globby-5.0.0.tgz",$/;"	s	object:dependencies.globby
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/graceful-fs\/-\/graceful-fs-4.1.11.tgz",$/;"	s	object:dependencies.graceful-fs
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/has-ansi\/-\/has-ansi-2.0.0.tgz",$/;"	s	object:dependencies.has-ansi
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ignore\/-\/ignore-3.3.3.tgz",$/;"	s	object:dependencies.ignore
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/imurmurhash\/-\/imurmurhash-0.1.4.tgz",$/;"	s	object:dependencies.imurmurhash
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/inflight\/-\/inflight-1.0.6.tgz",$/;"	s	object:dependencies.inflight
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/inherits\/-\/inherits-2.0.3.tgz",$/;"	s	object:dependencies.inherits
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/inquirer\/-\/inquirer-0.12.0.tgz",$/;"	s	object:dependencies.inquirer
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-fullwidth-code-point\/-\/is-fullwidth-code-p/;"	s	object:dependencies.is-fullwidth-code-point
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-my-json-valid\/-\/is-my-json-valid-2.16.0.tg/;"	s	object:dependencies.is-my-json-valid
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-path-cwd\/-\/is-path-cwd-1.0.0.tgz",$/;"	s	object:dependencies.is-path-cwd
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-path-in-cwd\/-\/is-path-in-cwd-1.0.0.tgz",$/;"	s	object:dependencies.is-path-in-cwd
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-path-inside\/-\/is-path-inside-1.0.0.tgz",$/;"	s	object:dependencies.is-path-inside
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-property\/-\/is-property-1.0.2.tgz",$/;"	s	object:dependencies.is-property
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-resolvable\/-\/is-resolvable-1.0.0.tgz",$/;"	s	object:dependencies.is-resolvable
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/isarray\/-\/isarray-1.0.0.tgz",$/;"	s	object:dependencies.isarray
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/js-yaml\/-\/js-yaml-3.8.4.tgz",$/;"	s	object:dependencies.js-yaml
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/json-stable-stringify\/-\/json-stable-stringify/;"	s	object:dependencies.json-stable-stringify
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jsonify\/-\/jsonify-0.0.0.tgz",$/;"	s	object:dependencies.jsonify
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jsonpointer\/-\/jsonpointer-4.0.1.tgz",$/;"	s	object:dependencies.jsonpointer
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/levn\/-\/levn-0.3.0.tgz",$/;"	s	object:dependencies.levn
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/lodash\/-\/lodash-4.17.4.tgz",$/;"	s	object:dependencies.lodash
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/merge\/-\/merge-1.2.0.tgz",$/;"	s	object:dependencies.merge
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/minimatch\/-\/minimatch-3.0.4.tgz",$/;"	s	object:dependencies.minimatch
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/minimist\/-\/minimist-0.0.8.tgz",$/;"	s	object:dependencies.minimist
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/mkdirp\/-\/mkdirp-0.5.1.tgz",$/;"	s	object:dependencies.mkdirp
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ms\/-\/ms-2.0.0.tgz",$/;"	s	object:dependencies.ms
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/mute-stream\/-\/mute-stream-0.0.5.tgz",$/;"	s	object:dependencies.mute-stream
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/natural-compare\/-\/natural-compare-1.4.0.tgz",$/;"	s	object:dependencies.natural-compare
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/nova-colors\/-\/nova-colors-2.1.5.tgz",$/;"	s	object:dependencies.nova-colors
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/number-is-nan\/-\/number-is-nan-1.0.1.tgz",$/;"	s	object:dependencies.number-is-nan
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/object-assign\/-\/object-assign-4.1.1.tgz",$/;"	s	object:dependencies.object-assign
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/once\/-\/once-1.4.0.tgz",$/;"	s	object:dependencies.once
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/onetime\/-\/onetime-1.1.0.tgz",$/;"	s	object:dependencies.onetime
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/optionator\/-\/optionator-0.8.2.tgz",$/;"	s	object:dependencies.optionator
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/os-homedir\/-\/os-homedir-1.0.2.tgz",$/;"	s	object:dependencies.os-homedir
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/path-is-absolute\/-\/path-is-absolute-1.0.1.tgz/;"	s	object:dependencies.path-is-absolute
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/path-is-inside\/-\/path-is-inside-1.0.2.tgz",$/;"	s	object:dependencies.path-is-inside
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/pify\/-\/pify-2.3.0.tgz",$/;"	s	object:dependencies.pify
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/pinkie-promise\/-\/pinkie-promise-2.0.1.tgz",$/;"	s	object:dependencies.pinkie-promise
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/pinkie\/-\/pinkie-2.0.4.tgz",$/;"	s	object:dependencies.pinkie
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/pluralize\/-\/pluralize-1.2.1.tgz",$/;"	s	object:dependencies.pluralize
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/prelude-ls\/-\/prelude-ls-1.1.2.tgz",$/;"	s	object:dependencies.prelude-ls
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/process-nextick-args\/-\/process-nextick-args-1/;"	s	object:dependencies.process-nextick-args
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/progress\/-\/progress-1.1.8.tgz",$/;"	s	object:dependencies.progress
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/readable-stream\/-\/readable-stream-2.2.11.tgz"/;"	s	object:dependencies.readable-stream
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/readline2\/-\/readline2-1.0.1.tgz",$/;"	s	object:dependencies.readline2
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/require-uncached\/-\/require-uncached-1.0.3.tgz/;"	s	object:dependencies.require-uncached
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/resolve-from\/-\/resolve-from-1.0.1.tgz",$/;"	s	object:dependencies.resolve-from
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/restore-cursor\/-\/restore-cursor-1.0.1.tgz",$/;"	s	object:dependencies.restore-cursor
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/rimraf\/-\/rimraf-2.6.1.tgz",$/;"	s	object:dependencies.rimraf
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/run-async\/-\/run-async-0.1.0.tgz",$/;"	s	object:dependencies.run-async
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/rx-lite\/-\/rx-lite-3.1.2.tgz",$/;"	s	object:dependencies.rx-lite
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/safe-buffer\/-\/safe-buffer-5.0.1.tgz",$/;"	s	object:dependencies.safe-buffer
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/shelljs\/-\/shelljs-0.6.1.tgz",$/;"	s	object:dependencies.shelljs
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/slice-ansi\/-\/slice-ansi-0.0.4.tgz",$/;"	s	object:dependencies.slice-ansi
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/sprintf-js\/-\/sprintf-js-1.0.3.tgz",$/;"	s	object:dependencies.sprintf-js
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/string-width\/-\/string-width-1.0.2.tgz",$/;"	s	object:dependencies.string-width
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/string_decoder\/-\/string_decoder-1.0.2.tgz",$/;"	s	object:dependencies.string_decoder
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/strip-ansi\/-\/strip-ansi-3.0.1.tgz",$/;"	s	object:dependencies.strip-ansi
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/strip-bom\/-\/strip-bom-3.0.0.tgz",$/;"	s	object:dependencies.strip-bom
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/strip-json-comments\/-\/strip-json-comments-1.0/;"	s	object:dependencies.strip-json-comments
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/supports-color\/-\/supports-color-2.0.0.tgz",$/;"	s	object:dependencies.supports-color
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/table\/-\/table-3.8.3.tgz",$/;"	s	object:dependencies.table
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/text-table\/-\/text-table-0.2.0.tgz",$/;"	s	object:dependencies.text-table
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/through\/-\/through-2.3.8.tgz",$/;"	s	object:dependencies.through
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/tryit\/-\/tryit-1.0.3.tgz",$/;"	s	object:dependencies.tryit
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/type-check\/-\/type-check-0.3.2.tgz",$/;"	s	object:dependencies.type-check
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/typedarray\/-\/typedarray-0.0.6.tgz",$/;"	s	object:dependencies.typedarray
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/user-home\/-\/user-home-2.0.0.tgz",$/;"	s	object:dependencies.user-home
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/util-deprecate\/-\/util-deprecate-1.0.2.tgz",$/;"	s	object:dependencies.util-deprecate
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/watch\/-\/watch-0.19.2.tgz",$/;"	s	object:dependencies.watch
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/wordwrap\/-\/wordwrap-1.0.0.tgz",$/;"	s	object:dependencies.wordwrap
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/wrappy\/-\/wrappy-1.0.2.tgz",$/;"	s	object:dependencies.wrappy
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/write\/-\/write-0.2.1.tgz",$/;"	s	object:dependencies.write
resolved	plugged/nova-vim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/xtend\/-\/xtend-4.0.1.tgz",$/;"	s	object:dependencies.xtend
response	plugged/vdebug/tests/test_dbgp_response.py	/^    response = """<?xml version="1.0" encoding="iso-8859-1"?>$/;"	v	class:ContextGetTest
response	plugged/vdebug/tests/test_dbgp_response.py	/^    response = """<?xml version="1.0" encoding="utf-8"?>$/;"	v	class:ContextGetAlternateTest
restore-cursor	plugged/nova-vim/package-lock.json	/^        "restore-cursor": "1.0.1"$/;"	s	object:dependencies.cli-cursor.requires
restore-cursor	plugged/nova-vim/package-lock.json	/^    "restore-cursor": {$/;"	o	object:dependencies
result_type	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def result_type(self):$/;"	m	class:Cursor
result_type	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def result_type(self):$/;"	m	class:Cursor
results	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def results(self):$/;"	m	class:CodeCompletionResults
results	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def results(self):$/;"	m	class:CodeCompletionResults
reverse	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def reverse(self):$/;"	m	class:OrderedDict
rimraf	plugged/nova-vim/package-lock.json	/^        "rimraf": "2.6.1"$/;"	s	object:dependencies.del.requires
rimraf	plugged/nova-vim/package-lock.json	/^    "rimraf": {$/;"	o	object:dependencies
root	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^root = logging.getLogger('deoplete')$/;"	v
run	plugged/neomake/Makefile	/^    -v $(PWD):\/testplugin \\$/;"	t
run	plugged/vdebug/pythonx/vdebug/connection.py	/^    def run(self):$/;"	m	class:BackgroundSocketCreator
run	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def run(self):$/;"	m	class:Api
run	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def run(self):$/;"	m	class:DebuggerInterface
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self):$/;"	m	class:CursorEvalEvent
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self):$/;"	m	class:DetachEvent
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self):$/;"	m	class:ListenEvent
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self):$/;"	m	class:ReloadKeymappingsEvent
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self):$/;"	m	class:RunEvent
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self):$/;"	m	class:RunToCursorEvent
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self):$/;"	m	class:StackWindowLineSelectEvent
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self):$/;"	m	class:StepIntoEvent
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self):$/;"	m	class:StepOutEvent
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self):$/;"	m	class:StepOverEvent
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self):$/;"	m	class:TraceRefreshEvent
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self):$/;"	m	class:VisualEvalEvent
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self):$/;"	m	class:WatchWindowContextChangeEvent
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self):$/;"	m	class:WatchWindowHideEvent
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self):$/;"	m	class:WatchWindowPropertyGetEvent
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self, *args):$/;"	m	class:Event
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self, args):$/;"	m	class:RemoveBreakpointEvent
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self, args):$/;"	m	class:SetBreakpointEvent
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self, code):$/;"	m	class:EvalEvent
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self, code):$/;"	m	class:TraceEvent
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self, context_id):$/;"	m	class:GetContextEvent
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self, persist_expression, code):$/;"	m	class:SetEvalExpressionEvent
run	plugged/vdebug/pythonx/vdebug/event.py	/^    def run(self, status):$/;"	m	class:RefreshEvent
run	plugged/vdebug/pythonx/vdebug/session.py	/^    def run(self):$/;"	m	class:SessionHandler
run-async	plugged/nova-vim/package-lock.json	/^        "run-async": "0.1.0",$/;"	s	object:dependencies.inquirer.requires
run-async	plugged/nova-vim/package-lock.json	/^    "run-async": {$/;"	o	object:dependencies
run_key	plugged/vdebug/pythonx/vdebug/util.py	/^    def run_key(self):$/;"	m	class:Keymapper
run_php_script	plugged/vdebug/features/support/helpers.rb	/^  def run_php_script(path)$/;"	f	module:ScriptRunner
run_to_cursor	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def run_to_cursor(self):$/;"	m	class:DebuggerInterface
running?	plugged/vdebug/rubylib/vdebug.rb	/^  def running?$/;"	f	class:Vdebug
runnvim	plugged/neomake/Makefile	/^runnvim: VIM_ARGS:=$/;"	t
runnvim	plugged/neomake/Makefile	/^runnvim: testnvim_interactive$/;"	t
runvim	plugged/neomake/Makefile	/^runvim: VIM_ARGS:=$/;"	t
runvim	plugged/neomake/Makefile	/^runvim: testvim_interactive$/;"	t
rust	plugged/rust.vim/ftplugin/rust.vim	/^augroup rust.vim$/;"	a
rust#AppendCmdLine	plugged/rust.vim/autoload/rust.vim	/^function! rust#AppendCmdLine(text)$/;"	f
rust#CompleteExpand	plugged/rust.vim/autoload/rust.vim	/^function! rust#CompleteExpand(lead, line, pos)$/;"	f
rust#Emit	plugged/rust.vim/autoload/rust.vim	/^function! rust#Emit(type, args)$/;"	f
rust#Expand	plugged/rust.vim/autoload/rust.vim	/^function! rust#Expand(bang, args)$/;"	f
rust#Jump	plugged/rust.vim/autoload/rust.vim	/^function! rust#Jump(mode, function) range$/;"	f
rust#Play	plugged/rust.vim/autoload/rust.vim	/^function! rust#Play(count, line1, line2, ...) abort$/;"	f
rust#Run	plugged/rust.vim/autoload/rust.vim	/^function! rust#Run(bang, args)$/;"	f
rustfmt#Format	plugged/rust.vim/autoload/rustfmt.vim	/^function! rustfmt#Format()$/;"	f
rustfmt#FormatRange	plugged/rust.vim/autoload/rustfmt.vim	/^function! rustfmt#FormatRange(line1, line2)$/;"	f
rx-lite	plugged/nova-vim/package-lock.json	/^        "rx-lite": "3.1.2",$/;"	s	object:dependencies.inquirer.requires
rx-lite	plugged/nova-vim/package-lock.json	/^    "rx-lite": {$/;"	o	object:dependencies
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['asdf', 'func'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['conditional'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['hi'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['paste'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['text', 'raw', 'func'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['whitespace'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'aaaa', 'raw'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'raw'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['text', 'text'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['%t', 'asdf', '%{getcwd()}'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['ffenc','%{strftime("%H:%M")}'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['raw', '%f'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['text', 'text'])$/;"	v
s:AddExprCallback	plugged/neomake/autoload/neomake.vim	/^function! s:AddExprCallback(jobinfo, prev_list) abort$/;"	f
s:AddHighlighting	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:AddHighlighting()$/;"	f
s:AddLeftDelim	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddLeftDelim(delim, theLine)$/;"	f
s:AddLeftDelimAligned	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddLeftDelimAligned(delim, theLine, alignIndx)$/;"	f
s:AddRightDelim	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddRightDelim(delim, theLine)$/;"	f
s:AddRightDelimAligned	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddRightDelimAligned(delim, theLine, alignIndx)$/;"	f
s:AddToClasspath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:AddToClasspath(classpath, path) abort$/;"	f
s:After	plugged/neomake/tests/include/init.vim	/^function! s:After()$/;"	f
s:AirlineError	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let s:AirlineError = [ "#E6EEF3" , "#DF8C8C" , "" , "" ]$/;"	v
s:AirlineWarning	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let s:AirlineWarning = [ "#E6EEF3" , "#F2C38F" , "" , "" ]$/;"	v
s:AltMultipart	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AltMultipart()$/;"	f
s:AltNested	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AltNested()$/;"	f
s:AppendCommentToLine	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AppendCommentToLine()$/;"	f
s:ApplyConfig	plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:ApplyConfig(config) " {{{1$/;"	f
s:AssertNeomakeMessage	plugged/neomake/tests/include/init.vim	/^function! s:AssertNeomakeMessage(msg, ...)$/;"	f
s:AssertNeomakeMessageAbsent	plugged/neomake/tests/include/init.vim	/^function! s:AssertNeomakeMessageAbsent(msg, ...)$/;"	f
s:AutoUpdate	plugged/tagbar/autoload/tagbar.vim	/^function! s:AutoUpdate(fname, force, ...) abort$/;"	f
s:Bookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:Bookmark.AddBookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
s:Bookmark.BookmarkExistsFor	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
s:Bookmark.BookmarkFor	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
s:Bookmark.BookmarkNames	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
s:Bookmark.Bookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
s:Bookmark.CacheBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
s:Bookmark.ClearAll	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
s:Bookmark.CompareBookmarksByName	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CompareBookmarksByName(firstBookmark, secondBookmark)$/;"	f
s:Bookmark.GetNodeForName	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot, nerdtree)$/;"	f
s:Bookmark.GetSelected	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
s:Bookmark.InvalidBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
s:Bookmark.New	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
s:Bookmark.SortBookmarksList	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.SortBookmarksList()$/;"	f
s:Bookmark.ToRoot	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name, nerdtree)$/;"	f
s:Bookmark.Write	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
s:Bookmark.activate	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(nerdtree, ...)$/;"	f
s:Bookmark.delete	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
s:Bookmark.getNode	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(nerdtree, searchFromAbsoluteRoot)$/;"	f
s:Bookmark.mustExist	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
s:Bookmark.open	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(nerdtree, ...)$/;"	f
s:Bookmark.openInNewTab	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
s:Bookmark.setPath	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
s:Bookmark.str	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
s:Bookmark.toRoot	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot(nerdtree)$/;"	f
s:Bookmark.validate	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
s:BreakpointTypes	plugged/vdebug/plugin/vdebug.vim	/^function! s:BreakpointTypes(A,L,P)$/;"	f
s:Cache	plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^let s:Cache = neosnippet#util#get_vital().import('System.Cache.Deprecated')$/;"	v
s:Cache	plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^let s:Cache = neosnippet#util#get_vital().import('System.Cache.Deprecated')$/;"	v
s:CanCommentLine	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanCommentLine(forceNested, lineNum)$/;"	f
s:CanPlaceCursor	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanPlaceCursor(line, col)$/;"	f
s:CanSexyCommentLines	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanSexyCommentLines(topline, bottomline)$/;"	f
s:CanToggleCommentLine	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanToggleCommentLine(forceNested, lineNum)$/;"	f
s:ChangeFoldLevel	plugged/tagbar/autoload/tagbar.vim	/^function! s:ChangeFoldLevel(diff, force) abort$/;"	f
s:CheckDefined	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:CheckDefined(colors)$/;"	f
s:CheckExCtagsVersion	plugged/tagbar/autoload/tagbar.vim	/^function! s:CheckExCtagsVersion(output) abort$/;"	f
s:CheckFTCtags	plugged/tagbar/autoload/tagbar.vim	/^function! s:CheckFTCtags(bin, ftype) abort$/;"	f
s:CheckForExCtags	plugged/tagbar/autoload/tagbar.vim	/^function! s:CheckForExCtags(silent) abort$/;"	f
s:CheckMouseClick	plugged/tagbar/autoload/tagbar.vim	/^function! s:CheckMouseClick() abort$/;"	f
s:CheckStackMakerAsync	plugged/neomake/autoload/neomake/makers/ft/haskell.vim	/^function! s:CheckStackMakerAsync(job_id, data, event) dict abort$/;"	f
s:ClassSep	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:ClassSep() abort$/;"	f
s:CleanJobinfo	plugged/neomake/autoload/neomake.vim	/^function! s:CleanJobinfo(jobinfo, ...) abort$/;"	f
s:CleanUpSpaceAndBackticks	plugged/neomake/autoload/neomake/makers/ft/haskell.vim	/^function! s:CleanUpSpaceAndBackticks() abort$/;"	f
s:CloseFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:CloseFold() abort$/;"	f
s:CloseHiddenBuffers	config.d/commands.vim	/^function! s:CloseHiddenBuffers()$/;"	f
s:CloseWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:CloseWindow() abort$/;"	f
s:CommentBlock	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentBlock(top, bottom, lSide, rSide, forceNested )$/;"	f
s:CommentLines	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLines(forceNested, align, firstLine, lastLine)$/;"	f
s:CommentLinesMinimal	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesMinimal(firstLine, lastLine)$/;"	f
s:CommentLinesSexy	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesSexy(topline, bottomline)$/;"	f
s:CommentLinesToggle	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesToggle(forceNested, firstLine, lastLine)$/;"	f
s:CommentRegion	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentRegion(topLine, topCol, bottomLine, bottomCol, forceNested)$/;"	f
s:ConvertLeadingSpacesToTabs	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingSpacesToTabs(line)$/;"	f
s:ConvertLeadingTabsToSpaces	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingTabsToSpaces(line)$/;"	f
s:ConvertLeadingWhiteSpace	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingWhiteSpace(line)$/;"	f
s:CorrectFocusOnStartup	plugged/tagbar/autoload/tagbar.vim	/^function! s:CorrectFocusOnStartup() abort$/;"	f
s:CountNonESCedOccurances	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CountNonESCedOccurances(str, searchstr, escChar)$/;"	f
s:CreateAutocommands	plugged/tagbar/autoload/tagbar.vim	/^function! s:CreateAutocommands() abort$/;"	f
s:CreateDelimMapFromCms	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CreateDelimMapFromCms()$/;"	f
s:CreateMaps	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function! s:CreateMaps(modes, target, desc, combo)$/;"	f
s:Creator	plugged/nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:Creator.BufNamePrefix	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
s:Creator.CreateMirror	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
s:Creator.CreateTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateTabTree(name)$/;"	f
s:Creator.CreateWindowTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateWindowTree(dir)$/;"	f
s:Creator.New	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
s:Creator.ToggleTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.ToggleTabTree(dir)$/;"	f
s:Creator._bindMappings	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
s:Creator._broadcastInitEvent	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
s:Creator._createNERDTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createNERDTree(path, type)$/;"	f
s:Creator._createTreeWin	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
s:Creator._isBufHidden	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._isBufHidden(nr)$/;"	f
s:Creator._nextBufferName	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
s:Creator._nextBufferNumber	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
s:Creator._pathForString	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
s:Creator._removeTreeBufForTab	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._removeTreeBufForTab()$/;"	f
s:Creator._setCommonBufOptions	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
s:Creator._setupStatusline	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
s:Creator._tabpagevar	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f
s:Creator._uniq	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._uniq(list)$/;"	f
s:Creator.createMirror	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
s:Creator.createTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createTabTree(name)$/;"	f
s:Creator.createWindowTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createWindowTree(dir)$/;"	f
s:Creator.toggleTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.toggleTabTree(dir)$/;"	f
s:CtagsErrMsg	plugged/tagbar/autoload/tagbar.vim	/^function! s:CtagsErrMsg(errmsg, infomsg, silent, ...) abort$/;"	f
s:CurrentLineWhitespaceOff	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:CurrentLineWhitespaceOff( level )$/;"	f
s:CurrentLineWhitespaceOn	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:CurrentLineWhitespaceOn()$/;"	f
s:Cursor	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:Cursor = {}$/;"	v
s:Cursor.column	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.column() dict$/;"	f
s:Cursor.line	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.line() dict$/;"	f
s:Cursor.move	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.move(line, column) dict$/;"	f
s:Cursor.new	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.new(position)$/;"	f
s:Cursor.remove_visual_selection	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.remove_visual_selection() dict$/;"	f
s:Cursor.restore_unnamed_register	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.restore_unnamed_register() dict$/;"	f
s:Cursor.save_unnamed_register	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.save_unnamed_register() dict$/;"	f
s:Cursor.update_highlight	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_highlight() dict$/;"	f
s:Cursor.update_line_length	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_line_length() dict$/;"	f
s:Cursor.update_position	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_position(pos) dict$/;"	f
s:Cursor.update_visual_selection	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_visual_selection(region) dict$/;"	f
s:CursorHoldUpdate	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:CursorHoldUpdate()$/;"	f
s:CursorHoldUpdate	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:CursorHoldUpdate()$/;"	f
s:CursorManager	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:CursorManager = {}$/;"	v
s:CursorManager.add	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.add(pos, ...) dict$/;"	f
s:CursorManager.debug	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.debug() dict$/;"	f
s:CursorManager.delete_current	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.delete_current() dict$/;"	f
s:CursorManager.get	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.get(i) dict$/;"	f
s:CursorManager.get_current	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.get_current() dict$/;"	f
s:CursorManager.initialize	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.initialize() dict$/;"	f
s:CursorManager.is_empty	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.is_empty() dict$/;"	f
s:CursorManager.loop_done	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.loop_done() dict$/;"	f
s:CursorManager.new	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.new()$/;"	f
s:CursorManager.next	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.next() dict$/;"	f
s:CursorManager.reapply_visual_selection	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.reapply_visual_selection() dict$/;"	f
s:CursorManager.remove_highlight	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.remove_highlight(hi_id) dict$/;"	f
s:CursorManager.reposition_all_within_region	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.reposition_all_within_region(start) dict$/;"	f
s:CursorManager.reset	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.reset(restore_view, restore_setting, ...) dict$/;"	f
s:CursorManager.restore_user_settings	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.restore_user_settings() dict$/;"	f
s:CursorManager.size	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.size() dict$/;"	f
s:CursorManager.start_loop	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.start_loop() dict$/;"	f
s:CursorManager.update_current	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.update_current() dict$/;"	f
s:DetectFiletype	plugged/tagbar/autoload/tagbar.vim	/^function! s:DetectFiletype(bufnr) abort$/;"	f
s:DetectJS	plugged/vim-javascript-syntax/ftdetect/javascript.vim	/^function! s:DetectJS()$/;"	f
s:DisableShellSlash	plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:DisableShellSlash() " {{{2$/;"	f
s:DisableStripWhitespaceOnSave	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:DisableStripWhitespaceOnSave()$/;"	f
s:DisableWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:DisableWhitespace()$/;"	f
s:DmdStyleMaker	plugged/neomake/autoload/neomake/makers/ft/d.vim	/^function! s:DmdStyleMaker(args) abort$/;"	f
s:DoesBlockHaveDelim	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:DoesBlockHaveDelim(delim, top, bottom)$/;"	f
s:DoesBlockHaveMultipartDelim	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:DoesBlockHaveMultipartDelim(top, bottom)$/;"	f
s:Echo	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:Echo(message)$/;"	f
s:Emit	plugged/rust.vim/autoload/rust.vim	/^function! s:Emit(dict, type, args)$/;"	f
s:EnableStripWhitespaceOnSave	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:EnableStripWhitespaceOnSave()$/;"	f
s:EnableWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:EnableWhitespace()$/;"	f
s:Esc	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Esc(str)$/;"	f
s:EscapeCtagsCmd	plugged/tagbar/autoload/tagbar.vim	/^function! s:EscapeCtagsCmd(ctags_bin, args, ...) abort$/;"	f
s:Event	plugged/nerdtree/lib/nerdtree/event.vim	/^let s:Event = {}$/;"	v
s:Event.New	plugged/nerdtree/lib/nerdtree/event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f
s:ExcludeOther	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! s:ExcludeOther(nr, exclude_preview)$/;"	f
s:ExcludePaths	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! s:ExcludePaths(nr, exclude_paths)$/;"	f
s:ExecuteCtags	plugged/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtags(ctags_cmd) abort$/;"	f
s:ExecuteCtagsOnFile	plugged/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtagsOnFile(fname, realfname, typeinfo) abort$/;"	f
s:Expand	plugged/rust.vim/autoload/rust.vim	/^function! s:Expand(dict, pretty, args)$/;"	f
s:FileUpdate	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:FileUpdate(fname)$/;"	f
s:FindBoundingLinesOfSexyCom	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:FindBoundingLinesOfSexyCom(lineNum)$/;"	f
s:FindDelimiterIndex	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:FindDelimiterIndex(delimiter, line)$/;"	f
s:FindPythonFiles	plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:FindPythonFiles() " {{{1$/;"	f
s:FindPythonInterp	plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:FindPythonInterp() " {{{1$/;"	f
s:FlagSet	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:FlagSet.New	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.New()$/;"	f
s:FlagSet._flagsForScope	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f
s:FlagSet.addFlag	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f
s:FlagSet.clearFlags	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f
s:FlagSet.removeFlag	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f
s:FlagSet.renderToString	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f
s:GOLDENVIEW_ZL_VERSION_CURRENT	plugged/GoldenView.Vim/autoload/GoldenView/zl/rc.vim	/^let s:GOLDENVIEW_ZL_VERSION_CURRENT = 140$/;"	v
s:Get	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:Get(dict, key, prefix)$/;"	f
s:GetAntClasspath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:GetAntClasspath() abort$/;"	f
s:GetFileWinnr	plugged/tagbar/autoload/tagbar.vim	/^function! s:GetFileWinnr(fileinfo) abort$/;"	f
s:GetFilenames	plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:GetFilenames(path, filename)$/;"	f
s:GetGradleClasspath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:GetGradleClasspath() abort$/;"	f
s:GetMakerForFiletype	plugged/neomake/autoload/neomake.vim	/^function! s:GetMakerForFiletype(ft, maker_name) abort$/;"	f
s:GetMavenClasspath	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:GetMavenClasspath() abort " {{{2$/;"	f
s:GetMavenProperties	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:GetMavenProperties() abort " {{{2$/;"	f
s:GetNearbyTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:GetNearbyTag(all, forcecurrent, ...) abort$/;"	f
s:GetSexyComLeft	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComLeft(space, esc)$/;"	f
s:GetSexyComMarker	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComMarker(space, esc)$/;"	f
s:GetSexyComRight	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComRight(space, esc)$/;"	f
s:GetSupportedFiletypes	plugged/tagbar/autoload/tagbar.vim	/^function! s:GetSupportedFiletypes() abort$/;"	f
s:GetTabWinForMakeId	plugged/neomake/autoload/neomake.vim	/^function! s:GetTabWinForMakeId(make_id) abort$/;"	f
s:GetTagInfo	plugged/tagbar/autoload/tagbar.vim	/^function! s:GetTagInfo(linenr, ignorepseudo) abort$/;"	f
s:GitStatusCacheTime	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:GitStatusCacheTime = 0$/;"	v
s:GitStatusCacheTimeExpiry	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:GitStatusCacheTimeExpiry = 2$/;"	v
s:GoldenView_zl_ruby_loaded	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^let s:GoldenView_zl_ruby_loaded = 0$/;"	v
s:GoldenView_zl_window__ignore_nrule	plugged/GoldenView.Vim/autoload/GoldenView/zl/window.vim	/^let s:GoldenView_zl_window__ignore_nrule = GoldenView#zl#rule#norm($/;"	v
s:GotoFileWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:GotoFileWindow(fileinfo, ...) abort$/;"	f
s:GotoNextFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:GotoNextFold() abort$/;"	f
s:GotoNextToplevelTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:GotoNextToplevelTag(direction) abort$/;"	f
s:GotoPrevFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:GotoPrevFold() abort$/;"	f
s:GotoTrailingWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:GotoTrailingWhitespace(search_backwards, from, to)$/;"	f
s:GradleOutputDirectory	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:GradleOutputDirectory() abort$/;"	f
s:HandleBufDelete	plugged/tagbar/autoload/tagbar.vim	/^function! s:HandleBufDelete(bufname, bufnr) abort$/;"	f
s:HandleBufWrite	plugged/tagbar/autoload/tagbar.vim	/^function! s:HandleBufWrite(fname) abort$/;"	f
s:HandleEval	plugged/vdebug/plugin/vdebug.vim	/^function! s:HandleEval(bang,code)$/;"	f
s:HandleLoclistQflistDisplay	plugged/neomake/autoload/neomake.vim	/^function! s:HandleLoclistQflistDisplay(jobinfo, loc_or_qflist) abort$/;"	f
s:HandleOnlyWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:HandleOnlyWindow() abort$/;"	f
s:HasCStyleComments	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasCStyleComments()$/;"	f
s:HasLeadingTabs	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasLeadingTabs(...)$/;"	f
s:HasMultipartDelims	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasMultipartDelims()$/;"	f
s:HasOpenFileWindows	plugged/tagbar/autoload/tagbar.vim	/^function! s:HasOpenFileWindows() abort$/;"	f
s:HighlightEOLWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:HighlightEOLWhitespace(type)$/;"	f
s:HighlightEOLWhitespaceExceptCurrentLine	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:HighlightEOLWhitespaceExceptCurrentLine(type)$/;"	f
s:HighlightTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:HighlightTag(openfolds, ...) abort$/;"	f
s:I1	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let s:I1 = [ "#3C4C55" , "#DADA93", "" , ""  ]$/;"	v
s:I2	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let s:I2 = s:N2$/;"	v
s:I3	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let s:I3 = s:N3$/;"	v
s:IN1	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let s:IN1 = [ "#3C4C55" , "#556873" , "" , "" ]$/;"	v
s:IN2	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let s:IN2 = s:IN1$/;"	v
s:IN3	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let s:IN3 = s:IN1$/;"	v
s:InAllWindows	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:InAllWindows(command)$/;"	f
s:IncMakerArgs	plugged/neomake/tests/include/init.vim	/^function! s:IncMakerArgs()$/;"	f
s:Init	plugged/tagbar/autoload/tagbar.vim	/^function! s:Init(silent) abort$/;"	f
s:InitBufHighlights	plugged/neomake/autoload/neomake/highlights.vim	/^    function! s:InitBufHighlights(type, buf) abort$/;"	f
s:InitTypes	plugged/tagbar/autoload/tagbar.vim	/^function! s:InitTypes() abort$/;"	f
s:InitVariable	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:InitVariable(var, value)$/;"	f
s:InitVariable	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:InitVariable(var, value)$/;"	f
s:InitWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:InitWindow(autoclose) abort$/;"	f
s:Initialize	plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:Initialize() " {{{1$/;"	f
s:InitializeExternalCommand	plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:InitializeExternalCommand() " {{{2$/;"	f
s:InitializePythonBuiltin	plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:InitializePythonBuiltin(editorconfig_core_py_dir) " {{{2$/;"	f
s:InitializePythonExternal	plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:InitializePythonExternal() " {{{2$/;"	f
s:InvertComment	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:InvertComment(firstLine, lastLine)$/;"	f
s:IsCommented	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommented(left, right, line)$/;"	f
s:IsCommentedFromStartOfLine	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedFromStartOfLine(left, line)$/;"	f
s:IsCommentedNormOrSexy	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedNormOrSexy(lineNum)$/;"	f
s:IsCommentedOutermost	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedOutermost(left, right, leftAlt, rightAlt, line)$/;"	f
s:IsDelimValid	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsDelimValid(delimiter, delIndx, line)$/;"	f
s:IsEscaped	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsEscaped(str, indx, escChar)$/;"	f
s:IsInSexyComment	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsInSexyComment(line)$/;"	f
s:IsNumEven	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsNumEven(num)$/;"	f
s:IsRuleActive	plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:IsRuleActive(name, config) " {{{{$/;"	f
s:IsSexyComment	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsSexyComment(topline, bottomline)$/;"	f
s:IsValidFile	plugged/tagbar/autoload/tagbar.vim	/^function! s:IsValidFile(fname, ftype) abort$/;"	f
s:JumpToTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:JumpToTag(stay_in_tagbar) abort$/;"	f
s:Jump_Back	plugged/rust.vim/autoload/rust.vim	/^function! s:Jump_Back()$/;"	f
s:Jump_Forward	plugged/rust.vim/autoload/rust.vim	/^function! s:Jump_Forward()$/;"	f
s:KeyMap	plugged/nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:KeyMap.Add	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
s:KeyMap.All	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
s:KeyMap.BindAll	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
s:KeyMap.Create	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
s:KeyMap.FindFor	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
s:KeyMap.Invoke	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
s:KeyMap.Remove	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
s:KeyMap.bind	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
s:KeyMap.invoke	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
s:LastIndexOfDelim	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:LastIndexOfDelim(delim, str)$/;"	f
s:Left	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Left(...)$/;"	f
s:LeftMostIndx	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:LeftMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
s:LoadUserTypeDefs	plugged/tagbar/autoload/tagbar.vim	/^function! s:LoadUserTypeDefs(...) abort$/;"	f
s:Make	plugged/neomake/autoload/neomake.vim	/^function! s:Make(options) abort$/;"	f
s:MakeJob	plugged/neomake/autoload/neomake.vim	/^function! s:MakeJob(make_id, options) abort$/;"	f
s:MapKeys	plugged/tagbar/autoload/tagbar.vim	/^function! s:MapKeys() abort$/;"	f
s:MavenOutputDirectory	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:MavenOutputDirectory() abort " {{{2$/;"	f
s:MenuController	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuController.New	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
s:MenuController._allIndexesFor	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
s:MenuController._current	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
s:MenuController._cursorDown	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
s:MenuController._cursorUp	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
s:MenuController._echoPrompt	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
s:MenuController._handleKeypress	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
s:MenuController._nextIndexFor	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
s:MenuController._restoreOptions	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
s:MenuController._saveOptions	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
s:MenuController._setCmdheight	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
s:MenuController.showMenu	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
s:MenuItem	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:MenuItem.All	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
s:MenuItem.AllEnabled	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
s:MenuItem.Create	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
s:MenuItem.CreateSeparator	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
s:MenuItem.CreateSubmenu	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
s:MenuItem.enabled	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
s:MenuItem.execute	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
s:MenuItem.isSeparator	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
s:MenuItem.isSubmenu	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
s:MinimizeMaxFoldLevel	plugged/tagbar/autoload/tagbar.vim	/^function! s:MinimizeMaxFoldLevel(fileinfo, tags) abort$/;"	f
s:Multipart	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Multipart()$/;"	f
s:N1	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let s:N1 = [ "#E6EEF3" , "#899BA6" , "" , ""  ]$/;"	v
s:N2	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let s:N2 = [ "#E6EEF3" , "#6A7D89" , "" , ""  ]$/;"	v
s:N3	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let s:N3 = [ "#C5D4DD" , "#556873" , "" , ""  ]$/;"	v
s:NERDFileNameEscape	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^let s:NERDFileNameEscape="[]#*$%'\\" ?`!&();<>\\\\"$/;"	v
s:NERDTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:NERDTree.AddPathFilter	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f
s:NERDTree.Close	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f
s:NERDTree.CloseIfQuitOnOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CloseIfQuitOnOpen()$/;"	f
s:NERDTree.CursorToBookmarkTable	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f
s:NERDTree.CursorToTreeWin	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin()$/;"	f
s:NERDTree.ExistsForBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f
s:NERDTree.ExistsForTab	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f
s:NERDTree.ForCurrentBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f
s:NERDTree.ForCurrentTab	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentTab()$/;"	f
s:NERDTree.GetWinNum	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f
s:NERDTree.IsOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f
s:NERDTree.MustBeOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f
s:NERDTree.New	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.New(path, type)$/;"	f
s:NERDTree.PathFilters	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f
s:NERDTree.changeRoot	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.changeRoot(node)$/;"	f
s:NERDTree.getRoot	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.getRoot()$/;"	f
s:NERDTree.isTabTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isTabTree()$/;"	f
s:NERDTree.isWinTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isWinTree()$/;"	f
s:NERDTree.previousBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.previousBuf()$/;"	f
s:NERDTree.render	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.render()$/;"	f
s:NERDTree.setPreviousBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.setPreviousBuf(bnum)$/;"	f
s:NERDTreeCacheDirtyDir	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeCacheDirtyDir(pathStr)$/;"	f
s:NERDTreeGetFileGitStatusKey	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeGetFileGitStatusKey(us, them)$/;"	f
s:NERDTreeGetIndicator	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeGetIndicator(statusKey)$/;"	f
s:NERDTreeGitStatusKeyMapping	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeGitStatusKeyMapping()$/;"	f
s:NERDTreeIndicatorMap	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let s:NERDTreeIndicatorMap = {$/;"	v
s:NERDTreeSortStarIndex	plugged/nerdtree/lib/nerdtree/path.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:NERDTreeTrimDoubleQuotes	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeTrimDoubleQuotes(pathStr)$/;"	f
s:NeomakeTestsResetMessages	plugged/neomake/tests/include/init.vim	/^function! s:NeomakeTestsResetMessages()$/;"	f
s:NerdEcho	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NerdEcho(msg, typeOfMsg)$/;"	f
s:Nested	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Nested()$/;"	f
s:Notifier	plugged/nerdtree/lib/nerdtree/notifier.vim	/^let s:Notifier = {}$/;"	v
s:Notifier.AddListener	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f
s:Notifier.GetListenersForEvent	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f
s:Notifier.GetListenersMap	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f
s:Notifier.NotifyListeners	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, nerdtree, params)$/;"	f
s:NumLinesInBuf	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NumLinesInBuf()$/;"	f
s:NumberOfLeadingTabs	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NumberOfLeadingTabs(s)$/;"	f
s:OnNeomakeCountsChanged	plugged/neomake/tests/include/init.vim	/^  function! s:OnNeomakeCountsChanged(context)$/;"	f
s:OnNeomakeFinished	plugged/neomake/tests/include/init.vim	/^  function! s:OnNeomakeFinished(context)$/;"	f
s:OnNeomakeJobFinished	plugged/neomake/tests/include/init.vim	/^  function! s:OnNeomakeJobFinished(context)$/;"	f
s:OpenFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:OpenFold() abort$/;"	f
s:OpenParents	plugged/tagbar/autoload/tagbar.vim	/^function! s:OpenParents(...) abort$/;"	f
s:OpenWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:OpenWindow(flags) abort$/;"	f
s:Opener	plugged/nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:Opener.New	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
s:Opener._bufInWindows	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f
s:Opener._checkToCloseTree	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
s:Opener._firstUsableWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f
s:Opener._gotoTargetWin	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
s:Opener._isWindowUsable	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f
s:Opener._newSplit	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
s:Opener._newVSplit	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
s:Opener._openDirectory	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
s:Opener._openFile	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
s:Opener._previousWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
s:Opener._restoreCursorPos	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
s:Opener._reuseWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
s:Opener._saveCursorPos	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
s:Opener.open	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
s:OptionNames	plugged/vdebug/plugin/vdebug.vim	/^function! s:OptionNames(A,L,P)$/;"	f
s:ParseTagline	plugged/tagbar/autoload/tagbar.vim	/^function! s:ParseTagline(part1, part2, typeinfo, fileinfo) abort$/;"	f
s:Path	plugged/nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:Path.AbsolutePathFor	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(pathStr)$/;"	f
s:Path.CopyingSupported	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
s:Path.Create	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
s:Path.JoinPathStrings	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
s:Path.New	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(pathStr)$/;"	f
s:Path.Resolve	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
s:Path.Slash	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Slash()$/;"	f
s:Path.WinToUnixPath	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
s:Path._escChars	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._escChars()$/;"	f
s:Path._ignorePatternMatches	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
s:Path._splitChunks	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._splitChunks(path)$/;"	f
s:Path._str	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
s:Path._strForCd	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
s:Path._strForEdit	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
s:Path._strForGlob	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
s:Path._strForUI	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
s:Path.bookmarkNames	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
s:Path.cacheDisplayString	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f
s:Path.changeToDir	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
s:Path.compareTo	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.compareTo(path)$/;"	f
s:Path.copy	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
s:Path.copyingWillOverwrite	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
s:Path.createParentDirectories	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
s:Path.delete	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
s:Path.displayString	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
s:Path.edit	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
s:Path.equals	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
s:Path.exists	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
s:Path.extractDriveLetter	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
s:Path.getDir	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
s:Path.getLastPathComponent	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
s:Path.getParent	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
s:Path.getSortKey	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortKey()$/;"	f
s:Path.getSortOrderIndex	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
s:Path.ignore	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore(nerdtree)$/;"	f
s:Path.isAncestor	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isAncestor(path)$/;"	f
s:Path.isHiddenUnder	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isHiddenUnder(path)$/;"	f
s:Path.isUnder	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(path)$/;"	f
s:Path.isUnixHiddenFile	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
s:Path.isUnixHiddenPath	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
s:Path.readInfoFromDisk	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
s:Path.refresh	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh(nerdtree)$/;"	f
s:Path.refreshFlags	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refreshFlags(nerdtree)$/;"	f
s:Path.rename	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
s:Path.str	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
s:Path.strTrunk	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
s:Path.tabnr	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
s:PerformMatchHighlight	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:PerformMatchHighlight(pattern)$/;"	f
s:PerformSyntaxHighlight	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:PerformSyntaxHighlight(pattern)$/;"	f
s:PhpCsFixerBaseTest	plugged/vim-php-cs-fixer/tests/misc.vim	/^function! s:PhpCsFixerBaseTest(fileName) abort "{{{$/;"	f
s:PlaceDelimitersAndInsBetween	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:PlaceDelimitersAndInsBetween()$/;"	f
s:PrintHelp	plugged/tagbar/autoload/tagbar.vim	/^function! s:PrintHelp() abort$/;"	f
s:PrintKinds	plugged/tagbar/autoload/tagbar.vim	/^function! s:PrintKinds(typeinfo, fileinfo) abort$/;"	f
s:PrintTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:PrintTag(tag, depth, output, fileinfo, typeinfo) abort$/;"	f
s:ProcessEntries	plugged/neomake/autoload/neomake.vim	/^function! s:ProcessEntries(jobinfo, entries, ...) abort$/;"	f
s:ProcessFile	plugged/tagbar/autoload/tagbar.vim	/^function! s:ProcessFile(fname, ftype) abort$/;"	f
s:ProcessJobOutput	plugged/neomake/autoload/neomake.vim	/^function! s:ProcessJobOutput(jobinfo, lines, source, ...) abort$/;"	f
s:ProcessPendingOutput	plugged/neomake/autoload/neomake.vim	/^function! s:ProcessPendingOutput(jobinfo, lines, source) abort$/;"	f
s:ProcessTag	plugged/tagbar/autoload/tagbar.vim	/^function s:ProcessTag(name, filename, pattern, fields, is_split, typeinfo, fileinfo) abort$/;"	f
s:R1	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let s:R1 = [ "#E6EEF3" , "#9A93E1" , "" , "" ]$/;"	v
s:R2	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let s:R2 = s:N2$/;"	v
s:R3	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let s:R3 = s:N3$/;"	v
s:ReadClassPathFile	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:ReadClassPathFile(classpathFile) abort$/;"	f
s:RecoverStateAfterLineComment	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RecoverStateAfterLineComment(state)$/;"	f
s:Refresh	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! s:Refresh()$/;"	f
s:RegisterJobOutput	plugged/neomake/autoload/neomake.vim	/^function! s:RegisterJobOutput(jobinfo, lines, source) abort$/;"	f
s:RemoveDelimiters	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RemoveDelimiters(left, right, line)$/;"	f
s:RenderContent	plugged/tagbar/autoload/tagbar.vim	/^function! s:RenderContent(...) abort$/;"	f
s:RenderKeepView	plugged/tagbar/autoload/tagbar.vim	/^function! s:RenderKeepView(...) abort$/;"	f
s:ReopenWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:ReopenWindow(delbufname) abort$/;"	f
s:ReplaceDelims	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceDelims(toReplace1, toReplace2, replacor1, replacor2, str)$/;"	f
s:ReplaceLeftMostDelim	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceLeftMostDelim(toReplace, replacor, str)$/;"	f
s:ReplaceRightMostDelim	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceRightMostDelim(toReplace, replacor, str)$/;"	f
s:ResetShellSlash	plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:ResetShellSlash() " {{{2$/;"	f
s:RestoreScreenState	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RestoreScreenState()$/;"	f
s:RestoreSession	plugged/tagbar/autoload/tagbar.vim	/^function! s:RestoreSession() abort$/;"	f
s:Rg	plugged/vim-ripgrep/plugin/vim-ripgrep.vim	/^fun! s:Rg(txt)$/;"	f
s:RgGrepContext	plugged/vim-ripgrep/plugin/vim-ripgrep.vim	/^fun! s:RgGrepContext(search, txt)$/;"	f
s:RgHasFile	plugged/vim-ripgrep/plugin/vim-ripgrep.vim	/^fun! s:RgHasFile(path)$/;"	f
s:RgHighlight	plugged/vim-ripgrep/plugin/vim-ripgrep.vim	/^fun! s:RgHighlight(txt)$/;"	f
s:RgMakePath	plugged/vim-ripgrep/plugin/vim-ripgrep.vim	/^fun! s:RgMakePath(dirs, dir)$/;"	f
s:RgPathContext	plugged/vim-ripgrep/plugin/vim-ripgrep.vim	/^fun! s:RgPathContext(search, txt)$/;"	f
s:RgRootDir	plugged/vim-ripgrep/plugin/vim-ripgrep.vim	/^fun! s:RgRootDir()$/;"	f
s:RgSearch	plugged/vim-ripgrep/plugin/vim-ripgrep.vim	/^fun! s:RgSearch(txt)$/;"	f
s:RgSearchTerm	plugged/vim-ripgrep/plugin/vim-ripgrep.vim	/^fun! s:RgSearchTerm(txt)$/;"	f
s:RgShowRoot	plugged/vim-ripgrep/plugin/vim-ripgrep.vim	/^fun! s:RgShowRoot()$/;"	f
s:Right	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Right(...)$/;"	f
s:RightMostIndx	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RightMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
s:RmDir	plugged/rust.vim/autoload/rust.vim	/^function! s:RmDir(path)$/;"	f
s:Run	plugged/rust.vim/autoload/rust.vim	/^function! s:Run(dict, rustc_args, args)$/;"	f
s:RunRustfmt	plugged/rust.vim/autoload/rustfmt.vim	/^function! s:RunRustfmt(command, curw, tmpname)$/;"	f
s:RustfmtCommand	plugged/rust.vim/autoload/rustfmt.vim	/^function! s:RustfmtCommand(filename)$/;"	f
s:RustfmtCommandRange	plugged/rust.vim/autoload/rustfmt.vim	/^function! s:RustfmtCommandRange(filename, line1, line2)$/;"	f
s:SID	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function s:SID()$/;"	f
s:SID	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function s:SID()$/;"	f
s:SID_PREFIX	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! s:SID_PREFIX() abort$/;"	f
s:SNR	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val]))/;"	v
s:SaveScreenState	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SaveScreenState()$/;"	f
s:SetDefault	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! s:SetDefault(var, val)$/;"	f
s:SetFoldLevel	plugged/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevel(level, force) abort$/;"	f
s:SetFoldLevelRecursive	plugged/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevelRecursive(fileinfo, tags, level) abort$/;"	f
s:SetStatusLine	plugged/tagbar/autoload/tagbar.vim	/^function! s:SetStatusLine()$/;"	f
s:SetUpForNewFiletype	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SetUpForNewFiletype(filetype, forceReset)$/;"	f
s:SetupListeners	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:SetupListeners()$/;"	f
s:SetupListeners	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! s:SetupListeners()$/;"	f
s:SetupStateBeforeLineComment	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SetupStateBeforeLineComment(topLine, bottomLine)$/;"	f
s:SexyNested	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SexyNested()$/;"	f
s:ShellTokenize	plugged/rust.vim/autoload/rust.vim	/^function! s:ShellTokenize(text)$/;"	f
s:ShouldHighlight	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:ShouldHighlight()$/;"	f
s:ShouldStripWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:ShouldStripWhitespace()$/;"	f
s:ShowInPreviewWin	plugged/tagbar/autoload/tagbar.vim	/^function! s:ShowInPreviewWin() abort$/;"	f
s:ShowPrototype	plugged/tagbar/autoload/tagbar.vim	/^function! s:ShowPrototype(short) abort$/;"	f
s:ShrinkIfExpanded	plugged/tagbar/autoload/tagbar.vim	/^function! s:ShrinkIfExpanded() abort$/;"	f
s:SpawnExternalParser	plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:SpawnExternalParser(cmd) " {{{2$/;"	f
s:State	plugged/tagbar/autoload/tagbar/state.vim	/^let s:State = {$/;"	v
s:State.New	plugged/tagbar/autoload/tagbar/state.vim	/^function! s:State.New() abort dict$/;"	f
s:State.getCurrent	plugged/tagbar/autoload/tagbar/state.vim	/^function! s:State.getCurrent(force_current) abort dict$/;"	f
s:State.setCurrentFile	plugged/tagbar/autoload/tagbar/state.vim	/^function! s:State.setCurrentFile(fileinfo) abort dict$/;"	f
s:State.setPaused	plugged/tagbar/autoload/tagbar/state.vim	/^function! s:State.setPaused() abort dict$/;"	f
s:StripWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:StripWhitespace( line1, line2 )$/;"	f
s:StripWhitespaceMotion	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^    function! s:StripWhitespaceMotion(type)$/;"	f
s:SwapOuterMultiPartDelimsForPlaceHolders	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwapOuterMultiPartDelimsForPlaceHolders(line)$/;"	f
s:SwapOuterPlaceHoldersForMultiPartDelims	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwapOuterPlaceHoldersForMultiPartDelims(line)$/;"	f
s:SwitchToAlternativeDelimiters	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwitchToAlternativeDelimiters(printMsgs)$/;"	f
s:TYPE	autoload/plug.vim	/^let s:TYPE = {$/;"	v
s:TYPE	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:TYPE = {'dict': type({}), 'funcref': type(function('call')), 'string': type(''), 'list': t/;"	v
s:TYPE_DICT	plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_LIST	plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_STRING	plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^let s:TYPE_STRING = type('')$/;"	v
s:TabSpace	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:TabSpace()$/;"	f
s:TabbedCol	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:TabbedCol(line, col)$/;"	f
s:Tabdo	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:Tabdo(command)$/;"	f
s:TagbarBufName	plugged/tagbar/autoload/tagbar.vim	/^function! s:TagbarBufName() abort$/;"	f
s:ToggleAutoclose	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleAutoclose() abort$/;"	f
s:ToggleCaseInsensitive	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleCaseInsensitive() abort$/;"	f
s:ToggleFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleFold() abort$/;"	f
s:ToggleHelp	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleHelp() abort$/;"	f
s:ToggleHideNonPublicTags	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleHideNonPublicTags() abort$/;"	f
s:ToggleSort	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleSort() abort$/;"	f
s:ToggleStripWhitespaceOnSave	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:ToggleStripWhitespaceOnSave()$/;"	f
s:ToggleWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:ToggleWhitespace()$/;"	f
s:ToggleWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleWindow(flags) abort$/;"	f
s:TransformUserTypeDef	plugged/tagbar/autoload/tagbar.vim	/^function! s:TransformUserTypeDef(def) abort$/;"	f
s:TreeDirNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeDirNode.AbsoluteTreeRoot	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
s:TreeDirNode.GetSelected	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
s:TreeDirNode.New	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path, nerdtree)$/;"	f
s:TreeDirNode._glob	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._glob(pattern, all)$/;"	f
s:TreeDirNode._initChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
s:TreeDirNode._openInNewTab	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
s:TreeDirNode.activate	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
s:TreeDirNode.addChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
s:TreeDirNode.close	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
s:TreeDirNode.closeChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
s:TreeDirNode.createChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
s:TreeDirNode.displayString	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.displayString()$/;"	f
s:TreeDirNode.findNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
s:TreeDirNode.getCascade	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascade()$/;"	f
s:TreeDirNode.getChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
s:TreeDirNode.getChildByIndex	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
s:TreeDirNode.getChildCount	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
s:TreeDirNode.getChildIndex	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
s:TreeDirNode.getVisibleChildCount	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
s:TreeDirNode.getVisibleChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
s:TreeDirNode.hasVisibleChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
s:TreeDirNode.isCascadable	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.isCascadable()$/;"	f
s:TreeDirNode.open	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
s:TreeDirNode.openAlong	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
s:TreeDirNode.openExplorer	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
s:TreeDirNode.openInNewTab	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
s:TreeDirNode.openRecursively	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
s:TreeDirNode.refresh	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
s:TreeDirNode.refreshDirFlags	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f
s:TreeDirNode.refreshFlags	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f
s:TreeDirNode.removeChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
s:TreeDirNode.reveal	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path, ...)$/;"	f
s:TreeDirNode.sortChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
s:TreeDirNode.toggleOpen	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
s:TreeDirNode.transplantChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
s:TreeFileNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:TreeFileNode.GetRootForTab	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
s:TreeFileNode.GetSelected	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
s:TreeFileNode.New	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path, nerdtree)$/;"	f
s:TreeFileNode._renderToString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText)$/;"	f
s:TreeFileNode.activate	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
s:TreeFileNode.bookmark	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
s:TreeFileNode.cacheParent	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
s:TreeFileNode.clearBookmarks	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
s:TreeFileNode.copy	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
s:TreeFileNode.delete	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
s:TreeFileNode.displayString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
s:TreeFileNode.equals	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
s:TreeFileNode.findNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
s:TreeFileNode.findOpenDirSiblingWithVisibleChildren	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
s:TreeFileNode.findSibling	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
s:TreeFileNode.getNerdtree	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getNerdtree()$/;"	f
s:TreeFileNode.isRoot	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
s:TreeFileNode.isVisible	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
s:TreeFileNode.open	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
s:TreeFileNode.openInNewTab	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
s:TreeFileNode.openSplit	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
s:TreeFileNode.openVSplit	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
s:TreeFileNode.putCursorHere	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
s:TreeFileNode.refresh	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
s:TreeFileNode.refreshFlags	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f
s:TreeFileNode.rename	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
s:TreeFileNode.renderToString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
s:TrimTrailingWhitespace	plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:TrimTrailingWhitespace() " {{{{$/;"	f
s:TrimTrailingWhitespace	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:TrimTrailingWhitespace(line)$/;"	f
s:TryStack	plugged/neomake/autoload/neomake/makers/ft/haskell.vim	/^function! s:TryStack(maker) abort$/;"	f
s:UI	plugged/nerdtree/lib/nerdtree/ui.vim	/^let s:UI = {}$/;"	v
s:UI.IndentWid	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.IndentWid()$/;"	f
s:UI.MarkupReg	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.MarkupReg()$/;"	f
s:UI.New	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.New(nerdtree)$/;"	f
s:UI.UpDirLine	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.UpDirLine()$/;"	f
s:UI._dumpHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._dumpHelp()$/;"	f
s:UI._indentLevelFor	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f
s:UI._renderBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._renderBookmarks()$/;"	f
s:UI._stripMarkup	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._stripMarkup(line)$/;"	f
s:UI.centerView	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.centerView()$/;"	f
s:UI.getLineNum	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getLineNum(file_node)$/;"	f
s:UI.getPath	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getPath(ln)$/;"	f
s:UI.getRootLineNum	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getRootLineNum()$/;"	f
s:UI.getShowBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowBookmarks()$/;"	f
s:UI.getShowFiles	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowFiles()$/;"	f
s:UI.getShowHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHelp()$/;"	f
s:UI.getShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHidden()$/;"	f
s:UI.isIgnoreFilterEnabled	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isIgnoreFilterEnabled()$/;"	f
s:UI.isMinimal	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isMinimal()$/;"	f
s:UI.render	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.render()$/;"	f
s:UI.renderViewSavingPosition	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f
s:UI.restoreScreenState	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.restoreScreenState()$/;"	f
s:UI.saveScreenState	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.saveScreenState()$/;"	f
s:UI.setShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.setShowHidden(val)$/;"	f
s:UI.toggleHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleHelp()$/;"	f
s:UI.toggleIgnoreFilter	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f
s:UI.toggleShowBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f
s:UI.toggleShowFiles	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f
s:UI.toggleShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f
s:UI.toggleZoom	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleZoom()$/;"	f
s:UnEsc	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UnEsc(str, escChar)$/;"	f
s:UncommentLineNormal	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLineNormal(line)$/;"	f
s:UncommentLines	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLines(topLine, bottomLine)$/;"	f
s:UncommentLinesNormal	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLinesNormal(topline, bottomline)$/;"	f
s:UncommentLinesSexy	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLinesSexy(topline, bottomline)$/;"	f
s:UntabbedCol	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UntabbedCol(line, col)$/;"	f
s:UpdateDub	plugged/neomake/autoload/neomake/makers/ft/d.vim	/^function! s:UpdateDub() abort$/;"	f
s:UseConfigFiles	plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:UseConfigFiles()$/;"	f
s:UseConfigFiles_ExternalCommand	plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:UseConfigFiles_ExternalCommand() " {{{2$/;"	f
s:UseConfigFiles_Python_Builtin	plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:UseConfigFiles_Python_Builtin() " {{{2$/;"	f
s:UseConfigFiles_Python_External	plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:UseConfigFiles_Python_External() " {{{2$/;"	f
s:V1	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let s:V1 = [ "#E6EEF3" , "#D18EC2" , "" , "" ]$/;"	v
s:V2	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let s:V2 = s:N2$/;"	v
s:V3	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let s:V3 = s:N3$/;"	v
s:VERSION_FACTOR	plugged/GoldenView.Vim/autoload/GoldenView/zl/rc.vim	/^let s:VERSION_FACTOR = str2float('0.01')$/;"	v
s:Vdebug_get_options	plugged/vdebug/plugin/vdebug.vim	/^function! s:Vdebug_get_options()$/;"	f
s:Vital	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:Vital = {}$/;"	v
s:Vital	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:Vital	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:WhitespaceInit	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:WhitespaceInit()$/;"	f
s:Windo	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:Windo(command)$/;"	f
s:WithPath	plugged/rust.vim/autoload/rust.vim	/^function! s:WithPath(func, ...)$/;"	f
s:ZoomWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:ZoomWindow() abort$/;"	f
s:_SID	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^  function! s:_SID() abort$/;"	f
s:_SID	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^  function! s:_SID() abort$/;"	f
s:_compare	plugged/GoldenView.Vim/autoload/GoldenView/zl/list.vim	/^function! s:_compare(a, b)$/;"	f
s:_compare	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
s:_create_hash	plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:_create_hash(dir, str) abort$/;"	f
s:_default_compare	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
s:_dot_to_sharp	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
s:_encode_name	plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:_encode_name(cache_dir, filename) abort$/;"	f
s:_eval_match	plugged/GoldenView.Vim/autoload/GoldenView/zl/rule.vim	/^function! s:_eval_match(type, nrule, ...)$/;"	f
s:_exists_autoload_func_with_source	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_exists_autoload_func_with_source(funcname) abort$/;"	f
s:_extract_files	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
s:_file2module	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_file2module(file) abort$/;"	f
s:_function	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^  function! s:_function(fstr) abort$/;"	f
s:_getPrefix	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:_getPrefix() abort dict$/;"	f
s:_get_builtin_module	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
s:_get_module	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_get_module(name) abort dict$/;"	f
s:_global_vital_files	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_global_vital_files() abort$/;"	f
s:_handleOldOptions	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:_handleOldOptions() abort$/;"	f
s:_import	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_import(name) abort dict$/;"	f
s:_import_func_name	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
s:_module_path	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_module_path(name) abort$/;"	f
s:_module_sid	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_module_sid(name) abort$/;"	f
s:_module_sid_base_dir	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
s:_pad_with_char	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
s:_path2project_directory_git	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
s:_path2project_directory_others	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
s:_path2project_directory_svn	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
s:_plugin_name	plugged/neosnippet.vim/autoload/vital/_neosnippet.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_redir	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_redir(cmd) abort$/;"	f
s:_replace	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
s:_return	plugged/GoldenView.Vim/autoload/GoldenView/zl/rule.vim	/^function! s:_return(nrule, type, ret)$/;"	f
s:_runtime	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_runtime(path) abort$/;"	f
s:_s	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_self_vital_files	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_self_vital_files() abort$/;"	f
s:_sfuncname	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
s:_sid	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
s:_source	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:_source(path) abort$/;"	f
s:_split_by_wcswidth	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
s:_split_by_wcswidth_once	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
s:_unify_path	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^  function! s:_unify_path(path) abort$/;"	f
s:_unify_path_cache	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_uniq	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^  function! s:_uniq(list) abort$/;"	f
s:_vital_created	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_depends	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_loaded	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_warn_deprecated	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f
s:_wcwidth	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
s:_wcwidth	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
s:abort_next_makers	plugged/neomake/autoload/neomake.vim	/^function! s:abort_next_makers(make_id) abort$/;"	f
s:abs_path	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:abs_path(bufnr, shellesc)$/;"	f
s:accents	plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:accents = {}$/;"	v
s:action_for	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:action_for(key, ...)$/;"	f
s:action_queue	plugged/neomake/autoload/neomake.vim	/^    let s:action_queue = []$/;"	v
s:action_queue_registered_events	plugged/neomake/autoload/neomake.vim	/^    let s:action_queue_registered_events = []$/;"	v
s:action_queue_timer_timeouts	plugged/neomake/autoload/neomake.vim	/^let s:action_queue_timer_timeouts = get(g:, 'neomake_action_queue_timeouts', {1: 100, 2: 200, 3:/;"	v
s:action_table	plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^let s:action_table = {}$/;"	v
s:action_table	plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^let s:action_table.expand = {$/;"	v
s:action_table	plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^let s:action_table.preview = {$/;"	v
s:action_table	plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^let s:action_table.unite__new_candidate = {$/;"	v
s:action_table	plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^let s:action_table = {}$/;"	v
s:action_table	plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^let s:action_table.neosnippet_source = {$/;"	v
s:action_table.expand.func	plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! s:action_table.expand.func(candidate) abort$/;"	f
s:action_table.neosnippet_source.func	plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^function! s:action_table.neosnippet_source.func(candidates) abort$/;"	f
s:action_table.preview.func	plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! s:action_table.preview.func(candidates) abort$/;"	f
s:action_table.unite__new_candidate.func	plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! s:action_table.unite__new_candidate.func(candidate) abort$/;"	f
s:activateAll	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateAll()$/;"	f
s:activateBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateBookmark(bm)$/;"	f
s:activateDirNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateDirNode(directoryNode)$/;"	f
s:activateFileNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateFileNode(node)$/;"	f
s:active_winnr	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:active_winnr = -1$/;"	v
s:addChild	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:addChild(tag) abort dict$/;"	f
s:addTag	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:addTag(tag) abort dict$/;"	f
s:add_db	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:add_db(db_file) abort$/;"	f
s:add_dummy_sign	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:add_dummy_sign(bufnr) abort$/;"	f
s:add_pending_output	plugged/neomake/autoload/neomake.vim	/^function! s:add_pending_output(jobinfo, source, lines) abort$/;"	f
s:add_section	plugged/vim-airline/autoload/airline/extensions/default.vim	/^  function! s:add_section(builder, context, key)$/;"	f
s:add_snippet_attribute	plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! s:add_snippet_attribute(snippets_file, line, linenr, snippet_dict) abort$/;"	f
s:add_snr	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	plugged/tagbar/autoload/tagbar/prototypes/pseudotag.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	plugged/tagbar/autoload/tagbar/prototypes/splittag.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	plugged/tagbar/autoload/tagbar/prototypes/typeinfo.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_tag_recursive	plugged/tagbar/autoload/tagbar.vim	/^function! s:add_tag_recursive(parent, taginfo, pathlist) abort$/;"	f
s:added_db_files	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^let s:added_db_files = {}$/;"	v
s:added_dbs	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:added_dbs = []$/;"	v
s:adjust_header	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:adjust_header(bufnr, hunk_diff)$/;"	f
s:adjust_hunk_summary	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:adjust_hunk_summary(hunk_diff) abort$/;"	f
s:ag_handler	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_handler(lines, with_column)$/;"	f
s:ag_to_qf	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_to_qf(line, with_column)$/;"	f
s:airline_a_inactive	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_inactive = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:airline_a_insert	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_insert = [ '#00005f' , '#00dfff' , 17  , 45  ]$/;"	v
s:airline_a_normal	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_normal   = [ '#00005f' , '#dfff00' , 17  , 190 ]$/;"	v
s:airline_a_visual	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_visual = [ '#000000' , '#ffaf00' , 232 , 214 ]$/;"	v
s:airline_ale_count	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:airline_ale_count(cnt, symbol)$/;"	f
s:airline_ale_get_line_number	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:airline_ale_get_line_number(cnt, type) abort$/;"	f
s:airline_b_inactive	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_inactive = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:airline_b_insert	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_insert = [ '#ffffff' , '#005fff' , 255 , 27  ]$/;"	v
s:airline_b_normal	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_normal   = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:airline_b_visual	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_visual = [ '#000000' , '#ff5f00' , 232 , 202 ]$/;"	v
s:airline_c_inactive	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_inactive = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
s:airline_c_insert	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_insert = [ '#ffffff' , '#000080' , 15  , 17  ]$/;"	v
s:airline_c_normal	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_normal   = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
s:airline_c_visual	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_visual = [ '#ffffff' , '#5f0000' , 15  , 52  ]$/;"	v
s:airline_initialized	plugged/vim-airline/plugin/airline.vim	/^let s:airline_initialized = 0$/;"	v
s:airline_refresh	plugged/vim-airline/plugin/airline.vim	/^function! s:airline_refresh()$/;"	f
s:airline_tagbar_last_lookup_time	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_time = 0$/;"	v
s:airline_tagbar_last_lookup_val	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_val = ''$/;"	v
s:airline_theme	plugged/vim-airline/plugin/airline.vim	/^function! s:airline_theme(...)$/;"	f
s:airline_toggle	plugged/vim-airline/plugin/airline.vim	/^function! s:airline_toggle()$/;"	f
s:ale_refresh	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:ale_refresh()$/;"	f
s:align_lists	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_lists(lists)$/;"	f
s:align_pairs	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_pairs(list)$/;"	f
s:all	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
s:all_files	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:all_files()$/;"	f
s:already_queued_actions	plugged/neomake/autoload/neomake.vim	/^function! s:already_queued_actions(jobinfo) abort$/;"	f
s:and	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:and(xs) abort$/;"	f
s:ansi	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ansi(str, group, default, ...)$/;"	f
s:ansi	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:ansi = {'black': 30, 'red': 31, 'green': 32, 'yellow': 33, 'blue': 34, 'magenta': 35, 'cya/;"	v
s:any	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
s:append_ul	autoload/plug.vim	/^function! s:append_ul(lnum, text)$/;"	f
s:apply_highlight_fix	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:apply_highlight_fix()$/;"	f
s:apply_user_input_next	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:apply_user_input_next(mode)$/;"	f
s:ask	autoload/plug.vim	/^function! s:ask(message, ...)$/;"	f
s:ask_no_interrupt	autoload/plug.vim	/^function! s:ask_no_interrupt(...)$/;"	f
s:assert	plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/deoplete.nvim/test/autoload/deoplete/util.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/neosnippet.vim/test/functions.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vim-php-cs-fixer/tests/misc.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assign_name	autoload/plug.vim	/^function! s:assign_name()$/;"	f
s:assoc	autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	f
s:async	plugged/neomake/autoload/neomake.vim	/^let s:async = has('nvim')$/;"	v
s:auEvents	plugged/undotree/plugin/undotree.vim	/^let s:auEvents = "BufEnter,InsertLeave,CursorMoved,BufWritePost"$/;"	v
s:autocommands_done	plugged/tagbar/autoload/tagbar.vim	/^let s:autocommands_done = 0$/;"	v
s:automake_delayed_cb	plugged/neomake/autoload/neomake/configure.vim	/^function! s:automake_delayed_cb(timer) abort$/;"	f
s:available	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^let s:available = has('nvim') || ($/;"	v
s:bad_input	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:bad_input = 0$/;"	v
s:bang	autoload/plug.vim	/^function! s:bang(cmd, ...)$/;"	f
s:bar	autoload/plug.vim	/^function! s:bar()$/;"	f
s:base_sign_id	plugged/neomake/autoload/neomake/signs.vim	/^let s:base_sign_id = 5000$/;"	v
s:base_spec	autoload/plug.vim	/^let s:base_spec = { 'branch': 'master', 'frozen': 0 }$/;"	v
s:basic16	plugged/vim-airline/autoload/airline/msdos.vim	/^let s:basic16 = [$/;"	v
s:before_function_called	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:before_function_called = 0$/;"	v
s:better_whitespace_initialized	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let s:better_whitespace_initialized = 0$/;"	v
s:bin	plugged/fzf.vim/autoload/fzf/vim.vim	/^    let s:bin.preview = fnamemodify(s:bin.preview, ':8')$/;"	v
s:bin	plugged/fzf.vim/autoload/fzf/vim.vim	/^    let s:bin.preview = split(system('for %A in ("'.s:bin.preview.'") do @echo %~sA'), "\\n")[0]$/;"	v
s:bin	plugged/fzf.vim/autoload/fzf/vim.vim	/^  let s:bin.preview = (executable('ruby') ? 'ruby' : 'bash').' '.escape(s:bin.preview, '\\')$/;"	v
s:bin	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin = {$/;"	v
s:bin_dir	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin_dir = expand('<sfile>:h:h:h').'\/bin\/'$/;"	v
s:binary_search	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
s:bind_makers_for_job	plugged/neomake/autoload/neomake/core.vim	/^function! s:bind_makers_for_job(options, makers, ...) abort$/;"	f
s:break	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
s:btags_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_sink(lines)$/;"	f
s:btags_source	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_source(tag_cmds)$/;"	f
s:buf_min_count	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:buf_min_count = get(g:, 'airline#extensions#tabline#buffer_min_count', 0)$/;"	v
s:buf_modified_symbol	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:buf_modified_symbol = g:airline_symbols.modified$/;"	v
s:buf_nr_format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:buf_nr_format = get(g:, 'airline#extensions#tabline#buffer_nr_format', '%s: ')$/;"	v
s:buf_nr_show	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:buf_nr_show = get(g:, 'airline#extensions#tabline#buffer_nr_show', 0)$/;"	v
s:buffer_line_handler	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_line_handler(lines)$/;"	f
s:buffer_lines	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_lines()$/;"	f
s:buffer_seqno	plugged/tagbar/autoload/tagbar.vim	/^let s:buffer_seqno = 0$/;"	v
s:buflisted	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buflisted()$/;"	f
s:buflisted_sorted	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buflisted_sorted()$/;"	f
s:bufnr	plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:bufnr       = bufnr('')$/;"	v
s:bufopen	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:bufopen(lines)$/;"	f
s:build_command	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:build_command(color)$/;"	f
s:build_command	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:build_command(cmd)$/;"	f
s:build_sections	plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! s:build_sections(builder, context, keys)$/;"	f
s:builder	plugged/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 0})$/;"	v
s:builder	plugged/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:builder	plugged/vim-airline/t/extensions_default.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:c_flag	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:c_flag = s:git_supports_command_line_config_override()$/;"	v
s:cache	plugged/neomake/autoload/neomake/statusline.vim	/^let s:cache = {}$/;"	v
s:cache_project_root	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:cache_project_root(path) abort$/;"	f
s:cache_sid	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:cache_sid = {}$/;"	v
s:cd_to_jobs_cwd	plugged/neomake/autoload/neomake.vim	/^function! s:cd_to_jobs_cwd(jobinfo) abort$/;"	f
s:cd_to_vcs_root	plugged/vim-startify/autoload/startify.vim	/^function! s:cd_to_vcs_root(path) abort$/;"	f
s:chCwd	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chCwd(node)$/;"	f
s:chRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chRoot(node)$/;"	f
s:channel_log	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:channel_log = s:plugin_dir.'channel.log'$/;"	v
s:char	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:char = ''$/;"	v
s:char_bottom_left	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_bottom_left  = ['*', '╰'][s:unicode]$/;"	v
s:char_bottom_right	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_bottom_right = ['*', '╯'][s:unicode]$/;"	v
s:char_range	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
s:char_sides	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_sides        = ['|', '│'][s:unicode]$/;"	v
s:char_top_bottom	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_top_bottom   = ['-', '─'][s:unicode]$/;"	v
s:char_top_left	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_top_left     = ['*', '╭'][s:unicode]$/;"	v
s:char_top_right	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_top_right    = ['*', '╮'][s:unicode]$/;"	v
s:check_custom_var	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! s:check_custom_var(source_name, old_var, new_var) abort$/;"	f
s:check_defined	plugged/vim-airline/autoload/airline/init.vim	/^function! s:check_defined(variable, default)$/;"	f
s:check_defined_section	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:check_defined_section(name)$/;"	f
s:check_mixed_indent	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent()$/;"	f
s:check_mixed_indent_file	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent_file()$/;"	f
s:check_neovim	plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:check_neovim() abort$/;"	f
s:check_old_cache	plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:check_old_cache(cache_dir, filename) abort$/;"	f
s:check_omnifunc	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:check_omnifunc(context) abort$/;"	f
s:check_required_python_for_deoplete	plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:check_required_python_for_deoplete() abort$/;"	f
s:check_ruby	autoload/plug.vim	/^function! s:check_ruby()$/;"	f
s:check_t_list	plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:check_t_list() abort$/;"	f
s:check_timers	plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:check_timers() abort$/;"	f
s:check_user_options	plugged/vim-startify/autoload/startify.vim	/^function! s:check_user_options(path) abort$/;"	f
s:checked_ctags	plugged/tagbar/autoload/tagbar.vim	/^let s:checked_ctags       = 0$/;"	v
s:checked_ctags_types	plugged/tagbar/autoload/tagbar.vim	/^let s:checked_ctags_types = 0$/;"	v
s:checkout	autoload/plug.vim	/^function! s:checkout(spec)$/;"	f
s:chomp	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:chomp(str)$/;"	f
s:chomp	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
s:chop	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
s:chsh	autoload/plug.vim	/^function! s:chsh(swap)$/;"	f
s:clean	autoload/plug.vim	/^function! s:clean(force)$/;"	f
s:clean_action_queue	plugged/neomake/autoload/neomake.vim	/^function! s:clean_action_queue(job_or_make_info) abort$/;"	f
s:clean_action_queue_augroup	plugged/neomake/autoload/neomake.vim	/^function! s:clean_action_queue_augroup() abort$/;"	f
s:clean_for_new_make	plugged/neomake/autoload/neomake.vim	/^function! s:clean_for_new_make(make_info) abort$/;"	f
s:clean_make_info	plugged/neomake/autoload/neomake.vim	/^function! s:clean_make_info(make_info, ...) abort$/;"	f
s:clean_qf_annotations	plugged/neomake/autoload/neomake/quickfix.vim	/^function! s:clean_qf_annotations() abort$/;"	f
s:clear	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:clear(list) abort$/;"	f
s:clear	plugged/vim-airline/t/init.vim	/^function! s:clear()$/;"	f
s:clear	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:clear(bufnr)$/;"	f
s:clearOldFolds	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:clearOldFolds() abort dict$/;"	f
s:clear_cache	plugged/neomake/autoload/neomake/statusline.vim	/^function! s:clear_cache(bufnr) abort$/;"	f
s:close	plugged/vim-startify/autoload/startify.vim	/^function! s:close() abort$/;"	f
s:closeChildren	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeChildren(node)$/;"	f
s:closeCurrentDir	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeCurrentDir(node)$/;"	f
s:closeFold	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:closeFold() abort dict$/;"	f
s:closeFold	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:closeFold() abort dict$/;"	f
s:closeKindFold	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:closeKindFold(kind) abort dict$/;"	f
s:closeTreeWindow	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeTreeWindow()$/;"	f
s:cm	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:cm = s:CursorManager.new()$/;"	v
s:cmd_history_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:cmd_history_sink(lines)$/;"	f
s:cntr	plugged/undotree/autoload/undotree.vim	/^let s:cntr = 0$/;"	v
s:color_template	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^let s:color_template = get(g:, 'airline#extensions#ctrlp#color_template', 'insert')$/;"	v
s:color_template	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:color_template = get(g:, 'airline#extensions#promptline#color_template', 'normal')$/;"	v
s:color_template	plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:color_template = get(g:, 'airline#extensions#tmuxline#color_template', 'normal')$/;"	v
s:column	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^let s:column = {$/;"	v
s:column.define_syntax	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! s:column.define_syntax(context) "{{{$/;"	f
s:column.get	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! s:column.get(file, context)$/;"	f
s:column.length	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! s:column.length(files, context)$/;"	f
s:column_display	plugged/vim-airline/autoload/airline/extensions/csv.vim	/^let s:column_display = get(g:, 'airline#extensions#csv#column_display', 'Number')$/;"	v
s:combinations	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
s:command_maker	plugged/neomake/autoload/neomake/utils.vim	/^let s:command_maker = {$/;"	v
s:command_maker._get_argv	plugged/neomake/autoload/neomake/utils.vim	/^function! s:command_maker._get_argv(jobinfo) abort dict$/;"	f
s:command_maker.fn	plugged/neomake/autoload/neomake/utils.vim	/^function! s:command_maker.fn(jobinfo) dict abort$/;"	f
s:command_maker_base	plugged/neomake/autoload/neomake.vim	/^let s:command_maker_base = copy(g:neomake#core#command_maker_base)$/;"	v
s:command_maker_base._bind_args	plugged/neomake/autoload/neomake.vim	/^function! s:command_maker_base._bind_args() abort dict$/;"	f
s:command_maker_base._get_argv	plugged/neomake/autoload/neomake.vim	/^function! s:command_maker_base._get_argv(jobinfo) abort dict$/;"	f
s:command_maker_base._get_fname_for_buffer	plugged/neomake/autoload/neomake.vim	/^function! s:command_maker_base._get_fname_for_buffer(jobinfo) abort$/;"	f
s:command_maker_base._get_tempfilename	plugged/neomake/autoload/neomake.vim	/^function! s:command_maker_base._get_tempfilename(jobinfo) abort dict$/;"	f
s:command_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:command_sink(lines)$/;"	f
s:commits	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits(buffer_local, args)$/;"	f
s:commits_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits_sink(lines)$/;"	f
s:common_head	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
s:compare_by_index	plugged/vim-startify/autoload/startify.vim	/^  function! s:compare_by_index(foo, bar)$/;"	f
s:compare_by_key_len	plugged/vim-startify/autoload/startify.vim	/^  function! s:compare_by_key_len(foo, bar)$/;"	f
s:compare_by_kind	plugged/tagbar/autoload/tagbar/sorting.vim	/^function! s:compare_by_kind(tag1, tag2) abort$/;"	f
s:compare_by_line	plugged/tagbar/autoload/tagbar/sorting.vim	/^function! s:compare_by_line(tag1, tag2) abort$/;"	f
s:compare_by_val_len	plugged/vim-startify/autoload/startify.vim	/^  function! s:compare_by_val_len(foo, bar)$/;"	f
s:compare_git_uri	autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	f
s:compare_pos	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:compare_pos(l, r)$/;"	f
s:compare_typeinfo	plugged/tagbar/autoload/tagbar/sorting.vim	/^let s:compare_typeinfo = {}$/;"	v
s:compile_script	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^    let s:compile_script = expand('<sfile>:p:h', 1).s:slash.'python'.s:slash.'compile.py'$/;"	v
s:complete_insert	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_insert(lines)$/;"	f
s:complete_trigger	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_trigger()$/;"	f
s:completion_async	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:completion_async(timer) abort$/;"	f
s:completion_begin	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:completion_begin(event) abort$/;"	f
s:completion_timer_start	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:completion_timer_start(event) abort$/;"	f
s:completion_timer_stop	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:completion_timer_stop() abort$/;"	f
s:concat	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:concat(list) abort$/;"	f
s:configure_buffer	plugged/neomake/autoload/neomake/configure.vim	/^function! s:configure_buffer(bufnr, ...) abort$/;"	f
s:configured_buffers	plugged/neomake/autoload/neomake/configure.vim	/^let s:configured_buffers = {}$/;"	v
s:conj	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
s:cons	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
s:contains_multibyte	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
s:contexts	plugged/vim-airline/autoload/airline.vim	/^let s:contexts = {}$/;"	v
s:core_funcrefs	plugged/vim-airline/autoload/airline.vim	/^let s:core_funcrefs = [$/;"	v
s:cow	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:cow = [$/;"	v
s:cpo_save	autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/fzf.vim/plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/rust.vim/compiler/rustc.vim	/^let s:cpo_save = &cpo$/;"	v
s:create	plugged/vim-airline/autoload/airline/section.vim	/^function! s:create(parts, append)$/;"	f
s:createKinddict	plugged/tagbar/autoload/tagbar/prototypes/typeinfo.vim	/^function! s:createKinddict() abort dict$/;"	f
s:create_dirs_for_file	plugged/neomake/autoload/neomake.vim	/^function! s:create_dirs_for_file(fpath) abort$/;"	f
s:create_last_session_link	plugged/vim-startify/autoload/startify.vim	/^function! s:create_last_session_link(spath)$/;"	f
s:create_locqf_list	plugged/neomake/autoload/neomake.vim	/^function! s:create_locqf_list(jobinfo, ...) abort$/;"	f
s:create_pseudotag	plugged/tagbar/autoload/tagbar.vim	/^function! s:create_pseudotag(name, parent, kind, typeinfo, fileinfo) abort$/;"	f
s:cs	plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^let s:cs = ctrlspace#context#Configuration().Symbols.CS$/;"	v
s:csi	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:csi(color, fg)$/;"	f
s:ctags_is_uctags	plugged/tagbar/autoload/tagbar.vim	/^let s:ctags_is_uctags     = 0$/;"	v
s:ctrlspace	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:ctrlspace = get(g:, 'CtrlSpaceLoaded', 0)$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_bufnr = -1$/;"	v
s:current_dir	plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:current_dir = expand('%:p:h')$/;"	v
s:current_errors	plugged/neomake/autoload/neomake.vim	/^let s:current_errors = {'project': {}, 'file': {}}$/;"	v
s:current_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:current_hunk() abort$/;"	f
s:current_modified	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_modified = 0$/;"	v
s:current_tabcnt	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:current_tabcnt = -1$/;"	v
s:current_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabnr	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_tabnr = -1$/;"	v
s:current_tabnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_tabnr = -1$/;"	v
s:current_visible_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_visible_buffers = []$/;"	v
s:cursor_moved	plugged/neomake/autoload/neomake/quickfix.vim	/^function! s:cursor_moved() abort$/;"	f
s:cursormoved_delayed_cb	plugged/neomake/autoload/neomake.vim	/^function! s:cursormoved_delayed_cb(...) abort$/;"	f
s:debug	plugged/undotree/autoload/undotree.vim	/^    let s:debug = 1$/;"	v
s:debug	plugged/undotree/autoload/undotree.vim	/^let s:debug = 0$/;"	v
s:debug_enabled	plugged/tagbar/autoload/tagbar/debug.vim	/^let s:debug_enabled = 0$/;"	v
s:debug_file	plugged/tagbar/autoload/tagbar/debug.vim	/^let s:debug_file = ''$/;"	v
s:debug_log	plugged/neomake/autoload/neomake/configure.vim	/^function! s:debug_log(msg, ...) abort$/;"	f
s:debugfile	plugged/undotree/autoload/undotree.vim	/^let s:debugfile = $HOME.'\/undotree_debug.log'$/;"	v
s:default_action	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:default_action = {$/;"	v
s:default_checks	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:default_checks = ['indent', 'trailing', 'mixed-indent-file']$/;"	v
s:default_delay	plugged/neomake/autoload/neomake/configure.vim	/^let s:default_delay = has('timers') ? 500 : 0$/;"	v
s:default_normal_maps	plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:default_normal_maps = {'!':1, '@':1, '=':1, 'q':1, 'r':1, 't':1, 'T':1, 'y':1, '[':1, ']':/;"	v
s:default_settings	plugged/neomake/autoload/neomake/configure.vim	/^let s:default_settings = {$/;"	v
s:default_visual_maps	plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:default_visual_maps = {'i':1, 'a':1, 'f':1, 'F':1, 't':1, 'T':1}$/;"	v
s:defaults	plugged/neomake/autoload/neomake/config.vim	/^let s:defaults = {$/;"	v
s:define_commands	autoload/plug.vim	/^function! s:define_commands()$/;"	f
s:define_completion_via_timer	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:define_completion_via_timer(event) abort$/;"	f
s:define_highlights	plugged/neomake/plugin/neomake.vim	/^function! s:define_highlights() abort$/;"	f
s:define_on_event	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:define_on_event(event) abort$/;"	f
s:define_sign_line_highlights	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_line_highlights() abort$/;"	f
s:define_sign_text	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_text() abort$/;"	f
s:defs	plugged/fzf.vim/plugin/fzf.vim	/^function! s:defs(commands)$/;"	f
s:delayed_update_files	plugged/tagbar/autoload/tagbar.vim	/^let s:delayed_update_files = []$/;"	v
s:delete	autoload/plug.vim	/^function! s:delete(range, force)$/;"	f
s:delete	plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:delete(cache_dir, filename) abort$/;"	f
s:deleteBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:deleteBookmark(bookmark)$/;"	f
s:delete_op	autoload/plug.vim	/^function! s:delete_op(type, ...)$/;"	f
s:deletefile	plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:deletefile(cache_dir, filename) abort$/;"	f
s:delimitMate_extra_excluded_regions	plugged/rust.vim/ftplugin/rust.vim	/^	let s:delimitMate_extra_excluded_regions = ',rustLifetimeCandidate,rustGenericLifetimeCandidate/;"	v
s:delimiterMap	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^let s:delimiterMap = {$/;"	v
s:dep_plugins_base	plugged/neomake/tests/vim/vimrc	/^  let s:dep_plugins_base = $NEOMAKE_TESTS_DEP_PLUGINS_DIR$/;"	v
s:dep_plugins_base	plugged/neomake/tests/vim/vimrc	/^  let s:dep_plugins_base = expand('<sfile>:p:h').'\/..\/..\/build\/vim\/plugins'$/;"	v
s:detect_bad_input	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:detect_bad_input()$/;"	f
s:did_check_exe	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:did_check_exe = 0$/;"	v
s:did_setup_statusline_augroup_for_use	plugged/neomake/autoload/neomake/statusline.vim	/^let s:did_setup_statusline_augroup_for_use = 0$/;"	v
s:diff	autoload/plug.vim	/^function! s:diff()$/;"	f
s:diffidx	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
s:diffpanel	plugged/undotree/autoload/undotree.vim	/^let s:diffpanel = s:new(s:panel)$/;"	v
s:diffpanel.BindAu	plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.BindAu()$/;"	f
s:diffpanel.CleanUpHighlight	plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.CleanUpHighlight()$/;"	f
s:diffpanel.GetStatusLine	plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.GetStatusLine()$/;"	f
s:diffpanel.Hide	plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.Hide()$/;"	f
s:diffpanel.Init	plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.Init()$/;"	f
s:diffpanel.ParseDiff	plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.ParseDiff(diffresult)$/;"	f
s:diffpanel.Show	plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.Show()$/;"	f
s:diffpanel.Toggle	plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.Toggle()$/;"	f
s:diffpanel.Update	plugged/undotree/autoload/undotree.vim	/^function! s:diffpanel.Update(seq,targetBufnr,targetid)$/;"	f
s:dir	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:dir(bufnr) abort$/;"	f
s:dirArrows	plugged/nerdtree/syntax/nerdtree.vim	/^let s:dirArrows = escape(g:NERDTreeDirArrowCollapsible, '~]\\-').escape(g:NERDTreeDirArrowExpand/;"	v
s:dirpath	autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
s:disable	plugged/neomake/plugin/neomake.vim	/^function! s:disable(scope, disabled) abort$/;"	f
s:disabled_for_ft	plugged/neomake/autoload/neomake/configure.vim	/^function! s:disabled_for_ft(bufnr, ...) abort$/;"	f
s:discard_header	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:discard_header(hunk_diff)$/;"	f
s:displayHelp	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:displayHelp()$/;"	f
s:display_by_path	plugged/vim-startify/autoload/startify.vim	/^function! s:display_by_path(path_prefix, path_format, use_env) abort$/;"	f
s:display_error	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:display_error()$/;"	f
s:display_git_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:display_git_branch()$/;"	f
s:display_hg_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:display_hg_branch()$/;"	f
s:display_status	plugged/neomake/plugin/neomake.vim	/^function! s:display_status() abort$/;"	f
s:do	autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	f
s:do_clean_make_info	plugged/neomake/autoload/neomake.vim	/^function! s:do_clean_make_info(make_info) abort$/;"	f
s:do_delayed_update	plugged/tagbar/autoload/tagbar.vim	/^function! s:do_delayed_update() abort$/;"	f
s:do_postponed_automake	plugged/neomake/autoload/neomake/configure.vim	/^function! s:do_postponed_automake() abort$/;"	f
s:doautocmd	autoload/plug.vim	/^function! s:doautocmd(...)$/;"	f
s:dobufread	autoload/plug.vim	/^function! s:dobufread(names)$/;"	f
s:done	plugged/vim-gitgutter/test/runner.vim	/^  let s:done += 1$/;"	v
s:done	plugged/vim-gitgutter/test/runner.vim	/^let s:done = 0$/;"	v
s:draw_box	plugged/vim-startify/autoload/startify/fortune.vim	/^function! s:draw_box(lines) abort$/;"	f
s:dstring	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
s:dummy_sign_id	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:dummy_sign_id = s:first_sign_id - 1$/;"	v
s:edit_options	plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^let s:edit_options = [$/;"	v
s:editorconfig_core_mode	plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let s:editorconfig_core_mode = ''$/;"	v
s:editorconfig_core_mode	plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let s:editorconfig_core_mode = g:EditorConfig_core_mode$/;"	v
s:enabled	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let s:enabled = get(g:, 'airline#extensions#localsearch#enabled', 1)$/;"	v
s:enabled	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:enabled = get(g:, 'airline#extensions#whitespace#enabled', 1)$/;"	v
s:end_latency_measure	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:end_latency_measure()$/;"	f
s:ends_with	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:ends_with(str, suffix) abort$/;"	f
s:entry_to_sign_type	plugged/neomake/autoload/neomake/signs.vim	/^let s:entry_to_sign_type = {'W': 'warn', 'I': 'info', 'M': 'msg'}$/;"	v
s:eol_whitespace_pattern	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^    let s:eol_whitespace_pattern .= '\\|[' . s:whitespace_chars . ']\\+\\ze[\\u0009]'$/;"	v
s:eol_whitespace_pattern	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^    let s:eol_whitespace_pattern = '[^\\u0009' . s:whitespace_chars . ']\\@1<=' . s:eol_whitespa/;"	v
s:eol_whitespace_pattern	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let s:eol_whitespace_pattern = '[\\u0009' . s:whitespace_chars . ']\\+$'$/;"	v
s:err	autoload/plug.vim	/^function! s:err(msg)$/;"	f
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^let s:error_symbol = get(g:, 'airline#extensions#ale#error_symbol', 'E:')$/;"	v
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^let s:error_symbol = get(g:, 'airline#extensions#neomake#error_symbol', 'E:')$/;"	v
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^let s:error_symbol = get(g:, 'airline#extensions#syntastic#error_symbol', 'E:')$/;"	v
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:error_symbol = get(g:, 'airline#extensions#ycm#error_symbol', 'E:')$/;"	v
s:errored	plugged/vim-gitgutter/test/runner.vim	/^      let s:errored = 0$/;"	v
s:errored	plugged/vim-gitgutter/test/runner.vim	/^let s:errored = 0$/;"	v
s:errors	plugged/vim-gitgutter/test/runner.vim	/^      let s:errors += 1$/;"	v
s:errors	plugged/vim-gitgutter/test/runner.vim	/^  let s:errors += 1$/;"	v
s:errors	plugged/vim-gitgutter/test/runner.vim	/^let s:errors = 0$/;"	v
s:esc	autoload/plug.vim	/^function! s:esc(path)$/;"	f
s:escape	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:escape(path)$/;"	f
s:escape_file_searching	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
s:escape_pattern	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:escape_pattern(str) abort$/;"	f
s:escape_pattern	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
s:escrtp	autoload/plug.vim	/^function! s:escrtp(path)$/;"	f
s:eval	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! s:eval(profile, val)$/;"	f
s:eval	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:eval(dict, key, arg)$/;"	f
s:eval_at	plugged/GoldenView.Vim/autoload/GoldenView/zl/rule.vim	/^function! s:eval_at(nrule, ...)$/;"	f
s:eval_bufname	plugged/GoldenView.Vim/autoload/GoldenView/zl/rule.vim	/^function! s:eval_bufname(nrule, ...)$/;"	f
s:eval_buftype	plugged/GoldenView.Vim/autoload/GoldenView/zl/rule.vim	/^function! s:eval_buftype(nrule, ...)$/;"	f
s:eval_cword	plugged/GoldenView.Vim/autoload/GoldenView/zl/rule.vim	/^function! s:eval_cword(nrule, ...)$/;"	f
s:eval_expr	plugged/GoldenView.Vim/autoload/GoldenView/zl/rule.vim	/^function! s:eval_expr(nrule, ...)$/;"	f
s:eval_filetype	plugged/GoldenView.Vim/autoload/GoldenView/zl/rule.vim	/^function! s:eval_filetype(nrule, ...)$/;"	f
s:eval_mode	plugged/GoldenView.Vim/autoload/GoldenView/zl/rule.vim	/^function! s:eval_mode(nrule, ...)$/;"	f
s:eval_snippet	plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:eval_snippet(snippet_text) abort$/;"	f
s:eval_syntax	plugged/GoldenView.Vim/autoload/GoldenView/zl/rule.vim	/^function! s:eval_syntax(nrule, ...)$/;"	f
s:evaluate_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:evaluate_tabline(tabline)$/;"	f
s:excmds	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:excmds()$/;"	f
s:exe_error_thrown	plugged/neomake/autoload/neomake/core.vim	/^let s:exe_error_thrown = {}$/;"	v
s:exec	plugged/undotree/autoload/undotree.vim	/^function! s:exec(cmd)$/;"	f
s:exec_separator	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:exec_separator(dict, from, to, inverse, suffix)$/;"	f
s:exec_silent	plugged/undotree/autoload/undotree.vim	/^function! s:exec_silent(cmd)$/;"	f
s:exists	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:exists(name) abort dict$/;"	f
s:exists_file	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:exists_file(bufnr) abort$/;"	f
s:exit	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:exit()$/;"	f
s:exitIfLast	plugged/undotree/autoload/undotree.vim	/^function! s:exitIfLast()$/;"	f
s:exit_handler	plugged/neomake/autoload/neomake.vim	/^function! s:exit_handler(jobinfo, data) abort$/;"	f
s:exit_visual_mode	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:exit_visual_mode()$/;"	f
s:expand_bufnr	plugged/tagbar/autoload/tagbar.vim	/^let s:expand_bufnr = -1$/;"	v
s:expand_placeholder	plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:expand_placeholder(start, end, holder_cnt, line, ...) abort$/;"	f
s:expand_target_placeholder	plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:expand_target_placeholder(line, col) abort$/;"	f
s:ext	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:ext = {}$/;"	v
s:ext	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:ext._theme_funcrefs = []$/;"	v
s:ext.add_inactive_statusline_func	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_inactive_statusline_func(name) dict$/;"	f
s:ext.add_statusline_func	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_func(name) dict$/;"	f
s:ext.add_statusline_funcref	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_funcref(function) dict$/;"	f
s:ext.add_theme_func	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_theme_func(name) dict$/;"	f
s:extend	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:extend(base, extra)$/;"	f
s:extend_opts	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:extend_opts(dict, eopts, prepend)$/;"	f
s:extract_name	autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	f
s:fail	plugged/vim-gitgutter/test/runner.vim	/^      let s:fail += 1$/;"	v
s:fail	plugged/vim-gitgutter/test/runner.vim	/^let s:fail = 0$/;"	v
s:feedkeys	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:feedkeys(keys)$/;"	f
s:file_options	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_options(prefix)$/;"	f
s:file_source	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_source(prefix)$/;"	f
s:file_split_prefix	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_split_prefix(prefix)$/;"	f
s:filename	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:filename(bufnr) abort$/;"	f
s:filereadable	plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:filereadable(cache_dir, filename) abort$/;"	f
s:filetype_overrides	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_overrides = {$/;"	v
s:filetype_regex_overrides	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_regex_overrides = {}$/;"	v
s:filter_oldfiles	plugged/vim-startify/autoload/startify.vim	/^function! s:filter_oldfiles(path_prefix, path_format, use_env) abort$/;"	f
s:filter_oldfiles_unsafe	plugged/vim-startify/autoload/startify.vim	/^function! s:filter_oldfiles_unsafe(path_prefix, path_format, use_env) abort$/;"	f
s:filter_py_warnings	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^function! s:filter_py_warnings(v) abort$/;"	f
s:filters.filter	plugged/vim-devicons/plugin/webdevicons.vim	/^    function! s:filters.filter(candidates, context)$/;"	f
s:find	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
s:findAndRevealPath	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:findAndRevealPath(pathStr)$/;"	f
s:findDubRoot	plugged/neomake/autoload/neomake/makers/ft/d.vim	/^function! s:findDubRoot() abort$/;"	f
s:findFileInParent	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:findFileInParent(what, where) abort " {{{2$/;"	f
s:find_current_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:find_current_signs(bufnr) abort$/;"	f
s:find_index	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
s:find_indices	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
s:find_last_index	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
s:find_name	autoload/plug.vim	/^function! s:find_name(lnum)$/;"	f
s:find_next	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:find_next(text)$/;"	f
s:find_open_window	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:find_open_window(b)$/;"	f
s:finish	autoload/plug.vim	/^function! s:finish(pull)$/;"	f
s:finish_bindings	autoload/plug.vim	/^function! s:finish_bindings()$/;"	f
s:fire_pre_triggers	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:fire_pre_triggers()$/;"	f
s:first_line	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:first_line(lines)$/;"	f
s:first_rtp	autoload/plug.vim	/^let s:first_rtp = s:escrtp(get(s:split_rtp(), 0, ''))$/;"	v
s:first_sign_id	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:first_sign_id = 3000$/;"	v
s:fix_file_references	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:fix_file_references(filepath, hunk_diff)$/;"	f
s:fixed_column	plugged/vim-startify/autoload/startify.vim	/^let s:fixed_column = len(s:padding_left) + 2$/;"	v
s:flags	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:flags = get(g:, 'airline#extensions#tagbar#flags', '')$/;"	v
s:flatten	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
s:fmod	plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^  let s:fmod = ':.'$/;"	v
s:fmod	plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^  let s:fmod = ':p'$/;"	v
s:fname_prefix	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:fname_prefix(str)$/;"	f
s:fnamecollapse	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:fnamecollapse = get(g:, 'airline#extensions#tabline#fnamecollapse', 1)$/;"	v
s:fnametruncate	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:fnametruncate = get(g:, 'airline#extensions#tabline#fnametruncate', 0)$/;"	v
s:foldl	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
s:foldl1	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
s:foldr	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
s:foldr1	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
s:format_buffer	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_buffer(b)$/;"	f
s:format_cmd	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_cmd(line)$/;"	f
s:format_excmd	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_excmd(ex)$/;"	f
s:format_for_log	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:format_for_log(data) abort$/;"	f
s:format_git_log	autoload/plug.vim	/^function! s:format_git_log(line)$/;"	f
s:format_mark	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_mark(line)$/;"	f
s:format_message	autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	f
s:format_name	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^  function! s:format_name(name)$/;"	f
s:format_win	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_win(tab, win, buf)$/;"	f
s:formatter	plugged/neomake/autoload/neomake/statusline.vim	/^let s:formatter = {$/;"	v
s:formatter	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^let s:formatter = get(g:, 'airline#extensions#wordcount#formatter', 'default')$/;"	v
s:formatter._substitute	plugged/neomake/autoload/neomake/statusline.vim	/^function! s:formatter._substitute(m) abort$/;"	f
s:formatter.format	plugged/neomake/autoload/neomake/statusline.vim	/^function! s:formatter.format(f, args) abort$/;"	f
s:formatter.running_job_names	plugged/neomake/autoload/neomake/statusline.vim	/^function! s:formatter.running_job_names() abort$/;"	f
s:from_mode	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:from_mode = ''$/;"	v
s:fsep	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^    let s:fsep = ':'$/;"	v
s:fsep	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^    let s:fsep = ';'$/;"	v
s:function	plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! s:function(name)$/;"	f
s:function	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^  function! s:function(name)$/;"	f
s:fzf	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:fzf(name, opts, extra)$/;"	f
s:fzf_restore_colors	plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_restore_colors()$/;"	f
s:fzf_statusline	config.d/fzf.vim	/^function! s:fzf_statusline()$/;"	f
s:fzf_vim_term	plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_vim_term()$/;"	f
s:get	plugged/neomake/autoload/neomake/config.vim	/^function! s:get(dict, parts, prefixes) abort$/;"	f
s:get	plugged/tagbar/autoload/tagbar/state.vim	/^function! s:get() abort$/;"	f
s:getChildren	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getChildren() dict abort$/;"	f
s:getChildrenByName	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getChildrenByName(tagname) dict abort$/;"	f
s:getClosedParentTline	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getClosedParentTline() abort dict$/;"	f
s:getKind	plugged/tagbar/autoload/tagbar/prototypes/typeinfo.vim	/^function! s:getKind(kind) abort dict$/;"	f
s:getPrototype	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getPrototype(short) abort dict$/;"	f
s:getPrototype	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:getPrototype(short) abort dict$/;"	f
s:getPrototype	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:getPrototype(short) abort dict$/;"	f
s:getTags	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:getTags() dict abort$/;"	f
s:getTagsByName	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:getTagsByName(tagname) dict abort$/;"	f
s:getUniqueID	plugged/undotree/autoload/undotree.vim	/^function! s:getUniqueID()$/;"	f
s:get_accented_line	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_accented_line(self, group, contents)$/;"	f
s:get_airline_themes	plugged/vim-airline/plugin/airline.vim	/^function! s:get_airline_themes(a, l, p)$/;"	f
s:get_array	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_array(fg, bg, opts)$/;"	f
s:get_background_colors	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_background_colors(group) abort$/;"	f
s:get_char	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_char(...)$/;"	f
s:get_color	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_color(attr, ...)$/;"	f
s:get_color_map	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:get_color_map()$/;"	f
s:get_completed_snippets	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! s:get_completed_snippets(cur_text, col) abort$/;"	f
s:get_counts	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! s:get_counts()$/;"	f
s:get_ctags_executable	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:get_ctags_executable(proj_dir) abort$/;"	f
s:get_decimal_group	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! s:get_decimal_group()$/;"	f
s:get_env	plugged/vim-startify/autoload/startify.vim	/^  function! s:get_env()$/;"	f
s:get_git_root	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_git_root()$/;"	f
s:get_hunks	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks()$/;"	f
s:get_hunks_changes	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_changes()$/;"	f
s:get_hunks_empty	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_empty()$/;"	f
s:get_hunks_gitgutter	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_gitgutter()$/;"	f
s:get_hunks_signify	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_signify()$/;"	f
s:get_index_as_string	plugged/vim-startify/autoload/startify.vim	/^function! s:get_index_as_string(idx) abort$/;"	f
s:get_keyword_pos	plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! s:get_keyword_pos(cur_text) abort$/;"	f
s:get_last_status	plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^function! s:get_last_status() abort$/;"	f
s:get_left_events	plugged/neomake/autoload/neomake.vim	/^    function! s:get_left_events() abort$/;"	f
s:get_line_trimmed	plugged/rust.vim/indent/rust.vim	/^function! s:get_line_trimmed(lnum)$/;"	f
s:get_list	plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! s:get_list() abort$/;"	f
s:get_list	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! s:get_list() abort$/;"	f
s:get_lists	plugged/vim-startify/autoload/startify.vim	/^function! s:get_lists() abort$/;"	f
s:get_makeprg_maker	plugged/neomake/autoload/neomake.vim	/^function! s:get_makeprg_maker() abort$/;"	f
s:get_maker_info	plugged/neomake/autoload/neomake/debug.vim	/^function! s:get_maker_info(...) abort$/;"	f
s:get_makers_for_pattern	plugged/neomake/autoload/neomake.vim	/^    function! s:get_makers_for_pattern(pattern) abort$/;"	f
s:get_map_str	plugged/tagbar/autoload/tagbar.vim	/^function! s:get_map_str(map) abort$/;"	f
s:get_mode	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:get_mode()$/;"	f
s:get_oldstyle_setting	plugged/neomake/autoload/neomake/utils.vim	/^function! s:get_oldstyle_setting(key, maker, default, ft, bufnr, maker_only) abort$/;"	f
s:get_prelude	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! s:get_prelude() abort$/;"	f
s:get_process	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! s:get_process() abort$/;"	f
s:get_random_offset	plugged/vim-startify/autoload/startify/fortune.vim	/^function! s:get_random_offset(max) abort$/;"	f
s:get_section	plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! s:get_section(winnr, key, ...)$/;"	f
s:get_separator_change	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:get_separator_change(new_group, old_group, end_group, sep_size, alt_sep_size)$/;"	f
s:get_separator_change_with_end	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:get_separator_change_with_end(new_group, old_group, new_end_group, old_end_group, se/;"	f
s:get_seperator	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_seperator(self, prev_group, group, side)$/;"	f
s:get_setting	plugged/neomake/autoload/neomake/configure.vim	/^function! s:get_setting(name, default) abort$/;"	f
s:get_snippet_candidates	plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^function! s:get_snippet_candidates(dirs) abort$/;"	f
s:get_snippet_files	plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! s:get_snippet_files(path, filetype) abort$/;"	f
s:get_snippets_files	plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! s:get_snippets_files(path, filetype) abort$/;"	f
s:get_sources_filetypes	plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! s:get_sources_filetypes(filetype) abort$/;"	f
s:get_string	plugged/neosnippet.vim/autoload/neosnippet/util.vim	/^function! s:get_string() abort$/;"	f
s:get_syn	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_syn(group, what)$/;"	f
s:get_text	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! s:get_text()$/;"	f
s:get_text	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_text(region)$/;"	f
s:get_time_in_ms	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_time_in_ms()$/;"	f
s:get_transitioned_seperator	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_transitioned_seperator(self, prev_group, group, side)$/;"	f
s:get_visual_region	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_visual_region(pos)$/;"	f
s:getbufvar	plugged/neomake/autoload/neomake/configure.vim	/^function! s:getbufvar(bufnr, name, default) abort$/;"	f
s:getchar	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
s:getchar_safe	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
s:getfilename	plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:getfilename(cache_dir, filename) abort$/;"	f
s:gettime	plugged/tagbar/autoload/tagbar/debug.vim	/^    function! s:gettime() abort$/;"	f
s:gettime	plugged/undotree/autoload/undotree.vim	/^function! s:gettime(time)$/;"	f
s:git_diff	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff()$/;"	f
s:git_diff_staged	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff_staged()$/;"	f
s:git_supports_command_line_config_override	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:git_supports_command_line_config_override() abort$/;"	f
s:git_validate	autoload/plug.vim	/^function! s:git_validate(spec, check_branch)$/;"	f
s:git_version	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:git_version()$/;"	f
s:git_version_requirement	autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	f
s:glob	autoload/plug.vim	/^function! s:glob(from, pattern)$/;"	f
s:glob	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
s:glob_dir	autoload/plug.vim	/^function! s:glob_dir(path)$/;"	f
s:globpath	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^  function! s:globpath(path, expr) abort$/;"	f
s:golden_ratio	plugged/GoldenView.Vim/autoload/GoldenView/zl/window.vim	/^let s:golden_ratio = 1.618$/;"	v
s:got_fmt_error	plugged/rust.vim/autoload/rustfmt.vim	/^let s:got_fmt_error = 0$/;"	v
s:goto_markedwin	plugged/tagbar/autoload/tagbar.vim	/^function! s:goto_markedwin(...) abort$/;"	f
s:goto_tagbar	plugged/tagbar/autoload/tagbar.vim	/^function! s:goto_tagbar(...) abort$/;"	f
s:goto_win	plugged/tagbar/autoload/tagbar.vim	/^function! s:goto_win(winnr, ...) abort$/;"	f
s:grep_version	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:grep_version()$/;"	f
s:group_by	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
s:gsub	plugged/neomake/autoload/neomake/utils.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
s:gui2cui	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:gui2cui(rgb, fallback)$/;"	f
s:hack_keep_refs_for_profiling	plugged/neomake/autoload/neomake.vim	/^let s:hack_keep_refs_for_profiling = []$/;"	v
s:handleLeftClick	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleLeftClick()$/;"	f
s:handleMiddleMouse	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleMiddleMouse()$/;"	f
s:handle_get_list_entries	plugged/neomake/autoload/neomake.vim	/^function! s:handle_get_list_entries(jobinfo, ...) abort$/;"	f
s:handle_locqf_list_for_finished_jobs	plugged/neomake/autoload/neomake.vim	/^function! s:handle_locqf_list_for_finished_jobs(make_info) abort$/;"	f
s:handle_next_job	plugged/neomake/autoload/neomake.vim	/^function! s:handle_next_job(prev_jobinfo) abort$/;"	f
s:handle_special_key	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:handle_special_key(key, mode)$/;"	f
s:handle_visual_IA_to_insert	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:handle_visual_IA_to_insert()$/;"	f
s:handle_visual_IA_to_normal	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:handle_visual_IA_to_normal()$/;"	f
s:hardRefreshNerdTree	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:hardRefreshNerdTree()$/;"	f
s:has	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
s:has_ant	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let s:has_ant = executable(expand(g:neomake_java_ant_executable, 1))$/;"	v
s:has_common_items	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
s:has_custom_scm	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:has_custom_scm()$/;"	f
s:has_fresh_changes	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:has_fresh_changes(bufnr) abort$/;"	f
s:has_fugitive	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:has_fugitive()$/;"	f
s:has_getcmdwintype	plugged/neomake/autoload/neomake.vim	/^let s:has_getcmdwintype = exists('*getcmdwintype')$/;"	v
s:has_gradle	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let s:has_gradle = executable(expand(g:neomake_java_gradle_executable, 1))$/;"	v
s:has_index	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
s:has_lawrencium	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:has_lawrencium()$/;"	f
s:has_maven	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let s:has_maven = executable(expand(g:neomake_java_maven_executable, 1))$/;"	v
s:has_vcscommand	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:has_vcscommand()$/;"	f
s:has_vimproc	plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^function! s:has_vimproc() abort$/;"	f
s:has_webapi	plugged/rust.vim/autoload/rust.vim	/^function! s:has_webapi()$/;"	f
s:hash	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:hash(str) abort$/;"	f
s:hash_match	autoload/plug.vim	/^function! s:hash_match(a, b)$/;"	f
s:head_format	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:head_format = get(g:, 'airline#extensions#branch#format', 0)$/;"	v
s:helpless	plugged/undotree/autoload/undotree.vim	/^    let s:helpless = ['" Press ? for help.']$/;"	v
s:helpless	plugged/undotree/autoload/undotree.vim	/^    let s:helpless = []$/;"	v
s:helpmore	plugged/undotree/autoload/undotree.vim	/^let s:helpmore = ['"    ===== Marks ===== ',$/;"	v
s:helptag_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:helptag_sink(line)$/;"	f
s:hi_group_cursor	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:hi_group_cursor = 'multiple_cursors_cursor'$/;"	v
s:hi_group_visual	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:hi_group_visual = 'multiple_cursors_visual'$/;"	v
s:highlight_cursor	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:highlight_cursor(pos)$/;"	f
s:highlight_helper	plugged/nova-vim/colors/nova.vim	/^function! s:highlight_helper(...)$/;"	f
s:highlight_keys	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:highlight_keys(str)$/;"	f
s:highlight_name_for_change	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:highlight_name_for_change(text) abort$/;"	f
s:highlight_region	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:highlight_region(region)$/;"	f
s:highlight_types	plugged/neomake/autoload/neomake/highlights.vim	/^let s:highlight_types = {$/;"	v
s:highlights	plugged/neomake/autoload/neomake/highlights.vim	/^let s:highlights = {'file': {}, 'project': {}}$/;"	v
s:history	plugged/fzf.vim/plugin/fzf.vim	/^function! s:history(arg, bang)$/;"	f
s:history_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_sink(type, lines)$/;"	f
s:history_source	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_source(type)$/;"	f
s:hl_group_exists	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:hl_group_exists(group)$/;"	f
s:hl_groups	plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:hl_groups = {}$/;"	v
s:hook_context_stack	plugged/neomake/autoload/neomake/utils.vim	/^let s:hook_context_stack = []$/;"	v
s:hook_list	plugged/editorconfig-vim/autoload/editorconfig.vim	/^let s:hook_list = []$/;"	v
s:hunk_op	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:hunk_op(op)$/;"	f
s:hunk_re	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:hunk_re = '^@@ -\\(\\d\\+\\),\\?\\(\\d*\\) +\\(\\d\\+\\),\\?\\(\\d*\\) @@'$/;"	v
s:hunk_symbols	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:hunk_symbols = get(g:, 'airline#extensions#hunks#hunk_symbols', ['+', '~', '-'])$/;"	v
s:iTerm_escape_template	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:iTerm_escape_template = '\\033]Pl%s\\033\\\\'$/;"	v
s:iconv	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
s:iconv	plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
s:ics	plugged/tagbar/syntax/tagbar.vim	/^let s:ics = escape(join(g:tagbar_iconchars, ''), ']^\\-')$/;"	v
s:ignore_automake_events	plugged/neomake/autoload/neomake.vim	/^let s:ignore_automake_events = 0$/;"	v
s:import	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:import(name, ...) abort dict$/;"	f
s:inactive_funcrefs	plugged/vim-airline/autoload/airline.vim	/^let s:inactive_funcrefs = []$/;"	v
s:incCount	plugged/neomake/autoload/neomake/statusline.vim	/^function! s:incCount(counts, item, buf) abort$/;"	f
s:include_snippets	plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! s:include_snippets(globs) abort$/;"	f
s:indent	plugged/vim-gitgutter/test/runner.vim	/^let s:indent = ''$/;"	v
s:indent	plugged/vim-gitgutter/test/runner.vim	/^let s:indent = max(map(copy(s:tests), {_, val -> len(FriendlyName(val))}))$/;"	v
s:indent_snippet	plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:indent_snippet(begin, end) abort$/;"	f
s:infer_properties	autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	f
s:init	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:init=0$/;"	v
s:init	plugged/vim-airline/plugin/airline.vim	/^function! s:init()$/;"	f
s:initFoldState	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:initFoldState(known_files) abort dict$/;"	f
s:initVariable	plugged/nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
s:init_buffer	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:init_buffer()$/;"	f
s:init_done	plugged/tagbar/autoload/tagbar.vim	/^let s:init_done = 0$/;"	v
s:init_env	plugged/vim-startify/autoload/startify.vim	/^function! s:init_env()$/;"	f
s:init_settings	plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^function! s:init_settings(settings)$/;"	f
s:init_var	plugged/tagbar/plugin/tagbar.vim	/^function! s:init_var(var, value) abort$/;"	f
s:initialize	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:initialize()$/;"	f
s:initializeCtrlP	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:initializeCtrlP()$/;"	f
s:initializeDenite	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:initializeDenite()$/;"	f
s:initializeFlagship	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:initializeFlagship()$/;"	f
s:initializeUnite	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:initializeUnite()$/;"	f
s:initializeVimfiler	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:initializeVimfiler()$/;"	f
s:initialize_cache	plugged/neosnippet.vim/autoload/neosnippet/init.vim	/^function! s:initialize_cache() abort$/;"	f
s:initialize_options	plugged/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! s:initialize_options(options) abort$/;"	f
s:initialize_others	plugged/neosnippet.vim/autoload/neosnippet/init.vim	/^function! s:initialize_others() abort$/;"	f
s:initialized	plugged/editorconfig-vim/plugin/editorconfig.vim	/^let s:initialized = 0$/;"	v
s:inject_snippet	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:inject_snippet(line)$/;"	f
s:input_helper	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
s:input_safe	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
s:install	autoload/plug.vim	/^function! s:install(force, names)$/;"	f
s:intersect	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
s:invoke_funcrefs	plugged/vim-airline/autoload/airline.vim	/^function! s:invoke_funcrefs(context, funcrefs)$/;"	f
s:isDarwin	plugged/vim-devicons/plugin/webdevicons.vim	/^function s:isDarwin()$/;"	f
s:isFoldable	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isFoldable() abort dict$/;"	f
s:isFoldable	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:isFoldable() abort dict$/;"	f
s:isFolded	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isFolded() abort dict$/;"	f
s:isFolded	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:isFolded() abort dict$/;"	f
s:isKindheader	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isKindheader() abort dict$/;"	f
s:isKindheader	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:isKindheader() abort dict$/;"	f
s:isNormalTag	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isNormalTag() abort dict$/;"	f
s:isNormalTag	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:isNormalTag() abort dict$/;"	f
s:isPseudoTag	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isPseudoTag() abort dict$/;"	f
s:isPseudoTag	plugged/tagbar/autoload/tagbar/prototypes/pseudotag.vim	/^function! s:isPseudoTag() abort dict$/;"	f
s:isSplitTag	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isSplitTag() abort dict$/;"	f
s:isSplitTag	plugged/tagbar/autoload/tagbar/prototypes/splittag.vim	/^function! s:isSplitTag() abort dict$/;"	f
s:is_AppleTerminal	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_AppleTerminal = exists('$TERM_PROGRAM') && $TERM_PROGRAM =~# 'Apple_Terminal'$/;"	v
s:is_added	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_added(from_count, to_count) abort$/;"	f
s:is_beginning_of_line	plugged/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! s:is_beginning_of_line(cur_text) abort$/;"	f
s:is_branch_empty	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:is_branch_empty()$/;"	f
s:is_cygwin	plugged/GoldenView.Vim/autoload/GoldenView/zl/sys.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
s:is_cygwin	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_dict	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
s:is_empty	plugged/neosnippet.vim/indent/neosnippet.vim	/^function! s:is_empty(line)$/;"	f
s:is_enabled	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^  let s:is_enabled = 0$/;"	v
s:is_enabled	plugged/neomake/autoload/neomake/quickfix.vim	/^let s:is_enabled = 0$/;"	v
s:is_excluded_window	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:is_excluded_window()$/;"	f
s:is_exiting	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:is_exiting() abort$/;"	f
s:is_file_buffer	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:is_file_buffer(bufnr) abort$/;"	f
s:is_float	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
s:is_funcref	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
s:is_good	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_good = !has('gui_running') && !s:is_win && !s:is_AppleTerminal$/;"	v
s:is_iTerm	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_iTerm = exists('$TERM_PROGRAM') && $TERM_PROGRAM =~# 'iTerm.app'$/;"	v
s:is_in_skiplist	plugged/vim-startify/autoload/startify.vim	/^function! s:is_in_skiplist(arg) abort$/;"	f
s:is_list	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
s:is_local_plug	autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
s:is_mac	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_mac() abort$/;"	f
s:is_mac	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_managed	autoload/plug.vim	/^function! s:is_managed(name)$/;"	f
s:is_maximized	plugged/tagbar/autoload/tagbar.vim	/^let s:is_maximized    = 0$/;"	v
s:is_modified	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified(from_count, to_count) abort$/;"	f
s:is_modified_and_added	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified_and_added(from_count, to_count) abort$/;"	f
s:is_modified_and_removed	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified_and_removed(from_count, to_count) abort$/;"	f
s:is_number	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
s:is_numeric	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
s:is_preview_window_open	autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	f
s:is_removed	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_removed(from_count, to_count) abort$/;"	f
s:is_skip	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:is_skip(event) abort$/;"	f
s:is_skip_text	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:is_skip_text(event) abort$/;"	f
s:is_string	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
s:is_string_comment	plugged/rust.vim/indent/rust.vim	/^function! s:is_string_comment(lnum, col)$/;"	f
s:is_testing	plugged/neomake/autoload/neomake.vim	/^let s:is_testing = exists('g:neomake_test_messages')$/;"	v
s:is_testing	plugged/neomake/autoload/neomake/log.vim	/^let s:is_testing = exists('g:neomake_test_messages')$/;"	v
s:is_unix	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_unix() abort$/;"	f
s:is_unix	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_updated	autoload/plug.vim	/^function! s:is_updated(dir)$/;"	f
s:is_vital_vim	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_win	autoload/plug.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	plugged/fzf.vim/plugin/fzf.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win32term	plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:is_win32term = (has('win32') || has('win64')) &&$/;"	v
s:is_windows	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^let s:is_windows = ((has('win32') || has('win64')) ? v:true : v:false)$/;"	v
s:is_windows	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let s:is_windows = has('win32') || has('win64') || has('win16') || has('dos32') || has('dos16')$/;"	v
s:is_windows	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_windows() abort$/;"	f
s:is_windows	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:job_abort	autoload/plug.vim	/^function! s:job_abort()$/;"	f
s:job_cb	autoload/plug.vim	/^function! s:job_cb(fn, job, ch, data)$/;"	f
s:job_exit_cb	autoload/plug.vim	/^function! s:job_exit_cb(self, data) abort$/;"	f
s:job_id	plugged/neomake/autoload/neomake.vim	/^    let s:job_id = 1$/;"	v
s:job_out_cb	autoload/plug.vim	/^function! s:job_out_cb(self, data) abort$/;"	f
s:jobinfo_base	plugged/neomake/autoload/neomake.vim	/^let s:jobinfo_base = {}$/;"	v
s:jobinfo_base.as_string	plugged/neomake/autoload/neomake.vim	/^function! s:jobinfo_base.as_string() abort$/;"	f
s:jobinfo_base.get_pid	plugged/neomake/autoload/neomake.vim	/^function! s:jobinfo_base.get_pid() abort$/;"	f
s:jobs	plugged/neomake/autoload/neomake.vim	/^    let s:jobs = {}$/;"	v
s:join_posix_lines	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:join_posix_lines(lines, ...) abort$/;"	f
s:json_null	plugged/neomake/autoload/neomake/compat.vim	/^    function! s:json_null() abort$/;"	f
s:jump	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:jump(t, w)$/;"	f
s:jumpToChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToChild(currentNode, direction)$/;"	f
s:jumpToFirstChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToFirstChild(node)$/;"	f
s:jumpToLastChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToLastChild(node)$/;"	f
s:jumpToNextHunk	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:jumpToNextHunk(node)$/;"	f
s:jumpToNextSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToNextSibling(node)$/;"	f
s:jumpToParent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToParent(node)$/;"	f
s:jumpToPrevHunk	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:jumpToPrevHunk(node)$/;"	f
s:jumpToPrevSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
s:jumpToRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToRoot()$/;"	f
s:jumpToSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToSibling(currentNode, forward)$/;"	f
s:jump_to_tab	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:jump_to_tab(offset)$/;"	f
s:justify_equal_spacing	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
s:key_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:key_sink(line)$/;"	f
s:keymap	plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['ClearHistory','C','Clear undo history']]$/;"	v
s:keymap	plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['Close','q','Close this panel']]$/;"	v
s:keymap	plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['DiffToggle','D','Toggle diff panel']]$/;"	v
s:keymap	plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['Enter','<2-LeftMouse>','Revert to current']]$/;"	v
s:keymap	plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['Enter','<cr>','Revert to current']]$/;"	v
s:keymap	plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['FocusTarget','<tab>','Set Focus to editor']]$/;"	v
s:keymap	plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['GoNextSaved','>','Revert to next saved state']]$/;"	v
s:keymap	plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['GoNextState','K','Revert to next state']]$/;"	v
s:keymap	plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['GoPreviousSaved','<','Revert to previous saved state']]$/;"	v
s:keymap	plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['GoPreviousState','J','Revert to previous state']]$/;"	v
s:keymap	plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['Help','?','Toggle quick help']]$/;"	v
s:keymap	plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['Redo','<c-r>','Redo']]$/;"	v
s:keymap	plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['TimestampToggle','T','Toggle relative timestamp']]$/;"	v
s:keymap	plugged/undotree/autoload/undotree.vim	/^let s:keymap += [['Undo','u','Undo']]$/;"	v
s:keymap	plugged/undotree/autoload/undotree.vim	/^let s:keymap = []$/;"	v
s:keyword_filter	plugged/neosnippet.vim/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:keyword_filter(snippets, cur_keyword_str) abort$/;"	f
s:kill_vim_timers	plugged/neomake/autoload/neomake.vim	/^    let s:kill_vim_timers = {}$/;"	v
s:kill_vimjob_cb	plugged/neomake/autoload/neomake.vim	/^function! s:kill_vimjob_cb(timer) abort$/;"	f
s:kill_yarp	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:kill_yarp() abort$/;"	f
s:known_files	plugged/tagbar/autoload/tagbar.vim	/^let s:known_files = {$/;"	v
s:known_files	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:known_files = []$/;"	v
s:known_files.get	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.get(fname) abort dict$/;"	f
s:known_files.has	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.has(fname) abort dict$/;"	f
s:known_files.put	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.put(fileinfo, ...) abort dict$/;"	f
s:known_files.rm	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.rm(fname) abort dict$/;"	f
s:known_projects	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:known_projects = {}$/;"	v
s:last_alt_bufnr	plugged/tagbar/autoload/tagbar.vim	/^let s:last_alt_bufnr = -1$/;"	v
s:last_char	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:last_char()$/;"	f
s:last_completion	plugged/neomake/autoload/neomake/cmd.vim	/^let s:last_completion = []$/;"	v
s:last_highlight_tline	plugged/tagbar/autoload/tagbar.vim	/^let s:last_highlight_tline = 0$/;"	v
s:last_mode	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:last_mode = ''$/;"	v
s:last_non_empty_line	autoload/plug.vim	/^function! s:last_non_empty_line(lines)$/;"	f
s:last_placed_signs	plugged/neomake/autoload/neomake/signs.vim	/^let s:last_placed_signs = {'project': {}, 'file': {}}$/;"	v
s:last_rtp	autoload/plug.vim	/^let s:last_rtp  = s:escrtp(get(s:split_rtp(), -1, ''))$/;"	v
s:lastline	autoload/plug.vim	/^function! s:lastline(msg)$/;"	f
s:latency_debug_file	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:latency_debug_file = ''$/;"	v
s:layout	plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:layout = get(g:, 'airline#extensions#default#layout', [$/;"	v
s:layout_keys	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:layout_keys = ['window', 'up', 'down', 'left', 'right']$/;"	v
s:lenSpaceStr	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^let s:lenSpaceStr = strlen(s:spaceStr)$/;"	v
s:level_to_name	plugged/neomake/autoload/neomake/log.vim	/^let s:level_to_name = {0: 'error  ', 1: 'warning', 2: 'verbose', 3: 'debug  '}$/;"	v
s:levenshtein_distance	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
s:line_adjustment_for_current_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:line_adjustment_for_current_hunk() abort$/;"	f
s:line_handler	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:line_handler(lines)$/;"	f
s:lines	autoload/plug.vim	/^function! s:lines(msg)$/;"	f
s:lines	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:lines(str) abort$/;"	f
s:load	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:load(...) abort dict$/;"	f
s:load_plugin	autoload/plug.vim	/^function! s:load_plugin(spec)$/;"	f
s:load_plugin_on_demand	plugged/neomake/tests/vim/vimrc	/^function! s:load_plugin_on_demand(name) abort$/;"	f
s:loaded	autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	v
s:loaded	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:loaded = {}$/;"	v
s:loaded	plugged/vim-airline/autoload/airline/init.vim	/^let s:loaded = 0$/;"	v
s:loaded_ft_maker_runtime	plugged/neomake/autoload/neomake/utils.vim	/^let s:loaded_ft_maker_runtime = []$/;"	v
s:loaded_global_maker_runtime	plugged/neomake/autoload/neomake/utils.vim	/^let s:loaded_global_maker_runtime = 0$/;"	v
s:loaded_names	autoload/plug.vim	/^function! s:loaded_names()$/;"	f
s:loclist_counts	plugged/neomake/autoload/neomake/statusline.vim	/^let s:loclist_counts = {}$/;"	v
s:lod	autoload/plug.vim	/^function! s:lod(names, types, ...)$/;"	f
s:lod_cmd	autoload/plug.vim	/^function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	f
s:lod_ft	autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	f
s:lod_map	autoload/plug.vim	/^function! s:lod_map(map, names, with_prefix, prefix)$/;"	f
s:log	autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	f
s:log	plugged/neomake/autoload/neomake/log.vim	/^function! s:log(level, msg, ...) abort$/;"	f
s:log	plugged/undotree/autoload/undotree.vim	/^function! s:log(msg)$/;"	f
s:log4	autoload/plug.vim	/^function! s:log4(name, msg)$/;"	f
s:log_file	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:log_file    = s:plugin_dir.'gitgutter.log'$/;"	v
s:logpos	autoload/plug.vim	/^function! s:logpos(name)$/;"	f
s:lpad	autoload/plug.vim	/^function! s:lpad(str, len)$/;"	f
s:mac_gui	autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	v
s:make_id	plugged/neomake/autoload/neomake.vim	/^    let s:make_id = 0$/;"	v
s:make_info	plugged/neomake/autoload/neomake.vim	/^    let s:make_info = {}$/;"	v
s:maker_base	plugged/neomake/autoload/neomake.vim	/^let s:maker_base = {}$/;"	v
s:makers	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^    let s:makers += ['vimhelplint']$/;"	v
s:makers	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^let s:makers = ['writegood']$/;"	v
s:manual_update_tags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:manual_update_tags(bang) abort$/;"	f
s:map_accum	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
s:map_job_ids	plugged/neomake/autoload/neomake.vim	/^    let s:map_job_ids = {}$/;"	v
s:map_keys	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:map_keys()$/;"	f
s:mark_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:mark_sink(lines)$/;"	f
s:mark_window	plugged/tagbar/autoload/tagbar.vim	/^function! s:mark_window() abort$/;"	f
s:match_base_priority	plugged/neomake/autoload/neomake/quickfix.vim	/^let s:match_base_priority = 10$/;"	v
s:match_highlight	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:match_highlight(highlight, pattern) abort$/;"	f
s:max_by	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
s:maybe_reconfigure_buffer	plugged/neomake/autoload/neomake/configure.vim	/^function! s:maybe_reconfigure_buffer(bufnr) abort$/;"	f
s:me	autoload/plug.vim	/^let s:me = resolve(expand('<sfile>:p'))$/;"	v
s:merge_opts	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:merge_opts(dict, eopts)$/;"	f
s:messages	plugged/vim-gitgutter/test/runner.vim	/^let s:messages = []$/;"	v
s:min_by	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
s:modified	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let s:modified = {$/;"	v
s:mq_jobs	plugged/vim-airline/autoload/airline/async.vim	/^let s:mq_jobs        = {}$/;"	v
s:name_to_level	plugged/neomake/autoload/neomake/log.vim	/^let s:name_to_level = {'error': 0, 'warning': 1, 'verbose': 2, 'debug': 3}$/;"	v
s:names	autoload/plug.vim	/^function! s:names(...)$/;"	f
s:names	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:names = {'0': 'index', '1': 'orig', '2':'fetch', '3':'merge'}$/;"	v
s:nbs	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:nbs = nr2char(0x2007)$/;"	v
s:nearby_disabled	plugged/tagbar/autoload/tagbar.vim	/^let s:nearby_disabled = 0$/;"	v
s:need_to_postpone_loclist	plugged/neomake/autoload/neomake.vim	/^function! s:need_to_postpone_loclist(jobinfo) abort$/;"	f
s:need_to_postpone_output_processing	plugged/neomake/autoload/neomake.vim	/^function! s:need_to_postpone_output_processing(jobinfo) abort$/;"	f
s:need_trans	plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:needs_to_replace_qf_for_lwindow	plugged/neomake/autoload/neomake.vim	/^let s:needs_to_replace_qf_for_lwindow = has('patch-7.4.379')$/;"	v
s:neomake_automake	plugged/neomake/autoload/neomake/configure.vim	/^function! s:neomake_automake(event, bufnr) abort$/;"	f
s:neomake_automake_clean	plugged/neomake/autoload/neomake/configure.vim	/^function! s:neomake_automake_clean(bufnr) abort$/;"	f
s:neomake_do_automake	plugged/neomake/autoload/neomake/configure.vim	/^function! s:neomake_do_automake(context) abort$/;"	f
s:neomake_elixir_credo_config_typemap	plugged/neomake/autoload/neomake/makers/ft/elixir.vim	/^let s:neomake_elixir_credo_config_typemap = {$/;"	v
s:neomake_root	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^    let s:neomake_root = expand('<sfile>:p:h:h:h:h:h', 1)$/;"	v
s:new	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:new(plugin_name) abort$/;"	f
s:new	plugged/undotree/autoload/undotree.vim	/^function! s:new(obj)$/;"	f
s:new_log_session	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:new_log_session = 1$/;"	v
s:new_window	autoload/plug.vim	/^function! s:new_window()$/;"	f
s:new_window	plugged/tagbar/autoload/tagbar.vim	/^let s:new_window      = 1$/;"	v
s:next_sign_id	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:next_sign_id() abort$/;"	f
s:next_sign_id	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:next_sign_id  = s:first_sign_id$/;"	v
s:no_loclist_counts	plugged/neomake/autoload/neomake/statusline.vim	/^let s:no_loclist_counts = {}$/;"	v
s:node	plugged/undotree/autoload/undotree.vim	/^let s:node = {}$/;"	v
s:node.Init	plugged/undotree/autoload/undotree.vim	/^function! s:node.Init()$/;"	f
s:nomodeline	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' :/;"	v
s:non_zero_only	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:non_zero_only = get(g:, 'airline#extensions#hunks#non_zero_only', 0)$/;"	v
s:not_git_dir	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:not_git_dir(bufnr) abort$/;"	f
s:not_tracked_by_git	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^  function! s:not_tracked_by_git(bufnr)$/;"	f
s:notify	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! s:notify(event, context) abort$/;"	f
s:nowait	plugged/vim-startify/autoload/startify.vim	/^let s:nowait         = v:version >= 704 || (v:version == 703 && has('patch1261')) ? '<nowait>' :/;"	v
s:nr2byte	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
s:nr2enc_char	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
s:nr2hex	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
s:nrule	plugged/GoldenView.Vim/autoload/GoldenView/zl/rule.vim	/^let s:nrule = {$/;"	v
s:nsplit	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
s:number_map	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:number_map = &encoding == 'utf-8'$/;"	v
s:number_map	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:number_map = {$/;"	v
s:numfiles	plugged/vim-startify/autoload/startify.vim	/^let s:numfiles       = get(g:, 'startify_files_number', 10)$/;"	v
s:nvim	autoload/plug.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') && !s:is_win)$/;"	v
s:nvim_api	plugged/neomake/autoload/neomake/highlights.vim	/^let s:nvim_api = exists('*nvim_buf_add_highlight')$/;"	v
s:nvim_can_buffer_output	plugged/neomake/autoload/neomake.vim	/^let s:nvim_can_buffer_output = (has('nvim-0.2.4') ? 1 :$/;"	v
s:nvim_cb	autoload/plug.vim	/^function! s:nvim_cb(job_id, data, event) dict abort$/;"	f
s:nvim_exit_handler	plugged/neomake/autoload/neomake.vim	/^function! s:nvim_exit_handler(job_id, data, event_type) abort$/;"	f
s:nvim_exit_handler_buffered	plugged/neomake/autoload/neomake.vim	/^function! s:nvim_exit_handler_buffered(job_id, data, event_type) abort$/;"	f
s:nvim_exit_handler_detect_buffered	plugged/neomake/autoload/neomake.vim	/^function! s:nvim_exit_handler_detect_buffered(job_id, data, event_type) abort$/;"	f
s:nvim_job_exit_wrapper	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_exit_wrapper(real_cb, job, exit_code, event_type) abort$/;"	f
s:nvim_job_out_wrapper	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_out_wrapper(real_cb, job, lines, event_type) abort$/;"	f
s:nvim_mq_job_handler	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_mq_job_handler(job_id, data, event) dict$/;"	f
s:nvim_output_handler	plugged/neomake/autoload/neomake.vim	/^    function! s:nvim_output_handler(job_id, data, event_type) abort$/;"	f
s:nvim_output_handler	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_output_handler(job_id, data, event) dict$/;"	f
s:nvim_output_handler_cb	plugged/neomake/autoload/neomake.vim	/^    function! s:nvim_output_handler_cb(timer) abort$/;"	f
s:nvim_output_handler_queue	plugged/neomake/autoload/neomake.vim	/^    let s:nvim_output_handler_queue = []$/;"	v
s:nvim_po_job_handler	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_po_job_handler(job_id, data, event) dict$/;"	f
s:nvim_untracked_job_handler	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_untracked_job_handler(job_id, data, event) dict$/;"	f
s:obsolete_gitgutter_signs_to_remove	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:obsolete_gitgutter_signs_to_remove(bufnr, new_gitgutter_signs_line_numbers) abort$/;"	f
s:old_cpo	plugged/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:on_colorscheme_changed	plugged/vim-airline/plugin/airline.vim	/^function! s:on_colorscheme_changed()$/;"	f
s:on_complete_done	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:on_complete_done() abort$/;"	f
s:on_exit_mq	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_mq(channel) dict abort$/;"	f
s:on_exit_nvim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_nvim(_job_id, exit_code, _event) dict abort$/;"	f
s:on_exit_po	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_po(channel) dict abort$/;"	f
s:on_exit_untracked	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_untracked(channel) dict abort$/;"	f
s:on_exit_vim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_vim(_channel) dict abort$/;"	f
s:on_insert_leave	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:on_insert_leave() abort$/;"	f
s:on_stderr_nvim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_nvim(_job_id, _data, _event) dict abort$/;"	f
s:on_stderr_vim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_vim(channel, _data) dict abort$/;"	f
s:on_stdout	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_stdout(channel, msg) dict abort$/;"	f
s:on_stdout_nvim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_nvim(_job_id, data, _event) dict abort$/;"	f
s:on_stdout_vim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_vim(_channel, data) dict abort$/;"	f
s:on_vimenter	plugged/vim-startify/plugin/startify.vim	/^function! s:on_vimenter()$/;"	f
s:on_vimleavepre	plugged/vim-startify/plugin/startify.vim	/^function! s:on_vimleavepre()$/;"	f
s:on_window_changed	plugged/vim-airline/plugin/airline.vim	/^function! s:on_window_changed()$/;"	f
s:open	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:open(cmd, target)$/;"	f
s:openExplorer	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openExplorer(node)$/;"	f
s:openFold	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:openFold() abort dict$/;"	f
s:openFold	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:openFold() abort dict$/;"	f
s:openHSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplit(target)$/;"	f
s:openInNewTab	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTab(target)$/;"	f
s:openInNewTabSilent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTabSilent(target)$/;"	f
s:openKindFold	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:openKindFold(kind) abort dict$/;"	f
s:openNodeRecursively	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openNodeRecursively(node)$/;"	f
s:openParents	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:openParents() abort dict$/;"	f
s:openVSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplit(target)$/;"	f
s:open_buffer	plugged/vim-startify/autoload/startify.vim	/^function! s:open_buffer(entry)$/;"	f
s:option	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:option(name)$/;"	f
s:or	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:or(xs) abort$/;"	f
s:os_type	plugged/GoldenView.Vim/autoload/GoldenView/zl/sys.vim	/^let s:os_type   = GoldenView#zl#sys#ostype()$/;"	v
s:output	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:output(text)$/;"	f
s:output_handler	plugged/neomake/autoload/neomake.vim	/^function! s:output_handler(jobinfo, data, event_type, trim_CR) abort$/;"	f
s:output_handler_queued	plugged/neomake/autoload/neomake.vim	/^function! s:output_handler_queued(jobinfo, data, event_type, trim_CR) abort$/;"	f
s:overwrite	plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^let s:overwrite = get(g:, 'airline#extensions#bufferline#overwrite_variables', 1)$/;"	v
s:pad_between_letters	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
s:pad_both_sides	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
s:pad_left	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
s:pad_right	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
s:padding	plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^let s:padding = s:spc . s:spc . s:spc$/;"	v
s:padding_by_displaywidth	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
s:padding_left	plugged/vim-startify/autoload/startify.vim	/^let s:padding_left = repeat(' ', get(g:, 'startify_padding_left', 3))$/;"	v
s:padding_left	plugged/vim-startify/syntax/startify.vim	/^let s:padding_left = repeat(' ', get(g:, 'startify_padding_left', 3))$/;"	v
s:panel	plugged/undotree/autoload/undotree.vim	/^let s:panel = {}$/;"	v
s:panel.Hide	plugged/undotree/autoload/undotree.vim	/^function! s:panel.Hide()$/;"	f
s:panel.Init	plugged/undotree/autoload/undotree.vim	/^function! s:panel.Init()$/;"	f
s:panel.IsVisible	plugged/undotree/autoload/undotree.vim	/^function! s:panel.IsVisible()$/;"	f
s:panel.SetFocus	plugged/undotree/autoload/undotree.vim	/^function! s:panel.SetFocus()$/;"	f
s:parse	plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! s:parse(snippets_file) abort$/;"	f
s:parse_events_from_args	plugged/neomake/autoload/neomake/configure.vim	/^function! s:parse_events_from_args(config, string_or_dict_config, ...) abort$/;"	f
s:parse_options	autoload/plug.vim	/^function! s:parse_options(arg)$/;"	f
s:parse_snippet_name	plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! s:parse_snippet_name(snippets_file, line, linenr, dup_check) abort$/;"	f
s:partition	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
s:parts	plugged/vim-airline/autoload/airline/parts.vim	/^let s:parts = {}$/;"	v
s:paste_buffer_temporary_text	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:paste_buffer_temporary_text = ''$/;"	v
s:paste_buffer_temporary_type	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:paste_buffer_temporary_type = ''$/;"	v
s:path	autoload/plug.vim	/^  function! s:path(path)$/;"	f
s:path2directory	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
s:path2project_directory	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=#\\([^-+# ]\\)\\@='$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=+\\([^-+# ]\\)\\@='$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=-\\([^-+# ]\\)\\@='$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . '][-+# ]\\?\\)\\@<=[^*(]\\+\\(\\*\\?\\(([^)]\\+)\\)\\? /;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(^[' . s:ics . '] \\?\\)\\@3<=[^-+: ]\\+[^:]\\+$'$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\S\\@<![' . s:ics . ']\\([-+# ]\\?\\)\\@='$/;"	v
s:paused	plugged/tagbar/autoload/tagbar.vim	/^let s:paused = 0$/;"	v
s:pcall	plugged/neomake/autoload/neomake.vim	/^function! s:pcall(fn, args) abort$/;"	f
s:pending_outputs	plugged/neomake/autoload/neomake.vim	/^let s:pending_outputs = {}$/;"	v
s:permutations	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
s:placed_signs	plugged/neomake/autoload/neomake/signs.vim	/^let s:placed_signs = {'project': {}, 'file': {}}$/;"	v
s:pluck	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:pluck(dict, key, default)$/;"	f
s:plug_buf	autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	v
s:plug_src	autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	v
s:plug_tab	autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	v
s:plug_window_exists	autoload/plug.vim	/^function! s:plug_window_exists()$/;"	f
s:plugin_dir	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:plugin_dir  = expand('<sfile>:p:h:h:h').'\/'$/;"	v
s:plugin_home	plugged/vim-devicons/plugin/webdevicons.vim	/^let s:plugin_home = expand('<sfile>:p:h:h')$/;"	v
s:plugin_name	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:plugin_name() abort dict$/;"	f
s:plugin_name	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:po_jobs	plugged/vim-airline/autoload/airline/async.vim	/^let s:po_jobs        = {}$/;"	v
s:po_output	plugged/vim-airline/autoload/airline/async.vim	/^function! s:po_output(buf, file)$/;"	f
s:pop	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:pop(list) abort$/;"	f
s:pos	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:pos(mark)$/;"	f
s:pprint	plugged/neomake/autoload/neomake/debug.vim	/^    function! s:pprint(d, ...) abort$/;"	f
s:predefined_quotes	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:predefined_quotes = [$/;"	v
s:prepare	autoload/plug.vim	/^function! s:prepare(...)$/;"	f
s:prepend_opts	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:prepend_opts(dict, eopts)$/;"	f
s:prev_windows	plugged/neomake/autoload/neomake/compat.vim	/^let s:prev_windows = []$/;"	v
s:preview	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:preview(hunk_diff)$/;"	f
s:previewNodeCurrent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeCurrent(node)$/;"	f
s:previewNodeHSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplit(node)$/;"	f
s:previewNodeVSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplit(node)$/;"	f
s:preview_commit	autoload/plug.vim	/^function! s:preview_commit()$/;"	f
s:print_section_header	plugged/vim-startify/autoload/startify.vim	/^function! s:print_section_header() abort$/;"	f
s:process_action_queue	plugged/neomake/autoload/neomake.vim	/^function! s:process_action_queue(event) abort$/;"	f
s:process_action_queue_timer_cb	plugged/neomake/autoload/neomake.vim	/^function! s:process_action_queue_timer_cb(...) abort$/;"	f
s:process_added	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_added(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_hunk	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_hunk(bufnr, hunk) abort$/;"	f
s:process_modified	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_modified_and_added	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified_and_added(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_modified_and_removed	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified_and_removed(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_options_file	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:process_options_file(proj_dir, path) abort$/;"	f
s:process_pending_output	plugged/neomake/autoload/neomake.vim	/^function! s:process_pending_output(jobinfo, lines, source, ...) abort$/;"	f
s:process_removed	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_removed(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_user_input	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:process_user_input()$/;"	f
s:product	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:product(lists) abort$/;"	f
s:progress_bar	autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	f
s:progress_opt	autoload/plug.vim	/^function! s:progress_opt(base)$/;"	f
s:project_root	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:promptToDelBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
s:promptToRenameBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToRenameBuffer(bufnum, msg, newFileName)$/;"	f
s:prompt_snapshot_file	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:prompt_snapshot_file = get(g:, 'airline#extensions#promptline#snapshot_file', '')$/;"	v
s:prototype	plugged/vim-airline/autoload/airline/builder.vim	/^let s:prototype = {}$/;"	v
s:prototype	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^let s:prototype = {}$/;"	v
s:prototype	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^let s:prototype.overflow_group = 'airline_tab'$/;"	v
s:prototype.add_raw	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_raw(text) dict$/;"	f
s:prototype.add_section	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section(group, contents) dict$/;"	f
s:prototype.add_section_spaced	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section_spaced(group, contents) dict$/;"	f
s:prototype.build	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.build() dict$/;"	f
s:prototype.build	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.build() dict$/;"	f
s:prototype.get_position	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.get_position() dict$/;"	f
s:prototype.insert_raw	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.insert_raw(text, position) dict$/;"	f
s:prototype.insert_section	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.insert_section(group, contents, position) dict$/;"	f
s:prototype.insert_titles	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.insert_titles(current, first, last) dict$/;"	f
s:prototype.split	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.split(...) dict$/;"	f
s:prototype.try_insert_title	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.try_insert_title(index, group, pos, sep_size, force) dict$/;"	f
s:psep	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^    let s:psep = '\/'$/;"	v
s:psep	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^    let s:psep = '\\'$/;"	v
s:push	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
s:pwin_by_tagbar	plugged/tagbar/autoload/tagbar.vim	/^let s:pwin_by_tagbar = 0$/;"	v
s:pyscript_path	plugged/editorconfig-vim/plugin/editorconfig.vim	/^let s:pyscript_path = expand('<sfile>:p:r') . '.py'$/;"	v
s:qflist_counts	plugged/neomake/autoload/neomake/statusline.vim	/^let s:qflist_counts = {}$/;"	v
s:queue_action	plugged/neomake/autoload/neomake.vim	/^function! s:queue_action(events, data) abort$/;"	f
s:quotes	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:quotes = exists('g:startify_custom_header_quotes')$/;"	v
s:readfile	plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:readfile(cache_dir, filename) abort$/;"	f
s:reap	autoload/plug.vim	/^function! s:reap(name)$/;"	f
s:reduce_line	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:reduce_line(lines)$/;"	f
s:refreshCurrent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshCurrent(node)$/;"	f
s:refreshRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshRoot()$/;"	f
s:region	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:region(start_mark, end_mark)$/;"	f
s:register	plugged/vim-startify/autoload/startify.vim	/^function! s:register(line, index, type, cmd, path)$/;"	f
s:registered_events	plugged/neomake/autoload/neomake/configure.vim	/^let s:registered_events = []$/;"	v
s:regress_bar	autoload/plug.vim	/^function! s:regress_bar()$/;"	f
s:relative_path	plugged/vim-startify/autoload/startify.vim	/^let s:relative_path  = get(g:, 'startify_relative_path') ? ':~:.' : ':p:~'$/;"	v
s:reload_plugins	autoload/plug.vim	/^function! s:reload_plugins()$/;"	f
s:reltime_lastmsg	plugged/neomake/autoload/neomake/log.vim	/^function! s:reltime_lastmsg() abort$/;"	f
s:removeChild	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:removeChild(tag) dict abort$/;"	f
s:removeTag	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:removeTag(tag) dict abort$/;"	f
s:remove_ansi_sequences	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:remove_ansi_sequences(text) abort$/;"	f
s:remove_layout	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:remove_layout(opts)$/;"	f
s:remove_rtp	autoload/plug.vim	/^function! s:remove_rtp()$/;"	f
s:remove_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:remove_signs(bufnr, sign_ids, all_signs) abort$/;"	f
s:remove_triggers	autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	f
s:reorg_rtp	autoload/plug.vim	/^function! s:reorg_rtp()$/;"	f
s:repair_posix_text	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:repair_posix_text(text, ...) abort$/;"	f
s:replace	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
s:replace_first	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
s:reset	plugged/neomake/autoload/neomake/highlights.vim	/^    function! s:reset(type, buf) abort$/;"	f
s:reset	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:reset() abort dict$/;"	f
s:reset_summary	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:reset_summary(bufnr) abort$/;"	f
s:reset_tick	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:reset_tick(bufnr) abort$/;"	f
s:reset_untracked_cache	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:reset_untracked_cache(shellcmdpost)$/;"	f
s:resolve_name	plugged/neomake/autoload/neomake/config.vim	/^function! s:resolve_name(dict, name, init) abort$/;"	f
s:restore_shell	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:restore_shell() abort$/;"	f
s:retry	autoload/plug.vim	/^function! s:retry()$/;"	f
s:retry_keys	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:retry_keys = ""$/;"	v
s:reuseWin	plugged/nerdtree/autoload/nerdtree.vim	/^function! s:reuseWin(dir) abort$/;"	f
s:reverse	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
s:revert	autoload/plug.vim	/^function! s:revert()$/;"	f
s:revert_highlight_fix	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:revert_highlight_fix()$/;"	f
s:revert_mode	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:revert_mode(from, to)$/;"	f
s:rm_rf	autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	f
s:rtp	autoload/plug.vim	/^  function! s:rtp(spec)$/;"	f
s:rule_types	plugged/GoldenView.Vim/autoload/GoldenView/zl/rule.vim	/^let s:rule_types =  [$/;"	v
s:runner_exe	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:runner_exe = gutentags#get_plat_file('update_scopedb')$/;"	v
s:runner_exe	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:runner_exe = gutentags#get_plat_file('update_tags')$/;"	v
s:running_jobs	plugged/neomake/autoload/neomake/statusline.vim	/^function! s:running_jobs(bufnr) abort$/;"	f
s:rustup_has_nightly	plugged/neomake/autoload/neomake/makers/clippy.vim	/^let s:rustup_has_nightly = -1$/;"	v
s:save_cpo	plugged/GoldenView.Vim/plugin/GoldenView.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/rust.vim/compiler/cargo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/rust.vim/ftplugin/rust.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/rust.vim/indent/rust.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/rust.vim/plugin/rust.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/rust.vim/syntax_checkers/rust/cargo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/rust.vim/syntax_checkers/rust/rustc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-devicons/plugin/webdevicons.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_last_seen_change	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:save_last_seen_change(bufnr) abort$/;"	f
s:saved_char	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_char = ''$/;"	v
s:saved_cpo	plugged/editorconfig-vim/autoload/editorconfig.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	plugged/editorconfig-vim/plugin/editorconfig.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_keys	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_keys = ""$/;"	v
s:saved_line	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_line = 0$/;"	v
s:saved_linecount	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_linecount = -1$/;"	v
s:saved_path	plugged/neomake/tests/include/init.vim	/^let s:saved_path = 0$/;"	v
s:scan	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
s:script_path	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:script_path = tolower(resolve(expand('<sfile>:p:h')))$/;"	v
s:search	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:search(pattern) abort dict$/;"	f
s:search_history_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:search_history_sink(lines)$/;"	f
s:search_sync_placeholder	plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:search_sync_placeholder(start, end, number) abort$/;"	f
s:section	autoload/plug.vim	/^function! s:section(flags)$/;"	f
s:section_is_empty	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:section_is_empty(self, content)$/;"	f
s:section_truncate_width	plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:section_truncate_width = get(g:, 'airline#extensions#default#section_truncate_width', {$/;"	v
s:section_use_groups	plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:section_use_groups     = get(g:, 'airline#extensions#default#section_use_groupitems', 1)$/;"	v
s:sections	plugged/vim-airline/autoload/airline.vim	/^let s:sections = ['a','b','c','gutter','x','y','z', 'error', 'warning']$/;"	v
s:sections	plugged/vim-airline/t/init.vim	/^let s:sections = ['a', 'b', 'c', 'gutter', 'x', 'y', 'z', 'warning']$/;"	v
s:select_in_visual_mode	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:select_in_visual_mode(region)$/;"	f
s:select_tab	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:select_tab(buf_index)$/;"	f
s:sep	plugged/vim-startify/autoload/startify.vim	/^let s:sep = startify#get_separator()$/;"	v
s:sep	plugged/vim-startify/syntax/startify.vim	/^let s:sep = startify#get_separator()$/;"	v
s:separator	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:separator()$/;"	f
s:separators	plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:separators = {}$/;"	v
s:session_dir	plugged/vim-startify/autoload/startify.vim	/^let s:session_dir    = resolve(expand(get(g:, 'startify_session_dir',$/;"	v
s:set	plugged/neomake/autoload/neomake/config.vim	/^function! s:set(dict, name, value) abort$/;"	f
s:set	plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:set(var, default) abort$/;"	f
s:setCursorHold	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:setCursorHold()$/;"	f
s:setDictionaries	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:setDictionaries()$/;"	f
s:setFolded	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:setFolded(folded) abort dict$/;"	f
s:setSyntax	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:setSyntax()$/;"	f
s:set_cursor	plugged/vim-startify/autoload/startify.vim	/^function! s:set_cursor() abort$/;"	f
s:set_cursor_color_for	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:set_cursor_color_for(mode)$/;"	f
s:set_default	plugged/GoldenView.Vim/autoload/GoldenView/zl/rc.vim	/^function! s:set_default(var,val)$/;"	f
s:set_default	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
s:set_focus_window	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! s:set_focus_window(profile,...)$/;"	f
s:set_mappings	plugged/vim-startify/autoload/startify.vim	/^function! s:set_mappings() abort$/;"	f
s:set_mark	plugged/vim-startify/autoload/startify.vim	/^function! s:set_mark(type, ...) abort$/;"	f
s:set_other_window	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! s:set_other_window(profile,...)$/;"	f
s:set_path	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:set_path(bufnr, path)$/;"	f
s:set_qf_lines	plugged/neomake/autoload/neomake/quickfix.vim	/^function! s:set_qf_lines(lines) abort$/;"	f
s:set_snippet_dict	plugged/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! s:set_snippet_dict(snippet_dict, snippets, dup_check, snippets_file) abort$/;"	f
s:settings	plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:settings = {$/;"	v
s:settings_if_default	plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:settings_if_default = {$/;"	v
s:setup_autocmds	plugged/neomake/plugin/neomake.vim	/^function! s:setup_autocmds() abort$/;"	f
s:setup_keymaps	plugged/tagbar/plugin/tagbar.vim	/^function! s:setup_keymaps() abort$/;"	f
s:setup_options	plugged/tagbar/plugin/tagbar.vim	/^function! s:setup_options() abort$/;"	f
s:setup_statusline_augroup_for_use	plugged/neomake/autoload/neomake/statusline.vim	/^function! s:setup_statusline_augroup_for_use() abort$/;"	f
s:sha1size	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:sha1size = get(g:, 'airline#extensions#branch#sha1_len', 7)$/;"	v
s:shell_argv	plugged/neomake/tests/include/init.vim	/^let s:shell_argv = split(&shell) + split(&shellcmdflag)$/;"	v
s:shellesc	autoload/plug.vim	/^function! s:shellesc(arg)$/;"	f
s:shellesc_cmd	autoload/plug.vim	/^function! s:shellesc_cmd(arg)$/;"	f
s:shellescape	plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
s:shellescape	plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^  function! s:shellescape(command) abort$/;"	f
s:shescape	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:shescape(string) abort$/;"	f
s:shift	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:shift(list) abort$/;"	f
s:short_help	plugged/tagbar/autoload/tagbar.vim	/^let s:short_help      = 1$/;"	v
s:short_level_to_name	plugged/neomake/autoload/neomake/log.vim	/^let s:short_level_to_name = {0: 'E', 1: 'W', 2: 'V', 3: 'D'}$/;"	v
s:shortpath	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:shortpath()$/;"	f
s:showErrWarning	plugged/neomake/autoload/neomake/statusline.vim	/^function! s:showErrWarning(counts, prefix) abort$/;"	f
s:showMenu	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:showMenu(node)$/;"	f
s:show_bookmarks	plugged/vim-startify/autoload/startify.vim	/^function! s:show_bookmarks() abort$/;"	f
s:show_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:show_buffers = get(g:, 'airline#extensions#tabline#show_buffers', 1)$/;"	v
s:show_commands	plugged/vim-startify/autoload/startify.vim	/^function! s:show_commands() abort$/;"	f
s:show_dir	plugged/vim-startify/autoload/startify.vim	/^function! s:show_dir() abort$/;"	f
s:show_files	plugged/vim-startify/autoload/startify.vim	/^function! s:show_files() abort$/;"	f
s:show_line_numbers	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^let s:show_line_numbers = get(g:, 'airline#extensions#ale#show_line_numbers', 1)$/;"	v
s:show_lists	plugged/vim-startify/autoload/startify.vim	/^function! s:show_lists(lists) abort$/;"	f
s:show_message	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:show_message = get(g:, 'airline#extensions#whitespace#show_message', 1)$/;"	v
s:show_sessions	plugged/vim-startify/autoload/startify.vim	/^function! s:show_sessions() abort$/;"	f
s:show_special	plugged/vim-startify/autoload/startify.vim	/^let s:show_special   = get(g:, 'startify_enable_special', 1)$/;"	v
s:show_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! s:show_tabline(min_count, total_count)$/;"	f
s:sid2sfuncs	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
s:sign_order	plugged/neomake/autoload/neomake/signs.vim	/^let s:sign_order = {'neomake_file_err': 0, 'neomake_file_warn': 1,$/;"	v
s:signs	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:signs(filename)$/;"	f
s:skip_check_ft	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:skip_check_ft = {'make': ['indent', 'mixed-indent-file'] }$/;"	v
s:skip_latency_measure	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:skip_latency_measure()$/;"	f
s:skip_next_auto_completion	plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:skip_next_auto_completion() abort$/;"	f
s:skip_symbol	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^let s:skip_symbol = '…'$/;"	v
s:skiplist	plugged/vim-startify/autoload/startify.vim	/^let s:skiplist = get(g:, 'startify_skiplist', [$/;"	v
s:slash	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^let s:slash = neomake#utils#Slash()$/;"	v
s:slash	plugged/neomake/autoload/neomake/makers/ft/python.vim	/^    let s:slash = neomake#utils#Slash()$/;"	v
s:smart_execute_command	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
s:snapshot	autoload/plug.vim	/^function! s:snapshot(force, ...) abort$/;"	f
s:snippets_expand	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! s:snippets_expand(cur_text, col) abort$/;"	f
s:snippets_expand_or_jump	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! s:snippets_expand_or_jump(cur_text, col) abort$/;"	f
s:snippets_jump_or_expand	plugged/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! s:snippets_jump_or_expand(cur_text, col) abort$/;"	f
s:softRefreshNerdTree	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:softRefreshNerdTree()$/;"	f
s:sort	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
s:sortTags	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:sortTags(compare_typeinfo) abort dict$/;"	f
s:sort_buffers	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:sort_buffers(...)$/;"	f
s:sort_by	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
s:sort_by_mtime	plugged/vim-startify/autoload/startify.vim	/^    function! s:sort_by_mtime(foo, bar)$/;"	f
s:sort_by_tick	plugged/vim-startify/autoload/startify.vim	/^function! s:sort_by_tick(one, two)$/;"	f
s:sort_jobs	plugged/neomake/autoload/neomake.vim	/^function! s:sort_jobs(a, b) abort$/;"	f
s:source	autoload/plug.vim	/^function! s:source(from, ...)$/;"	f
s:source	plugged/neosnippet.vim/autoload/neocomplcache/sources/snippets_complete.vim	/^let s:source = {$/;"	v
s:source	plugged/neosnippet.vim/autoload/neocomplete/sources/neosnippet.vim	/^let s:source = {$/;"	v
s:source	plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^let s:source = {$/;"	v
s:source	plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^let s:source.action_table = s:action_table$/;"	v
s:source.gather_candidates	plugged/neosnippet.vim/autoload/neocomplete/sources/neosnippet.vim	/^function! s:source.gather_candidates(context) abort$/;"	f
s:source.gather_candidates	plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! s:source.gather_candidates(args, context) abort$/;"	f
s:source.get_complete_words	plugged/neosnippet.vim/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:source.get_complete_words(cur_keyword_pos, cur_keyword_str) abort$/;"	f
s:source.get_keyword_pos	plugged/neosnippet.vim/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:source.get_keyword_pos(cur_text) abort$/;"	f
s:source.hooks.on_init	plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! s:source.hooks.on_init(args, context) abort$/;"	f
s:source.hooks.on_post_filter	plugged/neosnippet.vim/autoload/neocomplete/sources/neosnippet.vim	/^function! s:source.hooks.on_post_filter(context) abort$/;"	f
s:source.initialize	plugged/neosnippet.vim/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:source.initialize() abort$/;"	f
s:source_runtime	plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^let s:source_runtime = {$/;"	v
s:source_runtime	plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^let s:source_runtime.action_table.unite__new_candidate = {$/;"	v
s:source_runtime.action_table.unite__new_candidate.func	plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^function! s:source_runtime.action_table.unite__new_candidate.func(candidate) abort$/;"	f
s:source_runtime.gather_candidates	plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^function! s:source_runtime.gather_candidates(args, context) abort$/;"	f
s:source_user	plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^let s:source_user = {$/;"	v
s:source_user	plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^let s:source_user.action_table.unite__new_candidate = {$/;"	v
s:source_user.action_table.unite__new_candidate.func	plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^function! s:source_user.action_table.unite__new_candidate.func(candidate) abort$/;"	f
s:source_user.gather_candidates	plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^function! s:source_user.gather_candidates(args, context) abort$/;"	f
s:sourced_plugins	plugged/neomake/tests/vim/vimrc	/^let s:sourced_plugins = []$/;"	v
s:spaceStr	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^let s:spaceStr = ' '$/;"	v
s:span	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
s:spawn	autoload/plug.vim	/^function! s:spawn(name, cmd, opts)$/;"	f
s:spawn	plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
s:spc	plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/example.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/section.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/util.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:special_keys	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:special_keys = {$/;"	v
s:split3	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
s:split_by_displaywidth	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
s:split_leftright	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
s:split_posix_text	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:split_posix_text(text, ...) abort$/;"	f
s:split_rtp	autoload/plug.vim	/^function! s:split_rtp()$/;"	f
s:stage	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:stage(hunk_diff)$/;"	f
s:start_latency_measure	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:start_latency_measure()$/;"	f
s:starts_with	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:starts_with(str, prefix) abort$/;"	f
s:status	autoload/plug.vim	/^function! s:status()$/;"	f
s:status_load	autoload/plug.vim	/^function! s:status_load(lnum)$/;"	f
s:status_update	autoload/plug.vim	/^function! s:status_update() range$/;"	f
s:statusline_in_use	plugged/tagbar/autoload/tagbar.vim	/^let s:statusline_in_use = 0$/;"	v
s:still_have_issues	plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:still_have_issues() abort$/;"	f
s:str	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:str(longsig, full) abort dict$/;"	f
s:strchars	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
s:strchars	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^  let s:strchars = function('strchars')$/;"	v
s:strfmt	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:strfmt() abort dict$/;"	f
s:strfmt	plugged/tagbar/autoload/tagbar/prototypes/pseudotag.vim	/^function! s:strfmt() abort dict$/;"	f
s:strip	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:strip(str)$/;"	f
s:strip	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:strip(input)$/;"	f
s:strip_trailing_new_line	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:strip_trailing_new_line(line) abort$/;"	f
s:strip_whitespace_pattern	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let s:strip_whitespace_pattern = s:eol_whitespace_pattern$/;"	v
s:strpart	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:strpart(s, i, l)$/;"	f
s:strwidthpart	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
s:strwidthpart	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
s:strwidthpart_reverse	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
s:strwidthpart_reverse	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
s:substitute_last	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
s:substitute_path_separator	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
s:substitute_placeholder_marker	plugged/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:substitute_placeholder_marker(start, end, snippet_holder_cnt) abort$/;"	f
s:suite	plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^let s:suite = themis#suite('custom')$/;"	v
s:suite	plugged/deoplete.nvim/test/autoload/deoplete/util.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	plugged/neosnippet.vim/test/functions.vim	/^let s:suite = themis#suite('toml')$/;"	v
s:suite	plugged/vim-php-cs-fixer/tests/misc.vim	/^let s:suite  = themis#suite('vim-php-cs-fixer')$/;"	v
s:suite.before_each	plugged/vim-php-cs-fixer/tests/misc.vim	/^function! s:suite.before_each() abort "{{{$/;"	f
s:suite.class_definitionNo_trailing_whitespace	plugged/vim-php-cs-fixer/tests/misc.vim	/^function! s:suite.class_definitionNo_trailing_whitespace() abort "{{{$/;"	f
s:suite.custom	plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^function! s:suite.custom() abort$/;"	f
s:suite.get_completed_snippet	plugged/neosnippet.vim/test/functions.vim	/^function! s:suite.get_completed_snippet() abort$/;"	f
s:suite.get_in_paren	plugged/neosnippet.vim/test/functions.vim	/^function! s:suite.get_in_paren() abort$/;"	f
s:suite.imports	plugged/vim-php-cs-fixer/tests/misc.vim	/^function! s:suite.imports() abort "{{{$/;"	f
s:suite.no_closing_tagFull_opening_tag	plugged/vim-php-cs-fixer/tests/misc.vim	/^function! s:suite.no_closing_tagFull_opening_tag() abort "{{{$/;"	f
s:suite.phpdoc_to_commentPhpdoc_var_without_name	plugged/vim-php-cs-fixer/tests/misc.vim	/^function! s:suite.phpdoc_to_commentPhpdoc_var_without_name() abort "{{{$/;"	f
s:suite.phpdocsTest	plugged/vim-php-cs-fixer/tests/misc.vim	/^function! s:suite.phpdocsTest() abort "{{{$/;"	f
s:suite.semicolon_after_instructionNo_unneeded_control_parentheses	plugged/vim-php-cs-fixer/tests/misc.vim	/^function! s:suite.semicolon_after_instructionNo_unneeded_control_parentheses() abort "{{{$/;"	f
s:suite.simplified_null_returnNo_useless_returnNo_whitespace_in_blank_lineBlank_line_before_returnNo_extra_consecutive_blank_lines	plugged/vim-php-cs-fixer/tests/misc.vim	/^function! s:suite.simplified_null_returnNo_useless_returnNo_whitespace_in_blank_lineBlank_line_b/;"	f
s:suite.single_import_per_statementOrdered_imports	plugged/vim-php-cs-fixer/tests/misc.vim	/^function! s:suite.single_import_per_statementOrdered_imports() abort "{{{$/;"	f
s:suite.vimoption2python	plugged/deoplete.nvim/test/autoload/deoplete/util.vim	/^function! s:suite.vimoption2python() abort$/;"	f
s:super_ft_cache	plugged/neomake/autoload/neomake/utils.vim	/^let s:super_ft_cache = {}$/;"	v
s:supports_star	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:supports_star = v:version > 703 || (v:version == 703 && has("patch596"))$/;"	v
s:switch_in	autoload/plug.vim	/^function! s:switch_in()$/;"	f
s:switch_out	autoload/plug.vim	/^function! s:switch_out(...)$/;"	f
s:symbol	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:symbol = get(g:, 'airline#extensions#whitespace#symbol', g:airline_symbols.whitespace)$/;"	v
s:sync_active_winnr	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:sync_active_winnr()$/;"	f
s:syntax	autoload/plug.vim	/^function! s:syntax()$/;"	f
s:system	autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	f
s:system	plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^function! s:system(str, ...) abort$/;"	f
s:system	plugged/rust.vim/autoload/rust.vim	/^function! s:system(pwd, cmd)$/;"	f
s:system_chomp	autoload/plug.vim	/^function! s:system_chomp(...)$/;"	f
s:t_string	plugged/vim-gitgutter/autoload/gitgutter.vim	/^let s:t_string = type('')$/;"	v
s:tab_min_count	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:tab_min_count = get(g:, 'airline#extensions#tabline#tab_min_count', 0)$/;"	v
s:tabfill	plugged/nova-vim/autoload/airline/themes/nova.vim	/^let s:tabfill = airline#themes#get_highlight2(['Normal', 'bg'], ['Normal', 'bg'])$/;"	v
s:tabline_evaluated_length	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:tabline_evaluated_length(tabline)$/;"	f
s:taboo	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:taboo = get(g:, 'airline#extensions#taboo#enabled', 1) && get(g:, 'loaded_taboo', 0)$/;"	v
s:tags_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:tags_sink(lines)$/;"	f
s:take_while	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
s:temp_buffer	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_buffer = tempname()$/;"	v
s:temp_index	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_index = tempname()$/;"	v
s:tempname	plugged/neomake/tests/include/init.vim	/^let s:tempname = tempname()$/;"	v
s:test_repo	plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:test_repo   = s:current_dir.'\/test-repo'$/;"	v
s:tests	plugged/vim-gitgutter/test/runner.vim	/^  let s:tests = filter(s:tests, 'v:val =~ argv(1)')$/;"	v
s:tests	plugged/vim-gitgutter/test/runner.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k*()\\)', '\\1', 'g'))$/;"	v
s:tf	plugged/vim-startify/autoload/startify.vim	/^let s:tf             = exists('g:startify_transformations')$/;"	v
s:tick	autoload/plug.vim	/^function! s:tick()$/;"	f
s:tick_changed	plugged/neomake/autoload/neomake/configure.vim	/^function! s:tick_changed(context, update) abort$/;"	f
s:timeDay	plugged/undotree/autoload/undotree.vim	/^    let s:timeDay  = '1 d'$/;"	v
s:timeDay	plugged/undotree/autoload/undotree.vim	/^    let s:timeDay  = '1 day ago'$/;"	v
s:timeDays	plugged/undotree/autoload/undotree.vim	/^    let s:timeDays = ' d'$/;"	v
s:timeDays	plugged/undotree/autoload/undotree.vim	/^    let s:timeDays = ' days ago'$/;"	v
s:timeHour	plugged/undotree/autoload/undotree.vim	/^    let s:timeHour  = '1 h'$/;"	v
s:timeHour	plugged/undotree/autoload/undotree.vim	/^    let s:timeHour  = '1 hour ago'$/;"	v
s:timeHours	plugged/undotree/autoload/undotree.vim	/^    let s:timeHours = ' h'$/;"	v
s:timeHours	plugged/undotree/autoload/undotree.vim	/^    let s:timeHours = ' hours ago'$/;"	v
s:timeMinute	plugged/undotree/autoload/undotree.vim	/^    let s:timeMinute  = '1 m'$/;"	v
s:timeMinute	plugged/undotree/autoload/undotree.vim	/^    let s:timeMinute  = '1 minute ago'$/;"	v
s:timeMinutes	plugged/undotree/autoload/undotree.vim	/^    let s:timeMinutes = ' m'$/;"	v
s:timeMinutes	plugged/undotree/autoload/undotree.vim	/^    let s:timeMinutes = ' minutes ago'$/;"	v
s:timeOriginal	plugged/undotree/autoload/undotree.vim	/^    let s:timeOriginal = 'Orig'$/;"	v
s:timeOriginal	plugged/undotree/autoload/undotree.vim	/^    let s:timeOriginal = 'Original'$/;"	v
s:timeSecond	plugged/undotree/autoload/undotree.vim	/^    let s:timeSecond  = '1 s'$/;"	v
s:timeSecond	plugged/undotree/autoload/undotree.vim	/^    let s:timeSecond = '1 second ago'$/;"	v
s:timeSeconds	plugged/undotree/autoload/undotree.vim	/^    let s:timeSeconds = ' s'$/;"	v
s:timeSeconds	plugged/undotree/autoload/undotree.vim	/^    let s:timeSeconds = ' seconds ago'$/;"	v
s:timer_by_bufnr	plugged/neomake/autoload/neomake/configure.vim	/^let s:timer_by_bufnr = {}$/;"	v
s:timer_info	plugged/neomake/autoload/neomake/configure.vim	/^let s:timer_info = {}$/;"	v
s:tmpdir	plugged/neomake/autoload/neomake/makers/ft/java.vim	/^function! s:tmpdir() abort$/;"	f
s:tmuxline_snapshot_file	plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:tmuxline_snapshot_file = get(g:, 'airline#extensions#tmuxline#snapshot_file', '')$/;"	v
s:to_a	autoload/plug.vim	/^function! s:to_a(v)$/;"	f
s:to_mode	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:to_mode = ''$/;"	v
s:to_s	autoload/plug.vim	/^function! s:to_s(v)$/;"	f
s:toggle	plugged/neomake/plugin/neomake.vim	/^function! s:toggle(scope) abort$/;"	f
s:toggleFold	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:toggleFold(fileinfo) abort dict$/;"	f
s:toggleIgnoreFilter	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleIgnoreFilter()$/;"	f
s:toggleShowBookmarks	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowBookmarks()$/;"	f
s:toggleShowFiles	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFiles()$/;"	f
s:toggleShowHidden	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowHidden()$/;"	f
s:toggleZoom	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleZoom()$/;"	f
s:toggle_off	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_off()$/;"	f
s:toggle_on	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_on()$/;"	f
s:transform	plugged/vim-startify/autoload/startify.vim	/^function s:transform(absolute_path)$/;"	f
s:tree_up_dir_line	plugged/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:trigger_gitgutter	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:trigger_gitgutter()$/;"	f
s:triggers	autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	v
s:trim	autoload/plug.vim	/^function! s:trim(str)$/;"	f
s:trim	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:trim(str) abort$/;"	f
s:trim_end	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:trim_end(str) abort$/;"	f
s:trim_start	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:trim_start(str) abort$/;"	f
s:truncate	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
s:truncate	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
s:truncate_skipping	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
s:truncate_skipping	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
s:type_init_done	plugged/tagbar/autoload/tagbar.vim	/^let s:type_init_done    = 0$/;"	v
s:unc_path	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:unc_path(bufnr)$/;"	f
s:undo	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:undo(hunk_diff)$/;"	f
s:undotree	plugged/undotree/autoload/undotree.vim	/^let s:undotree = s:new(s:panel)$/;"	v
s:undotree.Action	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Action(action)$/;"	f
s:undotree.ActionClearHistory	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionClearHistory()$/;"	f
s:undotree.ActionClose	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionClose()$/;"	f
s:undotree.ActionDiffToggle	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionDiffToggle()$/;"	f
s:undotree.ActionEnter	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionEnter()$/;"	f
s:undotree.ActionFocusTarget	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionFocusTarget()$/;"	f
s:undotree.ActionGoNextSaved	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionGoNextSaved()$/;"	f
s:undotree.ActionGoNextState	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionGoNextState()$/;"	f
s:undotree.ActionGoPreviousSaved	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionGoPreviousSaved()$/;"	f
s:undotree.ActionGoPreviousState	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionGoPreviousState()$/;"	f
s:undotree.ActionHelp	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionHelp()$/;"	f
s:undotree.ActionInTarget	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionInTarget(cmd)$/;"	f
s:undotree.ActionRedo	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionRedo()$/;"	f
s:undotree.ActionTimestampToggle	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionTimestampToggle()$/;"	f
s:undotree.ActionUndo	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ActionUndo()$/;"	f
s:undotree.AppendHelp	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.AppendHelp()$/;"	f
s:undotree.BindAu	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.BindAu()$/;"	f
s:undotree.BindKey	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.BindKey()$/;"	f
s:undotree.ConvertInput	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.ConvertInput(updatetree)$/;"	f
s:undotree.Draw	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Draw()$/;"	f
s:undotree.GetStatusLine	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.GetStatusLine()$/;"	f
s:undotree.Index2Screen	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Index2Screen(index)$/;"	f
s:undotree.Init	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Init()$/;"	f
s:undotree.MarkSeqs	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.MarkSeqs()$/;"	f
s:undotree.Render	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Render()$/;"	f
s:undotree.Screen2Index	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Screen2Index(line)$/;"	f
s:undotree.SetTargetFocus	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.SetTargetFocus()$/;"	f
s:undotree.Show	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Show()$/;"	f
s:undotree.Toggle	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Toggle()$/;"	f
s:undotree.Update	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.Update()$/;"	f
s:undotree.UpdateDiff	plugged/undotree/autoload/undotree.vim	/^function! s:undotree.UpdateDiff()$/;"	f
s:undotree._parseNode	plugged/undotree/autoload/undotree.vim	/^function! s:undotree._parseNode(in,out)$/;"	f
s:undotreeAction	plugged/undotree/autoload/undotree.vim	/^function! s:undotreeAction(action)$/;"	f
s:unescape	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:unescape(str, chars) abort$/;"	f
s:unescape_pattern	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:unescape_pattern(str) abort$/;"	f
s:unicode	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:unicode = &encoding == 'utf-8' && get(g:, 'startify_fortune_use_unicode')$/;"	v
s:uniq	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
s:uniq	plugged/vim-gitgutter/autoload/gitgutter.vim	/^  function! s:uniq(list)$/;"	f
s:uniq_by	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
s:unix_redir	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unix_redir	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unload	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:unload() abort dict$/;"	f
s:unset	plugged/neomake/autoload/neomake/utils.vim	/^let s:unset = {}  " Sentinel.$/;"	v
s:unset_dict	plugged/neomake/autoload/neomake.vim	/^let s:unset_dict = {}$/;"	v
s:unset_list	plugged/neomake/autoload/neomake.vim	/^let s:unset_list = []$/;"	v
s:unshift	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
s:untracked_jobs	plugged/vim-airline/autoload/airline/async.vim	/^let s:untracked_jobs = {}$/;"	v
s:untracked_output	plugged/vim-airline/autoload/airline/async.vim	/^function! s:untracked_output(dict, buf)$/;"	f
s:upDirCurrentRootClosed	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
s:upDirCurrentRootOpen	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
s:update	autoload/plug.vim	/^function! s:update(force, names)$/;"	f
s:update_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_branch()$/;"	f
s:update_finish	autoload/plug.vim	/^function! s:update_finish()$/;"	f
s:update_git_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_git_branch()$/;"	f
s:update_hg_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_hg_branch()$/;"	f
s:update_impl	autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	f
s:update_in_progress	plugged/vim-gutentags/autoload/gutentags.vim	/^    let s:update_in_progress[module] = []$/;"	v
s:update_in_progress	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:update_in_progress = {}$/;"	v
s:update_oldfiles	plugged/vim-startify/plugin/startify.vim	/^function! s:update_oldfiles(file)$/;"	f
s:update_python	autoload/plug.vim	/^function! s:update_python()$/;"	f
s:update_queue	plugged/vim-gutentags/autoload/gutentags.vim	/^    let s:update_queue[module] = []$/;"	v
s:update_queue	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:update_queue = {}$/;"	v
s:update_ruby	autoload/plug.vim	/^function! s:update_ruby()$/;"	f
s:update_tabline	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:update_tabline()$/;"	f
s:update_tags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:update_tags(bufno, module, write_mode, queue_mode) abort$/;"	f
s:update_untracked	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_untracked()$/;"	f
s:update_vim	autoload/plug.vim	/^function! s:update_vim()$/;"	f
s:update_visual_markers	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:update_visual_markers(region)$/;"	f
s:upgrade	autoload/plug.vim	/^function! s:upgrade()$/;"	f
s:upgrade_specs	autoload/plug.vim	/^function! s:upgrade_specs()$/;"	f
s:upsert_new_gitgutter_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:upsert_new_gitgutter_signs(bufnr, modified_lines) abort$/;"	f
s:use_known_shell	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:use_known_shell() abort$/;"	f
s:use_word_boundary	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:use_word_boundary = 1$/;"	v
s:valid_dir	plugged/vim-airline/autoload/airline/async.vim	/^function! s:valid_dir(dir)$/;"	f
s:vcs_config	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:vcs_config = {$/;"	v
s:version	plugged/vim-devicons/plugin/webdevicons.vim	/^let s:version = '0.10.0'$/;"	v
s:version_requirement	autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	f
s:vim8	autoload/plug.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:vim_exit_handler	plugged/neomake/autoload/neomake.vim	/^function! s:vim_exit_handler(channel) abort$/;"	f
s:vim_msgs_marker	plugged/neomake/tests/include/init.vim	/^let s:vim_msgs_marker = '== neomake_tests_marker =='$/;"	v
s:vim_output_handler	plugged/neomake/autoload/neomake.vim	/^function! s:vim_output_handler(channel, output, event_type) abort$/;"	f
s:vim_output_handler_stderr	plugged/neomake/autoload/neomake.vim	/^function! s:vim_output_handler_stderr(channel, output) abort$/;"	f
s:vim_output_handler_stdout	plugged/neomake/autoload/neomake.vim	/^function! s:vim_output_handler_stdout(channel, output) abort$/;"	f
s:vim_quitting	plugged/tagbar/autoload/tagbar.vim	/^let s:vim_quitting = 0$/;"	v
s:vim_version	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:vim_version()$/;"	f
s:vimhelplint_exe	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^        let s:vimhelplint_exe = join([s:neomake_root, 'contrib', 'vimhelplint'], s:slash)$/;"	v
s:vimhelplint_exe	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^    let s:vimhelplint_exe = 'vimhelplint'$/;"	v
s:vimhelplint_exe	plugged/neomake/autoload/neomake/makers/ft/help.vim	/^let s:vimhelplint_exe = ''$/;"	v
s:vimoption2python	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! s:vimoption2python(option) abort$/;"	f
s:visibility_symbols	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^let s:visibility_symbols = {$/;"	v
s:vital_base_dir	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:vital_files	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! s:vital_files() abort$/;"	f
s:wait_for_finished_job	plugged/neomake/tests/include/init.vim	/^function! s:wait_for_finished_job()$/;"	f
s:wait_for_jobs	plugged/neomake/tests/include/init.vim	/^function! s:wait_for_jobs(filter)$/;"	f
s:wait_for_message	plugged/neomake/tests/include/init.vim	/^function! s:wait_for_message(...)$/;"	f
s:wait_for_next_message	plugged/neomake/tests/include/init.vim	/^function! s:wait_for_next_message()$/;"	f
s:wait_for_user_input	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:wait_for_user_input(mode)$/;"	f
s:warn	autoload/plug.vim	/^function! s:warn(cmd, msg)$/;"	f
s:warn	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:warn(message)$/;"	f
s:warn	plugged/vim-startify/autoload/startify.vim	/^function! s:warn(msg) abort$/;"	f
s:warning	plugged/tagbar/autoload/tagbar.vim	/^function! s:warning(msg) abort$/;"	f
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#ale#warning_symbol', 'W:')$/;"	v
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#neomake#warning_symbol', 'W:')$/;"	v
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#syntastic#warning_symbol', 'W:')$/;"	v
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#ycm#warning_symbol', 'W:')$/;"	v
s:warnings	plugged/tagbar/autoload/tagbar.vim	/^let s:warnings = {$/;"	v
s:wcswidth	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f
s:wcswidth	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^  let s:wcswidth = function('strwidth')$/;"	v
s:wcswidth	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
s:whitespace_chars	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let s:whitespace_chars='\\u0020\\u00a0\\u1680\\u180e\\u2000-\\u200b\\u202f\\u205f\\u3000\\ufeff'$/;"	v
s:wide	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:wide = 120$/;"	v
s:window_expanded	plugged/tagbar/autoload/tagbar.vim	/^let s:window_expanded   = 0$/;"	v
s:window_pos	plugged/tagbar/autoload/tagbar.vim	/^let s:window_pos = {$/;"	v
s:windows_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:windows_sink(line)$/;"	f
s:winnr_diff	plugged/GoldenView.Vim/autoload/GoldenView.vim	/^function! s:winnr_diff()$/;"	f
s:winrestcmd	plugged/tagbar/autoload/tagbar.vim	/^let s:winrestcmd      = ''$/;"	v
s:winshell	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:winshell()$/;"	f
s:wipe_highlights	plugged/neomake/autoload/neomake/highlights.vim	/^function! s:wipe_highlights(bufnr) abort$/;"	f
s:wipe_signs	plugged/neomake/autoload/neomake/signs.vim	/^function! s:wipe_signs(bufnr) abort$/;"	f
s:with_cd	autoload/plug.vim	/^function! s:with_cd(cmd, dir)$/;"	f
s:with_index	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
s:wordcount	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! s:wordcount()$/;"	f
s:wordcount_update	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! s:wordcount_update()$/;"	f
s:wrap	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:wrap(name, opts, bang)$/;"	f
s:wrap	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
s:wrap_accent	plugged/vim-airline/autoload/airline/section.vim	/^function! s:wrap_accent(part, value)$/;"	f
s:write_buffer	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:write_buffer(bufnr, file)$/;"	f
s:write_triggered_update_tags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:write_triggered_update_tags(bufno) abort$/;"	f
s:writefile	plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^function! s:writefile(cache_dir, filename, list) abort$/;"	f
s:ws_refresh	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:ws_refresh()$/;"	f
s:xterm_escape_template	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:xterm_escape_template = '\\033]12;%s\\007'$/;"	v
s:yank_to_register	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:yank_to_register(data)$/;"	f
s:zip	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:zip(...) abort$/;"	f
s:zip_fill	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
safe-buffer	plugged/nova-vim/package-lock.json	/^        "safe-buffer": "5.0.1"$/;"	s	object:dependencies.string_decoder.requires
safe-buffer	plugged/nova-vim/package-lock.json	/^        "safe-buffer": "5.0.1",$/;"	s	object:dependencies.readable-stream.requires
safe-buffer	plugged/nova-vim/package-lock.json	/^    "safe-buffer": {$/;"	o	object:dependencies
save	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def save(self, filename):$/;"	m	class:TranslationUnit
save	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def save(self, filename):$/;"	m	class:TranslationUnit
save_tu	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_translation_unit.py	/^def save_tu(tu):$/;"	f
save_tu	plugged/deoplete-clang/tests/clang/tests/cindex/test_translation_unit.py	/^def save_tu(tu):$/;"	f
say	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    def say(self, string):$/;"	m	class:Ui
say	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def say(self, string):$/;"	m	class:Ui
scripts	plugged/nova-vim/package.json	/^  "scripts": {$/;"	o
self.compilation_database	plugged/deoplete-clang/mk/debug_code.mk	/^LOGGER_GET_COMPILATION_DATABASE_BEFORE_SUFFIX := if self.compilation_database:$/;"	t
semantic_parent	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def semantic_parent(self):$/;"	m	class:Cursor
semantic_parent	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def semantic_parent(self):$/;"	m	class:Cursor
send	plugged/vdebug/tests/test_connection.py	/^    def send(self,msg):$/;"	m	class:SocketMock
send_cmd	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def send_cmd(self, cmd, args='', res_cls=Response):$/;"	m	class:Api
send_msg	plugged/vdebug/pythonx/vdebug/connection.py	/^    def send_msg(self, cmd):$/;"	m	class:ConnectionHandler
session	plugged/vdebug/pythonx/vdebug/session.py	/^    def session(self):$/;"	m	class:SessionHandler
set	plugged/vdebug/pythonx/vdebug/opts.py	/^    def set(cls, options):$/;"	m	class:Options
setUp	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^    def setUp(self):$/;"	m	class:ConditionalBreakpointTest
setUp	plugged/vdebug/tests/test_connection.py	/^    def setUp(self):$/;"	m	class:ConnectionTest
setUp	plugged/vdebug/tests/test_dbgp_api.py	/^    def setUp(self):$/;"	m	class:ApiTest
setUp	plugged/vdebug/tests/test_log.py	/^    def setUp(self):$/;"	m	class:FileLoggerTest
setUp	plugged/vdebug/tests/test_log.py	/^    def setUp(self):$/;"	m	class:LoggerTest
setUp	plugged/vdebug/tests/test_log.py	/^    def setUp(self):$/;"	m	class:WindowLoggerTest
setUp	plugged/vdebug/tests/test_util_filepath.py	/^    def setUp(self):$/;"	m	class:LocalFilePathTest
setUp	plugged/vdebug/tests/test_util_filepath.py	/^    def setUp(self):$/;"	m	class:MismatchingSeparatorsTest
setUp	plugged/vdebug/tests/test_util_filepath.py	/^    def setUp(self):$/;"	m	class:RemotePathTest
setUp	plugged/vdebug/tests/test_util_filepath.py	/^    def setUp(self):$/;"	m	class:RemoteUnixLocalWinPathTest
setUp	plugged/vdebug/tests/test_util_filepath.py	/^    def setUp(self):$/;"	m	class:RemoteWinLocalUnixPathTest
set_api	plugged/vdebug/pythonx/vdebug/session.py	/^    def set_api(self, api):$/;"	m	class:Session
set_breakpoint	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def set_breakpoint(self, args=None):$/;"	m	class:DebuggerInterface
set_compatibility_check	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def set_compatibility_check(check_status):$/;"	m	class:Config
set_compatibility_check	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def set_compatibility_check(check_status):$/;"	m	class:Config
set_conn_details	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def set_conn_details(self, addr, port):$/;"	m	class:StatusWindow
set_conn_details	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def set_conn_details(self, addr, port):$/;"	m	class:Ui
set_custom	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def set_custom(self, context):$/;"	m	class:Deoplete
set_custom	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def set_custom(self, custom):$/;"	m	class:Parent
set_debug	plugged/deoplete-clang/Makefile	/^set_debug:$/;"	t
set_debug	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang/helper.py	/^def set_debug(logger, path):$/;"	f
set_debugger_id	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def set_debugger_id(self, dbg_id):$/;"	m	class:Breakpoint
set_default	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def set_default(vim, var, val):$/;"	f
set_eval_expression	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def set_eval_expression(self, eval_expression):$/;"	m	class:WatchWindow
set_file	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def set_file(self, file):$/;"	m	class:SourceWindow
set_file_content	plugged/vim-multiple-cursors/spec/benchmark_spec.rb	/^def set_file_content(string)$/;"	f
set_file_content	plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def set_file_content(string)$/;"	f
set_height	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def set_height(self, height):$/;"	m	class:Window
set_library_file	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def set_library_file(filename):$/;"	m	class:Config
set_library_file	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def set_library_file(filename):$/;"	m	class:Config
set_library_path	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def set_library_path(path):$/;"	m	class:Config
set_library_path	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def set_library_path(path):$/;"	m	class:Config
set_line	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def set_line(self, line):$/;"	m	class:LineBreakpoint
set_line	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def set_line(self, lineno):$/;"	m	class:SourceWindow
set_list	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def set_list(vim, variable, keys, list):$/;"	f
set_listener_details	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def set_listener_details(self, addr, port, idekey):$/;"	m	class:StatusWindow
set_listener_details	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def set_listener_details(self, addr, port, idekey):$/;"	m	class:Ui
set_logger	plugged/vdebug/pythonx/vdebug/log.py	/^    def set_logger(cls, logger):$/;"	m	class:Log
set_opt	plugged/vdebug/rubylib/vdebug.rb	/^  def set_opt(name, value)$/;"	f	class:Vdebug
set_pattern	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def set_pattern(variable, keys, pattern):$/;"	f
set_source_attributes	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def set_source_attributes(self, context):$/;"	m	class:Deoplete
set_source_attributes	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def set_source_attributes(self, context):$/;"	m	class:Parent
set_source_position	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def set_source_position(self, file, lineno):$/;"	m	class:Ui
set_status	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def set_status(self, status):$/;"	m	class:StatusWindow
set_status	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def set_status(self, status):$/;"	m	class:Ui
set_trace_expression	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def set_trace_expression(self, trace_expression):$/;"	m	class:TraceWindow
setdefault	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def setdefault(self, key, defval=None):$/;"	m	class:OrderedDict
setitems	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def setitems(self, items):$/;"	m	class:OrderedDict
setkeys	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def setkeys(self, keys):$/;"	m	class:OrderedDict
setting break_on_open	plugged/vdebug/spec/options_command_spec.rb	/^  context "setting break_on_open" do$/;"	c
setting continuous_mode	plugged/vdebug/spec/options_command_spec.rb	/^  context "setting continuous_mode" do$/;"	c
setting debug_file	plugged/vdebug/spec/options_command_spec.rb	/^  context "setting debug_file" do$/;"	c
setting debug_file_level	plugged/vdebug/spec/options_command_spec.rb	/^  context "setting debug_file_level" do$/;"	c
setting debug_window_level	plugged/vdebug/spec/options_command_spec.rb	/^  context "setting debug_window_level" do$/;"	c
setting ide_key	plugged/vdebug/spec/options_command_spec.rb	/^  context "setting ide_key" do$/;"	c
setting marker_closed_tree	plugged/vdebug/spec/options_command_spec.rb	/^  context "setting marker_closed_tree" do$/;"	c
setting marker_default	plugged/vdebug/spec/options_command_spec.rb	/^  context "setting marker_default" do$/;"	c
setting marker_open_tree	plugged/vdebug/spec/options_command_spec.rb	/^  context "setting marker_open_tree" do$/;"	c
setting on_close	plugged/vdebug/spec/options_command_spec.rb	/^  context "setting on_close" do$/;"	c
setting port	plugged/vdebug/spec/options_command_spec.rb	/^  context "setting port" do$/;"	c
setting server	plugged/vdebug/spec/options_command_spec.rb	/^  context "setting server" do$/;"	c
setting timeout	plugged/vdebug/spec/options_command_spec.rb	/^  context "setting timeout" do$/;"	c
setting watch_window_style	plugged/vdebug/spec/options_command_spec.rb	/^  context "setting watch_window_style" do$/;"	c
setup	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^def setup(vim, level, output_file=None):$/;"	f
setup_ruby	plugged/GoldenView.Vim/autoload/GoldenView/zl/log.vim	/^function! <SID>setup_ruby()$/;"	f
setvalues	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def setvalues(self, values):$/;"	m	class:OrderedDict
severity	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def severity(self):$/;"	m	class:Diagnostic
severity	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def severity(self):$/;"	m	class:Diagnostic
shelljs	plugged/nova-vim/package-lock.json	/^        "shelljs": "0.6.1",$/;"	s	object:dependencies.eslint.requires
shelljs	plugged/nova-vim/package-lock.json	/^    "shelljs": {$/;"	o	object:dependencies
shutdown	plugged/vdebug/pythonx/vdebug/log.py	/^    def shutdown(cls):$/;"	m	class:Log
shutdown	plugged/vdebug/pythonx/vdebug/log.py	/^    def shutdown(self):$/;"	m	class:FileLogger
shutdown	plugged/vdebug/pythonx/vdebug/log.py	/^    def shutdown(self):$/;"	m	class:Logger
shutdown	plugged/vdebug/pythonx/vdebug/log.py	/^    def shutdown(self):$/;"	m	class:WindowLogger
singlehtml	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^singlehtml:$/;"	t
slice-ansi	plugged/nova-vim/package-lock.json	/^        "slice-ansi": "0.0.4",$/;"	s	object:dependencies.table.requires
slice-ansi	plugged/nova-vim/package-lock.json	/^    "slice-ansi": {$/;"	o	object:dependencies
socket	plugged/vdebug/pythonx/vdebug/connection.py	/^    def socket(self):$/;"	m	class:SocketCreator
socket	plugged/vdebug/pythonx/vdebug/connection.py	/^    def socket(self):$/;"	m	class:SocketServer
sort	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def sort(self, *args, **kwargs):$/;"	m	class:OrderedDict
sourceString	plugged/nova-vim/src/airline.js	/^const sourceString =`$/;"	C
sourceString	plugged/nova-vim/src/index.js	/^const sourceString = `$/;"	C
sourceType	plugged/nova-vim/package.json	/^      "sourceType": "module"$/;"	s	object:eslintConfig.parserOptions
source_suffix	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^source_suffix = '.rst'$/;"	v
sourcewin	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    sourcewin = None$/;"	v	class:Ui
span	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	o	object:message.spans.0.expansion
span	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	o	object:message.spans.0.expansion
spans	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	a	object:message
spans	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	a	object:message.children.0
spans	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	a	object:message.children.1
spans	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	a	object:message
spans	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	a	object:message.children.0
spans	plugged/neomake/tests/fixtures/rust/cargo_error_without_span.json	/^ {"message":{"children":[],"code":null,"level":"error","message":"aborting due to 18 previous er/;"	a	object:message
spans	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	a	object:message
spelling	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def spelling(self):$/;"	m	class:CompletionChunk
spelling	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def spelling(self):$/;"	m	class:Cursor
spelling	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def spelling(self):$/;"	m	class:Diagnostic
spelling	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def spelling(self):$/;"	m	class:Token
spelling	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def spelling(self):$/;"	m	class:TranslationUnit
spelling	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def spelling(self):$/;"	m	class:Type
spelling	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def spelling(self):$/;"	m	class:TypeKind
spelling	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def spelling(self):$/;"	m	class:_CXString
spelling	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def spelling(self):$/;"	m	class:CompletionChunk
spelling	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def spelling(self):$/;"	m	class:Cursor
spelling	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def spelling(self):$/;"	m	class:Diagnostic
spelling	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def spelling(self):$/;"	m	class:Token
spelling	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def spelling(self):$/;"	m	class:TranslationUnit
spelling	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def spelling(self):$/;"	m	class:Type
spelling	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def spelling(self):$/;"	m	class:TypeKind
spelling	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def spelling(self):$/;"	m	class:_CXString
split_version	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/versiontools.py	/^def split_version(version):$/;"	f
sprintf-js	plugged/nova-vim/package-lock.json	/^        "sprintf-js": "1.0.3"$/;"	s	object:dependencies.argparse.requires
sprintf-js	plugged/nova-vim/package-lock.json	/^    "sprintf-js": {$/;"	o	object:dependencies
src_path	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:target
src_path	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	s	object:target
src_path	plugged/neomake/tests/fixtures/rust/cargo_error_without_span.json	/^ {"message":{"children":[],"code":null,"level":"error","message":"aborting due to 18 previous er/;"	s	object:target
src_path	plugged/neomake/tests/fixtures/rust/cargo_info.json	/^{"features":["default"],"filenames":["\/home\/jelte\/fun\/derive_more\/target\/debug\/deps\/libu/;"	s	object:target
src_path	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	s	object:target
ssshhhhhh	plugged/neomake/tests/vim/vimrc	/^augroup ssshhhhhh$/;"	a
stack	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def stack(self):$/;"	m	class:WindowManager
stack	plugged/vdebug/rubylib/vdebug.rb	/^  def stack$/;"	f	class:Vdebug
stack_get	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def stack_get(self):$/;"	m	class:Api
stack_window_content	plugged/vdebug/rubylib/vdebug.rb	/^  def stack_window_content$/;"	f	class:Vdebug
stackwin	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    stackwin = None$/;"	v	class:Ui
start	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def start(self):$/;"	m	class:SourceRange
start	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def start(self):$/;"	m	class:SourceRange
start	plugged/vdebug/pythonx/vdebug/connection.py	/^    def start(self, host, port):$/;"	m	class:SocketServer
start	plugged/vdebug/pythonx/vdebug/connection.py	/^    def start(self, host='', port=9000, timeout=30):$/;"	m	class:SocketCreator
start	plugged/vdebug/pythonx/vdebug/listener.py	/^    def start(self):$/;"	m	class:BackgroundListener
start	plugged/vdebug/pythonx/vdebug/listener.py	/^    def start(self):$/;"	m	class:ForegroundListener
start	plugged/vdebug/pythonx/vdebug/session.py	/^    def start(self, connection):$/;"	m	class:Session
start	plugged/vim-gitgutter/unplace.vim	/^let start = reltime()$/;"	v
start_if_ready	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def start_if_ready(self):$/;"	m	class:DebuggerInterface
start_if_ready	plugged/vdebug/pythonx/vdebug/session.py	/^    def start_if_ready(self):$/;"	m	class:SessionHandler
start_listener	plugged/vdebug/pythonx/vdebug/session.py	/^    def start_listener(self):$/;"	m	class:SessionHandler
start_listening	plugged/vdebug/rubylib/vdebug.rb	/^  def start_listening$/;"	f	class:Vdebug
startify	plugged/vim-startify/plugin/startify.vim	/^augroup startify$/;"	a
startify#debug	plugged/vim-startify/autoload/startify.vim	/^function! startify#debug()$/;"	f
startify#fortune#boxed	plugged/vim-startify/autoload/startify/fortune.vim	/^function! startify#fortune#boxed(...) abort$/;"	f
startify#fortune#cowsay	plugged/vim-startify/autoload/startify/fortune.vim	/^function! startify#fortune#cowsay(...) abort$/;"	f
startify#fortune#predefined_quotes	plugged/vim-startify/autoload/startify/fortune.vim	/^function! startify#fortune#predefined_quotes() abort$/;"	f
startify#fortune#quote	plugged/vim-startify/autoload/startify/fortune.vim	/^function! startify#fortune#quote() abort$/;"	f
startify#get_lastline	plugged/vim-startify/autoload/startify.vim	/^function! startify#get_lastline() abort$/;"	f
startify#get_separator	plugged/vim-startify/autoload/startify.vim	/^function! startify#get_separator() abort$/;"	f
startify#insane_in_the_membrane	plugged/vim-startify/autoload/startify.vim	/^function! startify#insane_in_the_membrane() abort$/;"	f
startify#open_buffers	plugged/vim-startify/autoload/startify.vim	/^function! startify#open_buffers(...) abort$/;"	f
startify#session_close	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_close() abort$/;"	f
startify#session_delete	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_delete(bang, ...) abort$/;"	f
startify#session_delete_buffers	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_delete_buffers()$/;"	f
startify#session_list	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_list(lead, ...) abort$/;"	f
startify#session_list_as_string	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_list_as_string(lead, ...) abort$/;"	f
startify#session_load	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_load(...) abort$/;"	f
startify#session_save	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_save(bang, ...) abort$/;"	f
startify#session_write	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_write(spath)$/;"	f
starting the debugger	plugged/vdebug/spec/startup_spec.rb	/^  context "starting the debugger" do$/;"	c
startup	plugged/vdebug/spec/startup_spec.rb	/^describe "startup" do$/;"	d
status	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def status(self):$/;"	m	class:Api
status	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def status(self):$/;"	m	class:DebuggerInterface
status	plugged/vdebug/pythonx/vdebug/listener.py	/^    def status(self):$/;"	m	class:BackgroundListener
status	plugged/vdebug/pythonx/vdebug/listener.py	/^    def status(self):$/;"	m	class:ForegroundListener
status	plugged/vdebug/pythonx/vdebug/session.py	/^    def status(self):$/;"	m	class:SessionHandler
status	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def status(self):$/;"	m	class:WindowManager
status	plugged/vdebug/rubylib/vdebug.rb	/^  def status$/;"	f	class:Vdebug
status_for_statusline	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def status_for_statusline(self):$/;"	m	class:DebuggerInterface
status_for_statusline	plugged/vdebug/pythonx/vdebug/session.py	/^    def status_for_statusline(self):$/;"	m	class:SessionHandler
status_window_content	plugged/vdebug/rubylib/vdebug.rb	/^  def status_window_content$/;"	f	class:Vdebug
statuswin	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    statuswin = None$/;"	v	class:Ui
stderr_contents	plugged/vdebug/features/support/helpers.rb	/^  def stderr_contents$/;"	f	module:ScriptRunner
step over	plugged/vdebug/spec/vdebug_spec.rb	/^    context "step over" do$/;"	c
step_in	plugged/vdebug/rubylib/vdebug.rb	/^  def step_in$/;"	f	class:Vdebug
step_into	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def step_into(self):$/;"	m	class:Api
step_into	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def step_into(self):$/;"	m	class:DebuggerInterface
step_out	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def step_out(self):$/;"	m	class:Api
step_out	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def step_out(self):$/;"	m	class:DebuggerInterface
step_over	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def step_over(self):$/;"	m	class:Api
step_over	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def step_over(self):$/;"	m	class:DebuggerInterface
step_over	plugged/vdebug/rubylib/vdebug.rb	/^  def step_over$/;"	f	class:Vdebug
step_to_line	plugged/vdebug/rubylib/vdebug.rb	/^  def step_to_line(number)$/;"	f	class:Vdebug
stl	plugged/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	plugged/vim-airline/t/extensions_default.vim	/^    let stl = s:builder.build()$/;"	v
stop	plugged/vdebug/pythonx/vdebug/connection.py	/^    def stop(self):$/;"	m	class:SocketServer
stop	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def stop(self):$/;"	m	class:Api
stop	plugged/vdebug/pythonx/vdebug/listener.py	/^    def stop(self):$/;"	m	class:BackgroundListener
stop	plugged/vdebug/pythonx/vdebug/listener.py	/^    def stop(self):$/;"	m	class:ForegroundListener
stop	plugged/vdebug/pythonx/vdebug/session.py	/^    def stop(self):$/;"	m	class:SessionHandler
stop_listening	plugged/vdebug/pythonx/vdebug/session.py	/^    def stop_listening(self):$/;"	m	class:SessionHandler
storage_class	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def storage_class(self):$/;"	m	class:Cursor
storage_class	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def storage_class(self):$/;"	m	class:Cursor
string	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def string(self):$/;"	m	class:CodeCompletionResult
string	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def string(self):$/;"	m	class:CompletionChunk
string	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def string(self):$/;"	m	class:CodeCompletionResult
string	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def string(self):$/;"	m	class:CompletionChunk
string-width	plugged/nova-vim/package-lock.json	/^        "string-width": "1.0.2",$/;"	s	object:dependencies.inquirer.requires
string-width	plugged/nova-vim/package-lock.json	/^        "string-width": "2.0.0"$/;"	s	object:dependencies.table.requires
string-width	plugged/nova-vim/package-lock.json	/^        "string-width": {$/;"	o	object:dependencies.table.dependencies
string-width	plugged/nova-vim/package-lock.json	/^    "string-width": {$/;"	o	object:dependencies
string_decoder	plugged/nova-vim/package-lock.json	/^        "string_decoder": "1.0.2",$/;"	s	object:dependencies.readable-stream.requires
string_decoder	plugged/nova-vim/package-lock.json	/^    "string_decoder": {$/;"	o	object:dependencies
strip-ansi	plugged/nova-vim/package-lock.json	/^            "strip-ansi": "3.0.1"$/;"	s	object:dependencies.table.dependencies.string-width.requires
strip-ansi	plugged/nova-vim/package-lock.json	/^        "strip-ansi": "3.0.1"$/;"	s	object:dependencies.string-width.requires
strip-ansi	plugged/nova-vim/package-lock.json	/^        "strip-ansi": "3.0.1",$/;"	s	object:dependencies.chalk.requires
strip-ansi	plugged/nova-vim/package-lock.json	/^        "strip-ansi": "3.0.1",$/;"	s	object:dependencies.inquirer.requires
strip-ansi	plugged/nova-vim/package-lock.json	/^    "strip-ansi": {$/;"	o	object:dependencies
strip-bom	plugged/nova-vim/package-lock.json	/^        "strip-bom": "3.0.0",$/;"	s	object:dependencies.eslint.requires
strip-bom	plugged/nova-vim/package-lock.json	/^    "strip-bom": {$/;"	o	object:dependencies
strip-json-comments	plugged/nova-vim/package-lock.json	/^        "strip-json-comments": "1.0.4",$/;"	s	object:dependencies.eslint.requires
strip-json-comments	plugged/nova-vim/package-lock.json	/^    "strip-json-comments": {$/;"	o	object:dependencies
strwidth	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def strwidth(string):$/;"	f
suggested_replacement	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	z	object:message.spans.0
suggested_replacement	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	z	object:message.spans.0.expansion.def_site_span
suggested_replacement	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	z	object:message.spans.0.expansion.span
suggested_replacement	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	z	object:message.spans.0
suggested_replacement	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	z	object:message.spans.0.expansion.span
suggested_replacement	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	z	object:message.spans.0
summary	plugged/vim-gitgutter/test/runner.vim	/^let summary = [$/;"	v
supports-color	plugged/nova-vim/package-lock.json	/^        "supports-color": "2.0.0"$/;"	s	object:dependencies.chalk.requires
supports-color	plugged/nova-vim/package-lock.json	/^    "supports-color": {$/;"	o	object:dependencies
sxq_save	plugged/vim-php-cs-fixer/autoload/php_cs_fixer.vim	/^    let sxq_save = &shellxquote$/;"	v
syntaxGroups	plugged/nova-vim/src/index.js	/^const syntaxGroups = require('nova-colors').syntaxGroups$/;"	C
table	plugged/nova-vim/package-lock.json	/^        "table": "3.8.3",$/;"	s	object:dependencies.eslint.requires
table	plugged/nova-vim/package-lock.json	/^    "table": {$/;"	o	object:dependencies
tagbar#CloseWindow	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#CloseWindow() abort$/;"	f
tagbar#OpenWindow	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#OpenWindow(...) abort$/;"	f
tagbar#RestoreSession	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#RestoreSession() abort$/;"	f
tagbar#SetFoldLevel	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#SetFoldLevel(level, force) abort$/;"	f
tagbar#ToggleWindow	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#ToggleWindow(...) abort$/;"	f
tagbar#autoopen	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#autoopen(...) abort$/;"	f
tagbar#currentfile	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#currentfile() abort$/;"	f
tagbar#currenttag	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#currenttag(fmt, default, ...) abort$/;"	f
tagbar#debug#enabled	plugged/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#enabled() abort$/;"	f
tagbar#debug#log	plugged/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#log(msg) abort$/;"	f
tagbar#debug#log_ctags_output	plugged/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#log_ctags_output(output) abort$/;"	f
tagbar#debug#start_debug	plugged/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#start_debug(...) abort$/;"	f
tagbar#debug#stop_debug	plugged/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#stop_debug() abort$/;"	f
tagbar#gettypeconfig	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#gettypeconfig(type) abort$/;"	f
tagbar#getusertypes	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#getusertypes() abort$/;"	f
tagbar#highlighttag	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#highlighttag(openfolds, force) abort$/;"	f
tagbar#inspect	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#inspect(var) abort$/;"	f
tagbar#is_paused	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#is_paused() abort$/;"	f
tagbar#prototypes#basetag#new	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! tagbar#prototypes#basetag#new(name) abort$/;"	f
tagbar#prototypes#fileinfo#new	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! tagbar#prototypes#fileinfo#new(fname, ftype, typeinfo) abort$/;"	f
tagbar#prototypes#kindheadertag#new	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! tagbar#prototypes#kindheadertag#new(name) abort$/;"	f
tagbar#prototypes#normaltag#new	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! tagbar#prototypes#normaltag#new(name) abort$/;"	f
tagbar#prototypes#pseudotag#new	plugged/tagbar/autoload/tagbar/prototypes/pseudotag.vim	/^function! tagbar#prototypes#pseudotag#new(name) abort$/;"	f
tagbar#prototypes#splittag#new	plugged/tagbar/autoload/tagbar/prototypes/splittag.vim	/^function! tagbar#prototypes#splittag#new(name) abort$/;"	f
tagbar#prototypes#typeinfo#new	plugged/tagbar/autoload/tagbar/prototypes/typeinfo.vim	/^function! tagbar#prototypes#typeinfo#new(...) abort$/;"	f
tagbar#sorting#sort	plugged/tagbar/autoload/tagbar/sorting.vim	/^function! tagbar#sorting#sort(tags, compareby, compare_typeinfo) abort$/;"	f
tagbar#state#get_current_file	plugged/tagbar/autoload/tagbar/state.vim	/^function! tagbar#state#get_current_file(force_current) abort$/;"	f
tagbar#state#set_current_file	plugged/tagbar/autoload/tagbar/state.vim	/^function! tagbar#state#set_current_file(fileinfo) abort$/;"	f
tagbar#state#set_paused	plugged/tagbar/autoload/tagbar/state.vim	/^function! tagbar#state#set_paused() abort$/;"	f
tagbar#toggle_pause	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#toggle_pause() abort$/;"	f
tagbar#types#ctags#init	plugged/tagbar/autoload/tagbar/types/ctags.vim	/^function! tagbar#types#ctags#init(supported_types) abort$/;"	f
tagbar#types#uctags#init	plugged/tagbar/autoload/tagbar/types/uctags.vim	/^function! tagbar#types#uctags#init(supported_types) abort$/;"	f
tags	plugged/neomake/Makefile	/^tags:$/;"	t
tail_log	plugged/neomake/Makefile	/^tail_log:$/;"	t
target	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	o
target	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	o
target	plugged/neomake/tests/fixtures/rust/cargo_error_without_span.json	/^ {"message":{"children":[],"code":null,"level":"error","message":"aborting due to 18 previous er/;"	o
target	plugged/neomake/tests/fixtures/rust/cargo_info.json	/^{"features":["default"],"filenames":["\/home\/jelte\/fun\/derive_more\/target\/debug\/deps\/libu/;"	o
target	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	o
tearDown	plugged/vdebug/tests/test_opts_options.py	/^    def tearDown(self):$/;"	m	class:OptionsTest
templates_path	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^templates_path = ['_templates']$/;"	v
test	plugged/deoplete-clang/Makefile	/^test: flake8$/;"	t
test	plugged/deoplete.nvim/Makefile	/^test:$/;"	t
test	plugged/neomake/Makefile	/^test: $(if $(TEST_VIM),$(if $(IS_NEOVIM),testnvim,testvim),testnvim testvim)$/;"	t
test	plugged/neomake/tests/fixtures/rust/cargo_info.json	/^{"features":["default"],"filenames":["\/home\/jelte\/fun\/derive_more\/target\/debug\/deps\/libu/;"	b	object:profile
testConstantArray	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^def testConstantArray():$/;"	f
testConstantArray	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^def testConstantArray():$/;"	f
test_1_compilecommand	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cdb.py	/^def test_1_compilecommand():$/;"	f
test_1_compilecommand	plugged/deoplete-clang/tests/clang/tests/cindex/test_cdb.py	/^def test_1_compilecommand():$/;"	f
test_2_compilecommand	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cdb.py	/^def test_2_compilecommand():$/;"	f
test_2_compilecommand	plugged/deoplete-clang/tests/clang/tests/cindex/test_cdb.py	/^def test_2_compilecommand():$/;"	f
test_a_struct	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^def test_a_struct():$/;"	f
test_a_struct	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^def test_a_struct():$/;"	f
test_access_specifiers	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_access_specifiers.py	/^def test_access_specifiers():$/;"	f
test_access_specifiers	plugged/deoplete-clang/tests/clang/tests/cindex/test_access_specifiers.py	/^def test_access_specifiers():$/;"	f
test_add	plugged/vdebug/tests/test_util_filepath.py	/^    def test_add(self):$/;"	m	class:LocalFilePathTest
test_add_reverse	plugged/vdebug/tests/test_util_filepath.py	/^    def test_add_reverse(self):$/;"	m	class:LocalFilePathTest
test_all_compilecommand	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cdb.py	/^def test_all_compilecommand():$/;"	f
test_all_compilecommand	plugged/deoplete-clang/tests/clang/tests/cindex/test_cdb.py	/^def test_all_compilecommand():$/;"	f
test_annotation_attribute	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_annotation_attribute():$/;"	f
test_annotation_attribute	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_annotation_attribute():$/;"	f
test_argument_types_invalid_type	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^def test_argument_types_invalid_type():$/;"	f
test_argument_types_invalid_type	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^def test_argument_types_invalid_type():$/;"	f
test_argument_types_negative_index	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^def test_argument_types_negative_index():$/;"	f
test_argument_types_negative_index	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^def test_argument_types_negative_index():$/;"	f
test_argument_types_overflow_index	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^def test_argument_types_overflow_index():$/;"	f
test_argument_types_overflow_index	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^def test_argument_types_overflow_index():$/;"	f
test_argument_types_string_key	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^def test_argument_types_string_key():$/;"	f
test_argument_types_string_key	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^def test_argument_types_string_key():$/;"	f
test_array_property_attributes	plugged/vdebug/tests/test_dbgp_response.py	/^    def test_array_property_attributes(self):$/;"	m	class:ContextGetTest
test_as_local	plugged/vdebug/tests/test_util_filepath.py	/^    def test_as_local(self):$/;"	m	class:LocalFilePathTest
test_as_local	plugged/vdebug/tests/test_util_filepath.py	/^    def test_as_local(self):$/;"	m	class:MismatchingSeparatorsTest
test_as_local	plugged/vdebug/tests/test_util_filepath.py	/^    def test_as_local(self):$/;"	m	class:RemotePathTest
test_as_local	plugged/vdebug/tests/test_util_filepath.py	/^    def test_as_local(self):$/;"	m	class:RemoteUnixLocalWinPathTest
test_as_local	plugged/vdebug/tests/test_util_filepath.py	/^    def test_as_local(self):$/;"	m	class:RemoteWinLocalUnixPathTest
test_as_local_does_nothing	plugged/vdebug/tests/test_util_filepath.py	/^    def test_as_local_does_nothing(self):$/;"	m	class:RemotePathTest
test_as_local_does_nothing	plugged/vdebug/tests/test_util_filepath.py	/^    def test_as_local_does_nothing(self):$/;"	m	class:RemoteUnixLocalWinPathTest
test_as_local_does_nothing	plugged/vdebug/tests/test_util_filepath.py	/^    def test_as_local_does_nothing(self):$/;"	m	class:RemoteWinLocalUnixPathTest
test_as_local_with_uri	plugged/vdebug/tests/test_util_filepath.py	/^    def test_as_local_with_uri(self):$/;"	m	class:RemotePathTest
test_as_remote	plugged/vdebug/tests/test_util_filepath.py	/^    def test_as_remote(self):$/;"	m	class:LocalFilePathTest
test_as_remote	plugged/vdebug/tests/test_util_filepath.py	/^    def test_as_remote(self):$/;"	m	class:MismatchingSeparatorsTest
test_as_remote	plugged/vdebug/tests/test_util_filepath.py	/^    def test_as_remote(self):$/;"	m	class:RemoteUnixLocalWinPathTest
test_as_remote	plugged/vdebug/tests/test_util_filepath.py	/^    def test_as_remote(self):$/;"	m	class:RemoteWinLocalUnixPathTest
test_as_remote_with_backslashed_win_paths	plugged/vdebug/tests/test_util_filepath.py	/^    def test_as_remote_with_backslashed_win_paths(self):$/;"	m	class:RemotePathTest
test_as_remote_with_unix_paths	plugged/vdebug/tests/test_util_filepath.py	/^    def test_as_remote_with_unix_paths(self):$/;"	m	class:RemotePathTest
test_as_remote_with_win_paths	plugged/vdebug/tests/test_util_filepath.py	/^    def test_as_remote_with_win_paths(self):$/;"	m	class:RemotePathTest
test_as_string	plugged/vdebug/tests/test_dbgp_response.py	/^    def test_as_string(self):$/;"	m	class:ResponseTest
test_as_xml_is_element	plugged/vdebug/tests/test_dbgp_response.py	/^    def test_as_xml_is_element(self):$/;"	m	class:ResponseTest
test_bad_register	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_token_kind.py	/^def test_bad_register():$/;"	f
test_bad_register	plugged/deoplete-clang/tests/clang/tests/cindex/test_token_kind.py	/^def test_bad_register():$/;"	f
test_binary_search	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_binary_search():$/;"	f
test_canonical	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_canonical():$/;"	f
test_canonical	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_canonical():$/;"	f
test_charwidth	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_charwidth():$/;"	f
test_child_properties	plugged/vdebug/tests/test_dbgp_context_property.py	/^    def test_child_properties(self):$/;"	m	class:ContextPropertyAltTest
test_child_properties	plugged/vdebug/tests/test_dbgp_context_property.py	/^    def test_child_properties(self):$/;"	m	class:ContextPropertyDefaultTest
test_code_complete	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_code_completion.py	/^def test_code_complete():$/;"	f
test_code_complete	plugged/deoplete-clang/tests/clang/tests/cindex/test_code_completion.py	/^def test_code_complete():$/;"	f
test_code_complete_availability	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_code_completion.py	/^def test_code_complete_availability():$/;"	f
test_code_complete_availability	plugged/deoplete-clang/tests/clang/tests/cindex/test_code_completion.py	/^def test_code_complete_availability():$/;"	f
test_compilationCommands_references	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cdb.py	/^def test_compilationCommands_references():$/;"	f
test_compilationCommands_references	plugged/deoplete-clang/tests/clang/tests/cindex/test_cdb.py	/^def test_compilationCommands_references():$/;"	f
test_compilationDB_references	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cdb.py	/^def test_compilationDB_references():$/;"	f
test_compilationDB_references	plugged/deoplete-clang/tests/clang/tests/cindex/test_cdb.py	/^def test_compilationDB_references():$/;"	f
test_compilecommand_iterator_stops	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cdb.py	/^def test_compilecommand_iterator_stops():$/;"	f
test_compilecommand_iterator_stops	plugged/deoplete-clang/tests/clang/tests/cindex/test_cdb.py	/^def test_compilecommand_iterator_stops():$/;"	f
test_constructor	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_token_kind.py	/^def test_constructor():$/;"	f
test_constructor	plugged/deoplete-clang/tests/clang/tests/cindex/test_token_kind.py	/^def test_constructor():$/;"	f
test_create	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cdb.py	/^def test_create():$/;"	f
test_create	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_index.py	/^def test_create():$/;"	f
test_create	plugged/deoplete-clang/tests/clang/tests/cindex/test_cdb.py	/^def test_create():$/;"	f
test_create	plugged/deoplete-clang/tests/clang/tests/cindex/test_index.py	/^def test_create():$/;"	f
test_create_fail	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cdb.py	/^def test_create_fail():$/;"	f
test_create_fail	plugged/deoplete-clang/tests/clang/tests/cindex/test_cdb.py	/^def test_create_fail():$/;"	f
test_cursor	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_translation_unit.py	/^def test_cursor():$/;"	f
test_cursor	plugged/deoplete-clang/tests/clang/tests/cindex/test_translation_unit.py	/^def test_cursor():$/;"	f
test_custom	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_custom():$/;"	f
test_decay	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^def test_decay():$/;"	f
test_decay	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^def test_decay():$/;"	f
test_detatch_retval	plugged/vdebug/tests/test_dbgp_api.py	/^    def test_detatch_retval(self):$/;"	m	class:ApiTest
test_diagnostic_category	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_diagnostics.py	/^def test_diagnostic_category():$/;"	f
test_diagnostic_category	plugged/deoplete-clang/tests/clang/tests/cindex/test_diagnostics.py	/^def test_diagnostic_category():$/;"	f
test_diagnostic_fixit	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_diagnostics.py	/^def test_diagnostic_fixit():$/;"	f
test_diagnostic_fixit	plugged/deoplete-clang/tests/clang/tests/cindex/test_diagnostics.py	/^def test_diagnostic_fixit():$/;"	f
test_diagnostic_note	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_diagnostics.py	/^def test_diagnostic_note():$/;"	f
test_diagnostic_note	plugged/deoplete-clang/tests/clang/tests/cindex/test_diagnostics.py	/^def test_diagnostic_note():$/;"	f
test_diagnostic_option	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_diagnostics.py	/^def test_diagnostic_option():$/;"	f
test_diagnostic_option	plugged/deoplete-clang/tests/clang/tests/cindex/test_diagnostics.py	/^def test_diagnostic_option():$/;"	f
test_diagnostic_range	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_diagnostics.py	/^def test_diagnostic_range():$/;"	f
test_diagnostic_range	plugged/deoplete-clang/tests/clang/tests/cindex/test_diagnostics.py	/^def test_diagnostic_range():$/;"	f
test_diagnostic_warning	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_diagnostics.py	/^def test_diagnostic_warning():$/;"	f
test_diagnostic_warning	plugged/deoplete-clang/tests/clang/tests/cindex/test_diagnostics.py	/^def test_diagnostic_warning():$/;"	f
test_editorconfig	plugged/editorconfig-vim/tests/spec/editorconfig_spec.rb	/^def test_editorconfig(file_name, expected_values)$/;"	f
test_element_count	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^def test_element_count():$/;"	f
test_element_count	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^def test_element_count():$/;"	f
test_element_type	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^def test_element_type():$/;"	f
test_element_type	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^def test_element_type():$/;"	f
test_empty_file_raises_error	plugged/vdebug/tests/test_util_filepath.py	/^    def test_empty_file_raises_error(self):$/;"	m	class:LocalFilePathTest
test_enum_type	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_enum_type():$/;"	f
test_enum_type	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_enum_type():$/;"	f
test_enum_type_cpp	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_enum_type_cpp():$/;"	f
test_enum_type_cpp	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_enum_type_cpp():$/;"	f
test_enum_values	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_enum_values():$/;"	f
test_enum_values	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_enum_values():$/;"	f
test_enum_values_cpp	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_enum_values_cpp():$/;"	f
test_enum_values_cpp	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_enum_values_cpp():$/;"	f
test_eq	plugged/vdebug/tests/test_util_filepath.py	/^    def test_eq(self):$/;"	m	class:LocalFilePathTest
test_eq_false	plugged/vdebug/tests/test_util_filepath.py	/^    def test_eq_false(self):$/;"	m	class:LocalFilePathTest
test_equal	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^def test_equal():$/;"	f
test_equal	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^def test_equal():$/;"	f
test_error_tag_raises_exception	plugged/vdebug/tests/test_dbgp_response.py	/^    def test_error_tag_raises_exception(self):$/;"	m	class:ResponseTest
test_extent	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_location.py	/^def test_extent():$/;"	f
test_extent	plugged/deoplete-clang/tests/clang/tests/cindex/test_location.py	/^def test_extent():$/;"	f
test_fail_from_ast_file	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_translation_unit.py	/^def test_fail_from_ast_file():$/;"	f
test_fail_from_ast_file	plugged/deoplete-clang/tests/clang/tests/cindex/test_translation_unit.py	/^def test_fail_from_ast_file():$/;"	f
test_fail_from_source	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_translation_unit.py	/^def test_fail_from_source():$/;"	f
test_fail_from_source	plugged/deoplete-clang/tests/clang/tests/cindex/test_translation_unit.py	/^def test_fail_from_source():$/;"	f
test_feature_get_retval	plugged/vdebug/tests/test_dbgp_api.py	/^    def test_feature_get_retval(self):$/;"	m	class:ApiTest
test_feature_is_not_supported	plugged/vdebug/tests/test_dbgp_response.py	/^    def test_feature_is_not_supported(self):$/;"	m	class:FeatureResponseTest
test_feature_is_supported	plugged/vdebug/tests/test_dbgp_response.py	/^    def test_feature_is_supported(self):$/;"	m	class:FeatureResponseTest
test_file	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_file.py	/^def test_file():$/;"	f
test_file	plugged/deoplete-clang/tests/clang/tests/cindex/test_file.py	/^def test_file():$/;"	f
test_format	plugged/vdebug/tests/test_log.py	/^    def test_format(self):$/;"	m	class:LoggerTest
test_from_value	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_token_kind.py	/^def test_from_value():$/;"	f
test_from_value	plugged/deoplete-clang/tests/clang/tests/cindex/test_token_kind.py	/^def test_from_value():$/;"	f
test_function_argument_types	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^def test_function_argument_types():$/;"	f
test_function_argument_types	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^def test_function_argument_types():$/;"	f
test_function_variadic	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^def test_function_variadic():$/;"	f
test_function_variadic	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^def test_function_variadic():$/;"	f
test_fuzzy_escapse	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_fuzzy_escapse():$/;"	f
test_get_all_kinds	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor_kind.py	/^def test_get_all_kinds():$/;"	f
test_get_all_kinds	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor_kind.py	/^def test_get_all_kinds():$/;"	f
test_get_arguments	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_get_arguments():$/;"	f
test_get_arguments	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_get_arguments():$/;"	f
test_get_children	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_get_children():$/;"	f
test_get_children	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_get_children():$/;"	f
test_get_cmd	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^    def test_get_cmd(self):$/;"	m	class:CallBreakpointTest
test_get_cmd	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^    def test_get_cmd(self):$/;"	m	class:ConditionalBreakpointTest
test_get_cmd	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^    def test_get_cmd(self):$/;"	m	class:ExceptionBreakpointTest
test_get_cmd	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^    def test_get_cmd(self):$/;"	m	class:LineBreakpointTest
test_get_cmd	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^    def test_get_cmd(self):$/;"	m	class:ReturnBreakpointTest
test_get_cmd	plugged/vdebug/tests/test_dbgp_response.py	/^    def test_get_cmd(self):$/;"	m	class:ResponseTest
test_get_cmd_args	plugged/vdebug/tests/test_dbgp_response.py	/^    def test_get_cmd_args(self):$/;"	m	class:ResponseTest
test_get_file	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_translation_unit.py	/^def test_get_file():$/;"	f
test_get_file	plugged/deoplete-clang/tests/clang/tests/cindex/test_translation_unit.py	/^def test_get_file():$/;"	f
test_get_file	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^    def test_get_file(self):$/;"	m	class:LineBreakpointTest
test_get_line	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^    def test_get_line(self):$/;"	m	class:LineBreakpointTest
test_get_num_template_arguments	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_get_num_template_arguments():$/;"	f
test_get_num_template_arguments	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_get_num_template_arguments():$/;"	f
test_get_option	plugged/vdebug/tests/test_opts_options.py	/^    def test_get_option(self):$/;"	m	class:OptionsTest
test_get_option_as_type	plugged/vdebug/tests/test_opts_options.py	/^    def test_get_option_as_type(self):$/;"	m	class:OptionsTest
test_get_option_for_print	plugged/vdebug/tests/test_opts_options.py	/^    def test_get_option_for_print(self):$/;"	m	class:OptionsTest
test_get_raises_error	plugged/vdebug/tests/test_opts_options.py	/^    def test_get_raises_error(self):$/;"	m	class:OptionsTest
test_get_source_location	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_translation_unit.py	/^def test_get_source_location():$/;"	f
test_get_source_location	plugged/deoplete-clang/tests/clang/tests/cindex/test_translation_unit.py	/^def test_get_source_location():$/;"	f
test_get_source_range	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_translation_unit.py	/^def test_get_source_range():$/;"	f
test_get_source_range	plugged/deoplete-clang/tests/clang/tests/cindex/test_translation_unit.py	/^def test_get_source_range():$/;"	f
test_get_template_argument_kind	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_get_template_argument_kind():$/;"	f
test_get_template_argument_kind	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_get_template_argument_kind():$/;"	f
test_get_template_argument_type	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_get_template_argument_type():$/;"	f
test_get_template_argument_type	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_get_template_argument_type():$/;"	f
test_get_template_argument_unsigned_value	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_get_template_argument_unsigned_value():$/;"	f
test_get_template_argument_unsigned_value	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_get_template_argument_unsigned_value():$/;"	f
test_get_template_argument_value	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_get_template_argument_value():$/;"	f
test_get_template_argument_value	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_get_template_argument_value():$/;"	f
test_get_tokens	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_get_tokens():$/;"	f
test_get_tokens	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_get_tokens():$/;"	f
test_get_tokens_gc	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_translation_unit.py	/^def test_get_tokens_gc():$/;"	f
test_get_tokens_gc	plugged/deoplete-clang/tests/clang/tests/cindex/test_translation_unit.py	/^def test_get_tokens_gc():$/;"	f
test_globruntime	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_globruntime():$/;"	f
test_has_instance	plugged/vdebug/tests/test_opts_options.py	/^    def test_has_instance(self):$/;"	m	class:OptionsTest
test_id_is_unique	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^    def test_id_is_unique(self):$/;"	m	class:BreakpointTest
test_includes	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_translation_unit.py	/^def test_includes():$/;"	f
test_includes	plugged/deoplete-clang/tests/clang/tests/cindex/test_translation_unit.py	/^def test_includes():$/;"	f
test_index_parse	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_translation_unit.py	/^def test_index_parse():$/;"	f
test_index_parse	plugged/deoplete-clang/tests/clang/tests/cindex/test_translation_unit.py	/^def test_index_parse():$/;"	f
test_init_msg_parsed	plugged/vdebug/tests/test_dbgp_api.py	/^    def test_init_msg_parsed(self):$/;"	m	class:ApiTest
test_int_property_attributes	plugged/vdebug/tests/test_dbgp_response.py	/^    def test_int_property_attributes(self):$/;"	m	class:ContextGetTest
test_interactive	plugged/neomake/Makefile	/^test_interactive: $(if $(TEST_VIM),$(if $(IS_NEOVIM),testnvim_interactive,testvim_interactive),t/;"	t
test_invalid_element_type	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^def test_invalid_element_type():$/;"	f
test_invalid_element_type	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^def test_invalid_element_type():$/;"	f
test_invalid_response_raises_error	plugged/vdebug/tests/test_dbgp_api.py	/^    def test_invalid_response_raises_error(self):$/;"	m	class:apiInvalidInitTest
test_is_pod	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^def test_is_pod():$/;"	f
test_is_pod	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^def test_is_pod():$/;"	f
test_is_restrict_qualified	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^def test_is_restrict_qualified():$/;"	f
test_is_restrict_qualified	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^def test_is_restrict_qualified():$/;"	f
test_is_static_method	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_is_static_method():$/;"	f
test_is_static_method	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_is_static_method():$/;"	f
test_is_volatile_qualified	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^def test_is_volatile_qualified():$/;"	f
test_is_volatile_qualified	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^def test_is_volatile_qualified():$/;"	f
test_kind_groups	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor_kind.py	/^def test_kind_groups():$/;"	f
test_kind_groups	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor_kind.py	/^def test_kind_groups():$/;"	f
test_lexical_parent	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_lexical_parent():$/;"	f
test_lexical_parent	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_lexical_parent():$/;"	f
test_load	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_translation_unit.py	/^def test_load():$/;"	f
test_load	plugged/deoplete-clang/tests/clang/tests/cindex/test_translation_unit.py	/^def test_load():$/;"	f
test_location	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_location.py	/^def test_location():$/;"	f
test_location	plugged/deoplete-clang/tests/clang/tests/cindex/test_location.py	/^def test_location():$/;"	f
test_log_opens_file	plugged/vdebug/tests/test_log.py	/^    def test_log_opens_file(self):$/;"	m	class:FileLoggerTest
test_log_with_higher_level	plugged/vdebug/tests/test_log.py	/^    def test_log_with_higher_level(self):$/;"	m	class:LoggerTest
test_log_with_lower_level	plugged/vdebug/tests/test_log.py	/^    def test_log_with_lower_level(self):$/;"	m	class:LoggerTest
test_log_with_no_window	plugged/vdebug/tests/test_log.py	/^    def test_log_with_no_window(self):$/;"	m	class:WindowLoggerTest
test_log_with_open_file	plugged/vdebug/tests/test_log.py	/^    def test_log_with_open_file(self):$/;"	m	class:FileLoggerTest
test_log_with_open_window	plugged/vdebug/tests/test_log.py	/^    def test_log_with_open_window(self):$/;"	m	class:WindowLoggerTest
test_log_with_same_level	plugged/vdebug/tests/test_log.py	/^    def test_log_with_same_level(self):$/;"	m	class:LoggerTest
test_lookup_fail	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cdb.py	/^def test_lookup_fail():$/;"	f
test_lookup_fail	plugged/deoplete-clang/tests/clang/tests/cindex/test_cdb.py	/^def test_lookup_fail():$/;"	f
test_lookup_succeed	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cdb.py	/^def test_lookup_succeed():$/;"	f
test_lookup_succeed	plugged/deoplete-clang/tests/clang/tests/cindex/test_cdb.py	/^def test_lookup_succeed():$/;"	f
test_mangled_name	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_mangled_name():$/;"	f
test_mangled_name	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_mangled_name():$/;"	f
test_matcher_full_fuzzy	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_matcher_full_fuzzy.py	/^def test_matcher_full_fuzzy():$/;"	f
test_matcher_fuzzy	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_matcher_fuzzy.py	/^def test_matcher_fuzzy():$/;"	f
test_name	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor_kind.py	/^def test_name():$/;"	f
test_name	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor_kind.py	/^def test_name():$/;"	f
test_neq	plugged/vdebug/tests/test_util_filepath.py	/^    def test_neq(self):$/;"	m	class:LocalFilePathTest
test_neq_false	plugged/vdebug/tests/test_util_filepath.py	/^    def test_neq_false(self):$/;"	m	class:LocalFilePathTest
test_numeric_keys	plugged/vdebug/tests/test_dbgp_eval_property.py	/^    def test_numeric_keys(self):$/;"	m	class:EvalPropertyTest
test_objc_type_encoding	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_objc_type_encoding():$/;"	f
test_objc_type_encoding	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_objc_type_encoding():$/;"	f
test_offset	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^def test_offset():$/;"	f
test_offset	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^def test_offset():$/;"	f
test_on_add_sets_ui_breakpoint	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^    def test_on_add_sets_ui_breakpoint(self):$/;"	m	class:LineBreakpointTest
test_on_remove_deletes_ui_breakpoint	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^    def test_on_remove_deletes_ui_breakpoint(self):$/;"	m	class:LineBreakpointTest
test_option_is_not_set	plugged/vdebug/tests/test_opts_options.py	/^    def test_option_is_not_set(self):$/;"	m	class:OptionsTest
test_option_is_not_valid	plugged/vdebug/tests/test_opts_options.py	/^    def test_option_is_not_valid(self):$/;"	m	class:OptionsTest
test_option_isset	plugged/vdebug/tests/test_opts_options.py	/^    def test_option_isset(self):$/;"	m	class:OptionsTest
test_overlap_length	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_overlap_length():$/;"	f
test_overwrite	plugged/vdebug/tests/test_opts_options.py	/^    def test_overwrite(self):$/;"	m	class:OptionsTest
test_parse	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_index.py	/^def test_parse():$/;"	f
test_parse	plugged/deoplete-clang/tests/clang/tests/cindex/test_index.py	/^def test_parse():$/;"	f
test_parse_arguments	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_translation_unit.py	/^def test_parse_arguments():$/;"	f
test_parse_arguments	plugged/deoplete-clang/tests/clang/tests/cindex/test_translation_unit.py	/^def test_parse_arguments():$/;"	f
test_parse_with_call_breakpoint	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^    def test_parse_with_call_breakpoint(self):$/;"	m	class:BreakpointTest
test_parse_with_call_raises_error	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^    def test_parse_with_call_raises_error(self):$/;"	m	class:BreakpointTest
test_parse_with_conditional_breakpoint	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^    def test_parse_with_conditional_breakpoint(self):$/;"	m	class:BreakpointTest
test_parse_with_conditional_raises_error	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^    def test_parse_with_conditional_raises_error(self):$/;"	m	class:BreakpointTest
test_parse_with_empty_line_raises_error	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^    def test_parse_with_empty_line_raises_error(self):$/;"	m	class:BreakpointTest
test_parse_with_exception_breakpoint	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^    def test_parse_with_exception_breakpoint(self):$/;"	m	class:BreakpointTest
test_parse_with_exception_raises_error	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^    def test_parse_with_exception_raises_error(self):$/;"	m	class:BreakpointTest
test_parse_with_line_breakpoint	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^    def test_parse_with_line_breakpoint(self):$/;"	m	class:BreakpointTest
test_parse_with_return_breakpoint	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^    def test_parse_with_return_breakpoint(self):$/;"	m	class:BreakpointTest
test_parse_with_return_raises_error	plugged/vdebug/tests/test_breakpoint_breakpoint.py	/^    def test_parse_with_return_raises_error(self):$/;"	m	class:BreakpointTest
test_pos	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_pos():$/;"	f
test_properties_are_objects	plugged/vdebug/tests/test_dbgp_response.py	/^    def test_properties_are_objects(self):$/;"	m	class:ContextGetAlternateTest
test_properties_are_objects	plugged/vdebug/tests/test_dbgp_response.py	/^    def test_properties_are_objects(self):$/;"	m	class:ContextGetTest
test_quoted	plugged/vdebug/tests/test_util_filepath.py	/^    def test_quoted(self):$/;"	m	class:LocalFilePathTest
test_read	plugged/vdebug/tests/test_connection.py	/^    def test_read(self):$/;"	m	class:ConnectionTest
test_read_eof	plugged/vdebug/tests/test_connection.py	/^    def test_read_eof(self):$/;"	m	class:ConnectionTest
test_read_long	plugged/vdebug/tests/test_connection.py	/^    def test_read_long(self):$/;"	m	class:ConnectionTest
test_record_layout	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^def test_record_layout():$/;"	f
test_record_layout	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^def test_record_layout():$/;"	f
test_referenced	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_referenced():$/;"	f
test_referenced	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_referenced():$/;"	f
test_references	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_references():$/;"	f
test_references	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^def test_references():$/;"	f
test_references	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_references():$/;"	f
test_references	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^def test_references():$/;"	f
test_registration	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_token_kind.py	/^def test_registration():$/;"	f
test_registration	plugged/deoplete-clang/tests/clang/tests/cindex/test_token_kind.py	/^def test_registration():$/;"	f
test_reload_evals_options	plugged/vdebug/tests/test_util_environment.py	/^    def test_reload_evals_options(self):$/;"	m	class:EnvironmentTest
test_remote_prefix	plugged/vdebug/tests/test_util_filepath.py	/^    def test_remote_prefix(self):$/;"	m	class:LocalFilePathTest
test_reparse_arguments	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_translation_unit.py	/^def test_reparse_arguments():$/;"	f
test_reparse_arguments	plugged/deoplete-clang/tests/clang/tests/cindex/test_translation_unit.py	/^def test_reparse_arguments():$/;"	f
test_repr	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_token_kind.py	/^def test_repr():$/;"	f
test_repr	plugged/deoplete-clang/tests/clang/tests/cindex/test_token_kind.py	/^def test_repr():$/;"	f
test_result_type	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_result_type():$/;"	f
test_result_type	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_result_type():$/;"	f
test_run_retval	plugged/vdebug/tests/test_dbgp_api.py	/^    def test_run_retval(self):$/;"	m	class:ApiTest
test_save	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_translation_unit.py	/^def test_save():$/;"	f
test_save	plugged/deoplete-clang/tests/clang/tests/cindex/test_translation_unit.py	/^def test_save():$/;"	f
test_save_translation_errors	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_translation_unit.py	/^def test_save_translation_errors():$/;"	f
test_save_translation_errors	plugged/deoplete-clang/tests/clang/tests/cindex/test_translation_unit.py	/^def test_save_translation_errors():$/;"	f
test_semantic_parent	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_semantic_parent():$/;"	f
test_semantic_parent	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_semantic_parent():$/;"	f
test_send	plugged/vdebug/tests/test_connection.py	/^    def test_send(self):$/;"	m	class:ConnectionTest
test_shutdown	plugged/vdebug/tests/test_log.py	/^    def test_shutdown(self):$/;"	m	class:WindowLoggerTest
test_shutdown_with_file	plugged/vdebug/tests/test_log.py	/^    def test_shutdown_with_file(self):$/;"	m	class:FileLoggerTest
test_shutdown_without_file	plugged/vdebug/tests/test_log.py	/^    def test_shutdown_without_file(self):$/;"	m	class:FileLoggerTest
test_single_property	plugged/vdebug/tests/test_dbgp_context_property.py	/^    def test_single_property(self):$/;"	m	class:ContextPropertyAltTest
test_single_property	plugged/vdebug/tests/test_dbgp_context_property.py	/^    def test_single_property(self):$/;"	m	class:ContextPropertyDefaultTest
test_skipping	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_skipping():$/;"	f
test_spelling	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_translation_unit.py	/^def test_spelling():$/;"	f
test_spelling	plugged/deoplete-clang/tests/clang/tests/cindex/test_translation_unit.py	/^def test_spelling():$/;"	f
test_status_retval	plugged/vdebug/tests/test_dbgp_api.py	/^    def test_status_retval(self):$/;"	m	class:ApiTest
test_status_send_adds_trans_id	plugged/vdebug/tests/test_dbgp_api.py	/^    def test_status_send_adds_trans_id(self):$/;"	m	class:ApiTest
test_step_into_retval	plugged/vdebug/tests/test_dbgp_api.py	/^    def test_step_into_retval(self):$/;"	m	class:ApiTest
test_step_out_retval	plugged/vdebug/tests/test_dbgp_api.py	/^    def test_step_out_retval(self):$/;"	m	class:ApiTest
test_step_over_retval	plugged/vdebug/tests/test_dbgp_api.py	/^    def test_step_over_retval(self):$/;"	m	class:ApiTest
test_stop_retval	plugged/vdebug/tests/test_dbgp_api.py	/^    def test_stop_retval(self):$/;"	m	class:ApiTest
test_string	plugged/vdebug/tests/test_dbgp_context_property.py	/^    def test_string(self):$/;"	m	class:ContextPropertyAltTest
test_string_is_status_text	plugged/vdebug/tests/test_dbgp_response.py	/^    def test_string_is_status_text(self):$/;"	m	class:StackGetTest
test_string_is_status_text	plugged/vdebug/tests/test_dbgp_response.py	/^    def test_string_is_status_text(self):$/;"	m	class:StatusResponseTest
test_string_property_attributes	plugged/vdebug/tests/test_dbgp_response.py	/^    def test_string_property_attributes(self):$/;"	m	class:ContextGetTest
test_strwidth	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_strwidth():$/;"	f
test_time	plugged/vdebug/tests/test_log.py	/^    def test_time(self):$/;"	m	class:LoggerTest
test_token_extent	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_tokens.py	/^def test_token_extent():$/;"	f
test_token_extent	plugged/deoplete-clang/tests/clang/tests/cindex/test_tokens.py	/^def test_token_extent():$/;"	f
test_token_location	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_tokens.py	/^def test_token_location():$/;"	f
test_token_location	plugged/deoplete-clang/tests/clang/tests/cindex/test_tokens.py	/^def test_token_location():$/;"	f
test_token_to_cursor	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_tokens.py	/^def test_token_to_cursor():$/;"	f
test_token_to_cursor	plugged/deoplete-clang/tests/clang/tests/cindex/test_tokens.py	/^def test_token_to_cursor():$/;"	f
test_truncate	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_truncate():$/;"	f
test_type_spelling	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^def test_type_spelling():$/;"	f
test_type_spelling	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^def test_type_spelling():$/;"	f
test_typekind_spelling	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_type.py	/^def test_typekind_spelling():$/;"	f
test_typekind_spelling	plugged/deoplete-clang/tests/clang/tests/cindex/test_type.py	/^def test_typekind_spelling():$/;"	f
test_undefined_property	plugged/vdebug/tests/test_dbgp_context_property.py	/^    def test_undefined_property(self):$/;"	m	class:ContextPropertyDefaultTest
test_underlying_type	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_cursor.py	/^def test_underlying_type():$/;"	f
test_underlying_type	plugged/deoplete-clang/tests/clang/tests/cindex/test_cursor.py	/^def test_underlying_type():$/;"	f
test_uninit_raises_error	plugged/vdebug/tests/test_opts_options.py	/^    def test_uninit_raises_error(self):$/;"	m	class:OptionsTest
test_uniq_list_dict	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_uniq_list_dict():$/;"	f
test_unknown_value	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_token_kind.py	/^def test_unknown_value():$/;"	f
test_unknown_value	plugged/deoplete-clang/tests/clang/tests/cindex/test_token_kind.py	/^def test_unknown_value():$/;"	f
test_unsaved_files	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_translation_unit.py	/^def test_unsaved_files():$/;"	f
test_unsaved_files	plugged/deoplete-clang/tests/clang/tests/cindex/test_translation_unit.py	/^def test_unsaved_files():$/;"	f
test_unsaved_files_2	plugged/deoplete-clang/rplugin/python3/deoplete/clang/tests/cindex/test_translation_unit.py	/^def test_unsaved_files_2():$/;"	f
test_unsaved_files_2	plugged/deoplete-clang/tests/clang/tests/cindex/test_translation_unit.py	/^def test_unsaved_files_2():$/;"	f
test_win	plugged/vdebug/tests/test_util_filepath.py	/^    def test_win(self):$/;"	m	class:LocalFilePathTest
testcoverage	plugged/neomake/Makefile	/^testcoverage: COVERAGE_VADER_ARGS:=tests\/main.vader $(wildcard tests\/isolated\/*.vader)$/;"	t
testcoverage	plugged/neomake/Makefile	/^testcoverage:$/;"	t
testnvim	plugged/neomake/Makefile	/^testnvim: TEST_VIM:=nvim$/;"	t
testnvim	plugged/neomake/Makefile	/^testnvim: TEST_VIM_PREFIX+=HOME=$(CURDIR)\/build\/neovim-test-home$/;"	t
testnvim	plugged/neomake/Makefile	/^testnvim: TEST_VIM_PREFIX+=VADER_OUTPUT_FILE=\/dev\/stderr$/;"	t
testnvim	plugged/neomake/Makefile	/^testnvim: build\/neovim-test-home$/;"	t
testnvim	plugged/neomake/Makefile	/^testnvim: | build $(DEP_PLUGINS)$/;"	t
testnvim_interactive	plugged/neomake/Makefile	/^testnvim_interactive: TEST_VIM:=nvim$/;"	t
testnvim_interactive	plugged/neomake/Makefile	/^testnvim_interactive: TEST_VIM_PREFIX+=HOME=$(CURDIR)\/build\/neovim-test-home$/;"	t
testnvim_interactive	plugged/neomake/Makefile	/^testnvim_interactive: _run_interactive$/;"	t
testnvimx	plugged/neomake/Makefile	/^testnvimx: override VADER_OPTIONS+=-x$/;"	t
testnvimx	plugged/neomake/Makefile	/^testnvimx: testnvim$/;"	t
testvim	plugged/neomake/Makefile	/^testvim: TEST_VIM:=vim$/;"	t
testvim	plugged/neomake/Makefile	/^testvim: TEST_VIM_PREFIX+=HOME=\/dev\/null$/;"	t
testvim	plugged/neomake/Makefile	/^testvim: | build $(DEP_PLUGINS)$/;"	t
testvim_interactive	plugged/neomake/Makefile	/^testvim_interactive: TEST_VIM:=vim -X$/;"	t
testvim_interactive	plugged/neomake/Makefile	/^testvim_interactive: TEST_VIM_PREFIX+=HOME=\/dev\/null$/;"	t
testvim_interactive	plugged/neomake/Makefile	/^testvim_interactive: _run_interactive$/;"	t
testvimx	plugged/neomake/Makefile	/^testvimx: override VADER_OPTIONS+=-x$/;"	t
testvimx	plugged/neomake/Makefile	/^testvimx: testvim$/;"	t
testwatch	plugged/neomake/Makefile	/^testwatch: override export VADER_OPTIONS+=-q$/;"	t
testwatch	plugged/neomake/Makefile	/^testwatch:$/;"	t
testwatchx	plugged/neomake/Makefile	/^testwatchx: override export VADER_OPTIONS+=-x$/;"	t
testwatchx	plugged/neomake/Makefile	/^testwatchx: testwatch$/;"	t
testx	plugged/neomake/Makefile	/^testx: override VADER_OPTIONS+=-x$/;"	t
testx	plugged/neomake/Makefile	/^testx: test$/;"	t
text	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/Makefile	/^text:$/;"	t
text	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	a	object:message.spans.0
text	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	a	object:message.spans.0.expansion.def_site_span
text	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	a	object:message.spans.0.expansion.span
text	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.spans.0.expansion.def_site_span.text.0
text	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.spans.0.expansion.def_site_span.text.1
text	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.spans.0.expansion.def_site_span.text.2
text	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.spans.0.expansion.def_site_span.text.3
text	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.spans.0.expansion.def_site_span.text.4
text	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.spans.0.expansion.def_site_span.text.5
text	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.spans.0.expansion.def_site_span.text.6
text	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.spans.0.expansion.def_site_span.text.7
text	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.spans.0.expansion.def_site_span.text.8
text	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.spans.0.expansion.def_site_span.text.9
text	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.spans.0.expansion.span.text.0
text	plugged/neomake/tests/fixtures/rust/cargo_error.json	/^{"message":{"children":[{"children":[],"code":null,"level":"note","message":"expected type `&str/;"	s	object:message.spans.0.text.0
text	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	a	object:message.spans.0
text	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	a	object:message.spans.0.expansion.span
text	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	s	object:message.spans.0.expansion.span.text.0
text	plugged/neomake/tests/fixtures/rust/cargo_error_children.json	/^{"message":{"children":[{"children":[],"code":null,"level":"help","message":"message: Only struc/;"	s	object:message.spans.0.text.0
text	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	a	object:message.spans.0
text	plugged/neomake/tests/fixtures/rust/cargo_warning.json	/^{"message":{"children":[],"code":null,"level":"warning","message":"unused import: `Variant`, #[w/;"	s	object:message.spans.0.text.0
text	plugged/vdebug/tests/test_log.py	/^    text = 'dummy text'$/;"	v	class:LoggerTest
text-table	plugged/nova-vim/package-lock.json	/^        "text-table": "0.2.0",$/;"	s	object:dependencies.eslint.requires
text-table	plugged/nova-vim/package-lock.json	/^    "text-table": {$/;"	o	object:dependencies
text_type	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/compat.py	/^    text_type = unicode$/;"	v
the buffer detection	plugged/vdebug/spec/vdebug_spec.rb	/^  describe "the buffer detection" do$/;"	d
the buffer retrieval	plugged/vdebug/spec/vdebug_spec.rb	/^  describe "the buffer retrieval" do$/;"	d
the debugger commands	plugged/vdebug/spec/vdebug_spec.rb	/^  describe "the debugger commands" do$/;"	d
the resulting option value	plugged/vdebug/spec/options_command_spec.rb	/^    context "the resulting option value" do$/;"	c
the status queries	plugged/vdebug/spec/vdebug_spec.rb	/^  describe "the status queries" do$/;"	d
through	plugged/nova-vim/package-lock.json	/^        "through": "2.3.8"$/;"	s	object:dependencies.inquirer.requires
through	plugged/nova-vim/package-lock.json	/^    "through": {$/;"	o	object:dependencies
time	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def time(self):$/;"	m	class:File
time	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def time(self):$/;"	m	class:File
time	plugged/vdebug/pythonx/vdebug/log.py	/^    def time():$/;"	m	class:Logger
time_string	plugged/vdebug/tests/test_log.py	/^    time_string = 'Mon 02 2042 01:42:42'$/;"	v	class:LoggerTest
time_tuple	plugged/vdebug/tests/test_log.py	/^    time_tuple = (2042, 4, 2, 1, 42, 42, 0, 0, 0)$/;"	v	class:LoggerTest
timed	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang/profiler.py	/^        def timed(*args, **kw):$/;"	f	function:timeit.timereald	file:
timeit	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang/profiler.py	/^def timeit(logger, fmt, threshold):$/;"	f
timeit-gather_candidates	plugged/deoplete-clang/Makefile	/^timeit-gather_candidates: import$/;"	t
timeit-get_compilation_database	plugged/deoplete-clang/Makefile	/^timeit-get_compilation_database: import$/;"	t
timeit-get_compile_params	plugged/deoplete-clang/Makefile	/^timeit-get_compile_params: import$/;"	t
timeit-get_complete_position	plugged/deoplete-clang/Makefile	/^timeit-get_complete_position: import$/;"	t
timeit-get_completion	plugged/deoplete-clang/Makefile	/^timeit-get_completion: import$/;"	t
timeit-get_current_buffer	plugged/deoplete-clang/Makefile	/^timeit-get_current_buffer: import$/;"	t
timeit-get_params	plugged/deoplete-clang/Makefile	/^timeit-get_params: import$/;"	t
timeit-get_translation_unit	plugged/deoplete-clang/Makefile	/^timeit-get_translation_unit: import$/;"	t
timeit-parse_candidates	plugged/deoplete-clang/Makefile	/^timeit-parse_candidates: import$/;"	t
timereald	plugged/deoplete-clang/rplugin/python3/deoplete/sources/deoplete_clang/profiler.py	/^    def timereald(method):$/;"	f	function:timeit	file:
title	plugged/neomake/contrib/run-tests-watch	/^title() {$/;"	f
toggle	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def toggle(self, name):$/;"	m	class:WindowManager
toggle	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def toggle(self, open_cmd):$/;"	m	class:Window
toggle_breakpoint_window	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def toggle_breakpoint_window(self):$/;"	m	class:DebuggerInterface
toggle_window	plugged/vdebug/pythonx/vdebug/debugger_interface.py	/^    def toggle_window(self, name):$/;"	m	class:DebuggerInterface
toggle_window	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def toggle_window(self, name):$/;"	m	class:Ui
trace	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def trace(self):$/;"	m	class:WindowManager
trace	plugged/vdebug/rubylib/vdebug.rb	/^  def trace(expression)$/;"	f	class:Vdebug
trace_window_content	plugged/vdebug/rubylib/vdebug.rb	/^  def trace_window_content$/;"	f	class:Vdebug
tracewin	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    tracewin = None$/;"	v	class:Ui
transID	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    transID = 0$/;"	v	class:Api
translate	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/fnmatch.py	/^def translate(pat, nested=False):$/;"	f
translation_unit	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def translation_unit(self):$/;"	m	class:Cursor
translation_unit	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def translation_unit(self):$/;"	m	class:Type
translation_unit	plugged/deoplete-clang/tests/ast.py	/^translation_unit = index.parse(sys.argv[1], ['-x', 'c++'])$/;"	v
translation_unit	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def translation_unit(self):$/;"	m	class:Cursor
translation_unit	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def translation_unit(self):$/;"	m	class:Type
translation_unit	plugged/deoplete-clang/tests/code_completion.py	/^translation_unit = index.parse($/;"	v
truncate	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def truncate(string, max_width):$/;"	f
truncate_skipping	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def truncate_skipping(string, max_width, footer, footer_len):$/;"	f
try	plugged/deoplete-clang/mk/debug_code.mk	/^SET_DEBUG := try:\\n            from helper import set_debug\\n            if self.vim.vars["deo/;"	t
tryit	plugged/nova-vim/package-lock.json	/^        "tryit": "1.0.3"$/;"	s	object:dependencies.is-resolvable.requires
tryit	plugged/nova-vim/package-lock.json	/^    "tryit": {$/;"	o	object:dependencies
type	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def type(self):$/;"	m	class:Cursor
type	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def type(self):$/;"	m	class:Cursor
type	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    type = "call"$/;"	v	class:CallBreakpoint
type	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    type = "conditional"$/;"	v	class:ConditionalBreakpoint
type	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    type = "exception"$/;"	v	class:ExceptionBreakpoint
type	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    type = "line"$/;"	v	class:LineBreakpoint
type	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    type = "return"$/;"	v	class:ReturnBreakpoint
type	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    type = "watch"$/;"	v	class:WatchBreakpoint
type	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    type = None$/;"	v	class:Breakpoint
type	plugged/vim-multiple-cursors/spec/benchmark_spec.rb	/^def type(string)$/;"	f
type	plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def type(string)$/;"	f
type-check	plugged/nova-vim/package-lock.json	/^        "type-check": "0.3.2"$/;"	s	object:dependencies.levn.requires
type-check	plugged/nova-vim/package-lock.json	/^        "type-check": "0.3.2",$/;"	s	object:dependencies.optionator.requires
type-check	plugged/nova-vim/package-lock.json	/^    "type-check": {$/;"	o	object:dependencies
type_and_size	plugged/vdebug/pythonx/vdebug/dbgp.py	/^    def type_and_size(self):$/;"	m	class:ContextProperty
typedarray	plugged/nova-vim/package-lock.json	/^        "typedarray": "0.0.6"$/;"	s	object:dependencies.concat-stream.requires
typedarray	plugged/nova-vim/package-lock.json	/^    "typedarray": {$/;"	o	object:dependencies
u	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/compat.py	/^    u = lambda s: codecs.unicode_escape_decode(s)[0]$/;"	f
ui	plugged/vdebug/pythonx/vdebug/session.py	/^    def ui(self):$/;"	m	class:Session
ui	plugged/vdebug/pythonx/vdebug/session.py	/^    def ui(self):$/;"	m	class:SessionHandler
uiGroups	plugged/nova-vim/src/airline.js	/^const uiGroups = require('nova-colors').uiGroups$/;"	C
uiGroups	plugged/nova-vim/src/index.js	/^const uiGroups = require('nova-colors').uiGroups$/;"	C
underlying_typedef_type	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def underlying_typedef_type(self):$/;"	m	class:Cursor
underlying_typedef_type	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def underlying_typedef_type(self):$/;"	m	class:Cursor
undotree#UndotreeFocus	plugged/undotree/autoload/undotree.vim	/^function! undotree#UndotreeFocus()$/;"	f
undotree#UndotreeHide	plugged/undotree/autoload/undotree.vim	/^function! undotree#UndotreeHide()$/;"	f
undotree#UndotreeIsVisible	plugged/undotree/autoload/undotree.vim	/^function! undotree#UndotreeIsVisible()$/;"	f
undotree#UndotreeShow	plugged/undotree/autoload/undotree.vim	/^function! undotree#UndotreeShow()$/;"	f
undotree#UndotreeToggle	plugged/undotree/autoload/undotree.vim	/^function! undotree#UndotreeToggle()$/;"	f
undotree#UndotreeUpdate	plugged/undotree/autoload/undotree.vim	/^function! undotree#UndotreeUpdate()$/;"	f
uniq	plugged/neomake/Makefile	/^uniq = $(if $1,$(firstword $1) $(call uniq,$(filter-out $(firstword $1),$1)))$/;"	m
uniq_list_dict	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def uniq_list_dict(l):$/;"	f
unite#sources#neosnippet#define	plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! unite#sources#neosnippet#define() abort$/;"	f
unite#sources#neosnippet#start_complete	plugged/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! unite#sources#neosnippet#start_complete() abort$/;"	f
unite#sources#neosnippet_file#define	plugged/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^function! unite#sources#neosnippet_file#define() abort$/;"	f
unlink_api	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def unlink_api(self):$/;"	m	class:Store
unmap	plugged/vdebug/pythonx/vdebug/util.py	/^    def unmap(self):$/;"	m	class:Keymapper
update	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def update(self, from_od):$/;"	m	class:OrderedDict
update_lines	plugged/vdebug/pythonx/vdebug/breakpoint.py	/^    def update_lines(self, lines):$/;"	m	class:Store
urllib	plugged/vdebug/pythonx/vdebug/util.py	/^    import urllib.parse as urllib$/;"	I
usage	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/main.py	/^def usage(command, error=False):$/;"	f
usage	plugged/fzf.vim/bin/preview.rb	/^def usage$/;"	f
use_raw_list	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%FILE_LIST_CMD_IS_ABSOLUTE%"]==["1"] set use_raw_list=1$/;"	v
use_raw_list	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%PROJECT_ROOT%"]==["."] set use_raw_list=1$/;"	v
use_raw_list	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set use_raw_list=0$/;"	v
user-home	plugged/nova-vim/package-lock.json	/^        "user-home": "2.0.0"$/;"	s	object:dependencies.eslint.requires
user-home	plugged/nova-vim/package-lock.json	/^    "user-home": {$/;"	o	object:dependencies
util	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^import deoplete.util as util$/;"	I
util	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^import deoplete.util as util$/;"	I
util-deprecate	plugged/nova-vim/package-lock.json	/^        "util-deprecate": "1.0.2"$/;"	s	object:dependencies.readable-stream.requires
util-deprecate	plugged/nova-vim/package-lock.json	/^    "util-deprecate": {$/;"	o	object:dependencies
vader_dir	plugged/neomake/tests/vim/vimrc	/^  let vader_dir = expand($TESTS_VADER_DIR)$/;"	v
vader_dir	plugged/neomake/tests/vim/vimrc	/^  let vader_dir = s:dep_plugins_base . '\/vader'$/;"	v
values	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/odict.py	/^    def values(self, values=None):$/;"	m	class:OrderedDict
var_regex	plugged/vdebug/pythonx/vdebug/event.py	/^    var_regex = {$/;"	v	class:CursorEvalEvent
varify_command	plugged/deoplete-clang/tests/test_cmake_source.py	/^def varify_command(commands):$/;"	f
varify_varaible	plugged/deoplete-clang/tests/test_cmake_source.py	/^def varify_varaible(variables):$/;"	f
vdebug	plugged/vdebug/features/support/helpers.rb	/^  def vdebug$/;"	f	module:VdebugHelper
verify	plugged/nova-vim/package.json	/^    "verify": "npm run lint && npm run build",$/;"	s	object:scripts
version	plugged/editorconfig-vim/plugin/editorconfig-core-py/docs/conf.py	/^version = __version__$/;"	v
version	plugged/editorconfig-vim/plugin/editorconfig-core-py/editorconfig/main.py	/^def version():$/;"	f
version	plugged/nova-vim/package-lock.json	/^          "version": "1.2.0",$/;"	s	object:dependencies.watch.dependencies.minimist
version	plugged/nova-vim/package-lock.json	/^          "version": "2.0.0",$/;"	s	object:dependencies.table.dependencies.is-fullwidth-code-point
version	plugged/nova-vim/package-lock.json	/^          "version": "2.0.0",$/;"	s	object:dependencies.table.dependencies.string-width
version	plugged/nova-vim/package-lock.json	/^          "version": "3.3.0",$/;"	s	object:dependencies.acorn-jsx.dependencies.acorn
version	plugged/nova-vim/package-lock.json	/^          "version": "4.1.1",$/;"	s	object:dependencies.esrecurse.dependencies.estraverse
version	plugged/nova-vim/package-lock.json	/^      "version": "0.0.0",$/;"	s	object:dependencies.jsonify
version	plugged/nova-vim/package-lock.json	/^      "version": "0.0.1",$/;"	s	object:dependencies.concat-map
version	plugged/nova-vim/package-lock.json	/^      "version": "0.0.4",$/;"	s	object:dependencies.slice-ansi
version	plugged/nova-vim/package-lock.json	/^      "version": "0.0.5",$/;"	s	object:dependencies.mute-stream
version	plugged/nova-vim/package-lock.json	/^      "version": "0.0.6",$/;"	s	object:dependencies.typedarray
version	plugged/nova-vim/package-lock.json	/^      "version": "0.0.8",$/;"	s	object:dependencies.minimist
version	plugged/nova-vim/package-lock.json	/^      "version": "0.1.0",$/;"	s	object:dependencies.caller-path
version	plugged/nova-vim/package-lock.json	/^      "version": "0.1.0",$/;"	s	object:dependencies.run-async
version	plugged/nova-vim/package-lock.json	/^      "version": "0.1.3",$/;"	s	object:dependencies.deep-is
version	plugged/nova-vim/package-lock.json	/^      "version": "0.1.4",$/;"	s	object:dependencies.imurmurhash
version	plugged/nova-vim/package-lock.json	/^      "version": "0.1.5",$/;"	s	object:dependencies.es6-map
version	plugged/nova-vim/package-lock.json	/^      "version": "0.1.5",$/;"	s	object:dependencies.es6-set
version	plugged/nova-vim/package-lock.json	/^      "version": "0.10.23",$/;"	s	object:dependencies.es5-ext
version	plugged/nova-vim/package-lock.json	/^      "version": "0.12.0",$/;"	s	object:dependencies.inquirer
version	plugged/nova-vim/package-lock.json	/^      "version": "0.19.2",$/;"	s	object:dependencies.watch
version	plugged/nova-vim/package-lock.json	/^      "version": "0.2.0",$/;"	s	object:dependencies.callsites
version	plugged/nova-vim/package-lock.json	/^      "version": "0.2.0",$/;"	s	object:dependencies.exec-sh
version	plugged/nova-vim/package-lock.json	/^      "version": "0.2.0",$/;"	s	object:dependencies.text-table
version	plugged/nova-vim/package-lock.json	/^      "version": "0.2.1",$/;"	s	object:dependencies.write
version	plugged/nova-vim/package-lock.json	/^      "version": "0.3.0",$/;"	s	object:dependencies.levn
version	plugged/nova-vim/package-lock.json	/^      "version": "0.3.1",$/;"	s	object:dependencies.circular-json
version	plugged/nova-vim/package-lock.json	/^      "version": "0.3.2",$/;"	s	object:dependencies.type-check
version	plugged/nova-vim/package-lock.json	/^      "version": "0.3.5",$/;"	s	object:dependencies.event-emitter
version	plugged/nova-vim/package-lock.json	/^      "version": "0.5.1",$/;"	s	object:dependencies.mkdirp
version	plugged/nova-vim/package-lock.json	/^      "version": "0.6.1",$/;"	s	object:dependencies.shelljs
version	plugged/nova-vim/package-lock.json	/^      "version": "0.8.2",$/;"	s	object:dependencies.optionator
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.balanced-match
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.d
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.fs.realpath
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.is-fullwidth-code-point
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.is-path-cwd
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.is-path-in-cwd
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.is-path-inside
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.is-resolvable
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.isarray
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.wordwrap
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.arrify
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.json-stable-stringify
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.number-is-nan
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.path-is-absolute
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.readline2
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.resolve-from
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.restore-cursor
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.array-union
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.cli-cursor
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.core-util-is
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.is-property
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.os-homedir
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.path-is-inside
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.string-width
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.string_decoder
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.util-deprecate
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.wrappy
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.3",$/;"	s	object:dependencies.array-uniq
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.3",$/;"	s	object:dependencies.require-uncached
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.3",$/;"	s	object:dependencies.sprintf-js
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.3",$/;"	s	object:dependencies.tryit
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.4",$/;"	s	object:dependencies.strip-json-comments
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.5",$/;"	s	object:dependencies.escape-string-regexp
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.6",$/;"	s	object:dependencies.inflight
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.7",$/;"	s	object:dependencies.process-nextick-args
version	plugged/nova-vim/package-lock.json	/^      "version": "1.0.9",$/;"	s	object:dependencies.argparse
version	plugged/nova-vim/package-lock.json	/^      "version": "1.1.0",$/;"	s	object:dependencies.code-point-at
version	plugged/nova-vim/package-lock.json	/^      "version": "1.1.0",$/;"	s	object:dependencies.onetime
version	plugged/nova-vim/package-lock.json	/^      "version": "1.1.1",$/;"	s	object:dependencies.exit-hook
version	plugged/nova-vim/package-lock.json	/^      "version": "1.1.2",$/;"	s	object:dependencies.prelude-ls
version	plugged/nova-vim/package-lock.json	/^      "version": "1.1.3",$/;"	s	object:dependencies.chalk
version	plugged/nova-vim/package-lock.json	/^      "version": "1.1.8",$/;"	s	object:dependencies.brace-expansion
version	plugged/nova-vim/package-lock.json	/^      "version": "1.1.8",$/;"	s	object:dependencies.progress
version	plugged/nova-vim/package-lock.json	/^      "version": "1.2.0",$/;"	s	object:dependencies.generate-object-property
version	plugged/nova-vim/package-lock.json	/^      "version": "1.2.0",$/;"	s	object:dependencies.merge
version	plugged/nova-vim/package-lock.json	/^      "version": "1.2.1",$/;"	s	object:dependencies.pluralize
version	plugged/nova-vim/package-lock.json	/^      "version": "1.2.2",$/;"	s	object:dependencies.flat-cache
version	plugged/nova-vim/package-lock.json	/^      "version": "1.4.0",$/;"	s	object:dependencies.ansi-escapes
version	plugged/nova-vim/package-lock.json	/^      "version": "1.4.0",$/;"	s	object:dependencies.natural-compare
version	plugged/nova-vim/package-lock.json	/^      "version": "1.4.0",$/;"	s	object:dependencies.once
version	plugged/nova-vim/package-lock.json	/^      "version": "1.5.0",$/;"	s	object:dependencies.doctrine
version	plugged/nova-vim/package-lock.json	/^      "version": "1.5.1",$/;"	s	object:dependencies.ajv-keywords
version	plugged/nova-vim/package-lock.json	/^      "version": "1.6.0",$/;"	s	object:dependencies.concat-stream
version	plugged/nova-vim/package-lock.json	/^      "version": "1.7.0",$/;"	s	object:dependencies.figures
version	plugged/nova-vim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.file-entry-cache
version	plugged/nova-vim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.generate-function
version	plugged/nova-vim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.has-ansi
version	plugged/nova-vim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.ms
version	plugged/nova-vim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.supports-color
version	plugged/nova-vim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.user-home
version	plugged/nova-vim/package-lock.json	/^      "version": "2.0.1",$/;"	s	object:dependencies.es6-iterator
version	plugged/nova-vim/package-lock.json	/^      "version": "2.0.1",$/;"	s	object:dependencies.pinkie-promise
version	plugged/nova-vim/package-lock.json	/^      "version": "2.0.2",$/;"	s	object:dependencies.es6-weak-map
version	plugged/nova-vim/package-lock.json	/^      "version": "2.0.2",$/;"	s	object:dependencies.esutils
version	plugged/nova-vim/package-lock.json	/^      "version": "2.0.3",$/;"	s	object:dependencies.inherits
version	plugged/nova-vim/package-lock.json	/^      "version": "2.0.4",$/;"	s	object:dependencies.pinkie
version	plugged/nova-vim/package-lock.json	/^      "version": "2.0.6",$/;"	s	object:dependencies.fast-levenshtein
version	plugged/nova-vim/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.cli-width
version	plugged/nova-vim/package-lock.json	/^      "version": "2.1.1",$/;"	s	object:dependencies.ansi-regex
version	plugged/nova-vim/package-lock.json	/^      "version": "2.1.5",$/;"	s	object:dependencies.nova-colors
version	plugged/nova-vim/package-lock.json	/^      "version": "2.16.0",$/;"	s	object:dependencies.is-my-json-valid
version	plugged/nova-vim/package-lock.json	/^      "version": "2.2.1",$/;"	s	object:dependencies.ansi-styles
version	plugged/nova-vim/package-lock.json	/^      "version": "2.2.11",$/;"	s	object:dependencies.readable-stream
version	plugged/nova-vim/package-lock.json	/^      "version": "2.2.2",$/;"	s	object:dependencies.del
version	plugged/nova-vim/package-lock.json	/^      "version": "2.3.0",$/;"	s	object:dependencies.pify
version	plugged/nova-vim/package-lock.json	/^      "version": "2.3.8",$/;"	s	object:dependencies.through
version	plugged/nova-vim/package-lock.json	/^      "version": "2.6.1",$/;"	s	object:dependencies.rimraf
version	plugged/nova-vim/package-lock.json	/^      "version": "2.6.8",$/;"	s	object:dependencies.debug
version	plugged/nova-vim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.strip-bom
version	plugged/nova-vim/package-lock.json	/^      "version": "3.0.1",$/;"	s	object:dependencies.acorn-jsx
version	plugged/nova-vim/package-lock.json	/^      "version": "3.0.1",$/;"	s	object:dependencies.strip-ansi
version	plugged/nova-vim/package-lock.json	/^      "version": "3.0.4",$/;"	s	object:dependencies.minimatch
version	plugged/nova-vim/package-lock.json	/^      "version": "3.1.1",$/;"	s	object:dependencies.es6-symbol
version	plugged/nova-vim/package-lock.json	/^      "version": "3.1.2",$/;"	s	object:dependencies.rx-lite
version	plugged/nova-vim/package-lock.json	/^      "version": "3.1.3",$/;"	s	object:dependencies.esprima
version	plugged/nova-vim/package-lock.json	/^      "version": "3.3.3",$/;"	s	object:dependencies.ignore
version	plugged/nova-vim/package-lock.json	/^      "version": "3.4.3",$/;"	s	object:dependencies.espree
version	plugged/nova-vim/package-lock.json	/^      "version": "3.5.0",$/;"	s	object:dependencies.eslint
version	plugged/nova-vim/package-lock.json	/^      "version": "3.6.0",$/;"	s	object:dependencies.escope
version	plugged/nova-vim/package-lock.json	/^      "version": "3.8.3",$/;"	s	object:dependencies.table
version	plugged/nova-vim/package-lock.json	/^      "version": "3.8.4",$/;"	s	object:dependencies.js-yaml
version	plugged/nova-vim/package-lock.json	/^      "version": "4.0.1",$/;"	s	object:dependencies.jsonpointer
version	plugged/nova-vim/package-lock.json	/^      "version": "4.0.1",$/;"	s	object:dependencies.xtend
version	plugged/nova-vim/package-lock.json	/^      "version": "4.1.0",$/;"	s	object:dependencies.esrecurse
version	plugged/nova-vim/package-lock.json	/^      "version": "4.1.1",$/;"	s	object:dependencies.object-assign
version	plugged/nova-vim/package-lock.json	/^      "version": "4.1.11",$/;"	s	object:dependencies.graceful-fs
version	plugged/nova-vim/package-lock.json	/^      "version": "4.11.8",$/;"	s	object:dependencies.ajv
version	plugged/nova-vim/package-lock.json	/^      "version": "4.17.4",$/;"	s	object:dependencies.lodash
version	plugged/nova-vim/package-lock.json	/^      "version": "4.2.0",$/;"	s	object:dependencies.estraverse
version	plugged/nova-vim/package-lock.json	/^      "version": "4.6.0",$/;"	s	object:dependencies.co
version	plugged/nova-vim/package-lock.json	/^      "version": "5.0.0",$/;"	s	object:dependencies.globby
version	plugged/nova-vim/package-lock.json	/^      "version": "5.0.1",$/;"	s	object:dependencies.safe-buffer
version	plugged/nova-vim/package-lock.json	/^      "version": "5.0.3",$/;"	s	object:dependencies.acorn
version	plugged/nova-vim/package-lock.json	/^      "version": "7.1.2",$/;"	s	object:dependencies.glob
version	plugged/nova-vim/package-lock.json	/^      "version": "9.18.0",$/;"	s	object:dependencies.globals
version	plugged/nova-vim/package-lock.json	/^  "version": "3.17.0",$/;"	s
version	plugged/nova-vim/package.json	/^  "version": "3.17.0",$/;"	s
versionControlGroups	plugged/nova-vim/src/index.js	/^const versionControlGroups = require('nova-colors').versionControlGroups$/;"	C
vim	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    vim = neovim$/;"	v
vim	plugged/vdebug/features/support/helpers.rb	/^  def vim$/;"	f	module:VdebugHelper
vim	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^	vim = {}$/;"	v
vim-themis	plugged/deoplete.nvim/Makefile	/^vim-themis:$/;"	t
vim_snippets#Filename	plugged/neosnippet.vim/autoload/vim_snippets.vim	/^function! vim_snippets#Filename(...) abort$/;"	f
vimfiler#columns#devicons#define	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! vimfiler#columns#devicons#define()$/;"	f
vimhelplint	plugged/neomake/Makefile	/^vimhelplint: export VIMHELPLINT_VIM:=vim$/;"	t
vimhelplint	plugged/neomake/Makefile	/^vimhelplint: | $(if $(VIMHELPLINT_DIR),,build\/vimhelplint)$/;"	t
vimlint	plugged/neomake/Makefile	/^vimlint: | $(firstword $(VIMLINT_BIN))$/;"	t
vimlint-errors	plugged/neomake/Makefile	/^vimlint-errors: | $(firstword VIMLINT_BIN)$/;"	t
vimrc	config.d/conf.vim	/^augroup vimrc-sync-fromstart$/;"	a
vint	plugged/neomake/Makefile	/^vint: | $(VINT_BIN)$/;"	t
vint-errors	plugged/neomake/Makefile	/^vint-errors: | $(VINT_BIN)$/;"	t
visitor	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^        def visitor(child, parent, children):$/;"	f	member:Cursor.get_children	file:
visitor	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^        def visitor(fobj, lptr, depth, includes):$/;"	f	member:TranslationUnit.get_includes	file:
visitor	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^        def visitor(child, parent, children):$/;"	f	member:Cursor.get_children	file:
visitor	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^        def visitor(fobj, lptr, depth, includes):$/;"	f	member:TranslationUnit.get_includes	file:
visual_eval	plugged/vdebug/pythonx/vdebug/event.py	/^    def visual_eval(self, session):$/;"	m	class:Dispatcher
vital#	plugged/neosnippet.vim/autoload/vital/_neosnippet.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	plugged/neosnippet.vim/autoload/vital/neosnippet.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#_neosnippet#Data#List#import	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^  function! vital#_neosnippet#Data#List#import() abort$/;"	f
vital#_neosnippet#Data#String#import	plugged/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^  function! vital#_neosnippet#Data#String#import() abort$/;"	f
vital#_neosnippet#Prelude#import	plugged/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^  function! vital#_neosnippet#Prelude#import() abort$/;"	f
vital#_neosnippet#Process#import	plugged/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^  function! vital#_neosnippet#Process#import() abort$/;"	f
vital#_neosnippet#System#Cache#Deprecated#import	plugged/neosnippet.vim/autoload/vital/_neosnippet/System/Cache/Deprecated.vim	/^  function! vital#_neosnippet#System#Cache#Deprecated#import() abort$/;"	f
vital#of	plugged/neosnippet.vim/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
walk_preorder	plugged/deoplete-clang/rplugin/python3/deoplete/clang/clang/cindex.py	/^    def walk_preorder(self):$/;"	m	class:Cursor
walk_preorder	plugged/deoplete-clang/tests/clang/clang/cindex.py	/^    def walk_preorder(self):$/;"	m	class:Cursor
warn	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    warn = warning$/;"	v	class:LoggingMixin
warning	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def warning(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
watch	plugged/nova-vim/package-lock.json	/^    "watch": {$/;"	o	object:dependencies
watch	plugged/nova-vim/package.json	/^    "watch": "0.19.2"$/;"	s	object:devDependencies
watch	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def watch(self):$/;"	m	class:WindowManager
watch_vars	plugged/vdebug/rubylib/vdebug.rb	/^  def watch_vars$/;"	f	class:Vdebug
watch_window_content	plugged/vdebug/rubylib/vdebug.rb	/^  def watch_window_content$/;"	f	class:Vdebug
watchwin	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    watchwin = None$/;"	v	class:Ui
webdevicons	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^def webdevicons(pl, segment_info):$/;"	f
webdevicons#hardRefresh	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#hardRefresh()$/;"	f
webdevicons#refresh	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#refresh()$/;"	f
webdevicons#softRefresh	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#softRefresh()$/;"	f
webdevicons#version	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#version()$/;"	f
webdevicons_conceal_nerdtree_brackets	plugged/vim-devicons/plugin/webdevicons.vim	/^    augroup webdevicons_conceal_nerdtree_brackets$/;"	a
webdevicons_cursor_hold	plugged/vim-devicons/plugin/webdevicons.vim	/^    augroup webdevicons_cursor_hold$/;"	a
webdevicons_file_format	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^def webdevicons_file_format(pl, segment_info):$/;"	f
webdevicons_flagship_filesymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^      augroup webdevicons_flagship_filesymbol$/;"	a
webdevicons_flagship_filetype	plugged/vim-devicons/plugin/webdevicons.vim	/^      augroup webdevicons_flagship_filetype$/;"	a
when it starts listening	plugged/vdebug/spec/vdebug_spec.rb	/^  describe "when it starts listening" do$/;"	d
when the status buffer doesn't exist	plugged/vdebug/spec/vdebug_spec.rb	/^      context "when the status buffer doesn't exist" do$/;"	c
when the status buffer exists	plugged/vdebug/spec/vdebug_spec.rb	/^      context "when the status buffer exists" do$/;"	c
when the vdebug api returns 'running'	plugged/vdebug/spec/vdebug_spec.rb	/^      context "when the vdebug api returns 'running'" do$/;"	c
when the vdebug api returns 'stopped'	plugged/vdebug/spec/vdebug_spec.rb	/^      context "when the vdebug api returns 'stopped'" do$/;"	c
when the watch buffer doesn't exist	plugged/vdebug/spec/vdebug_spec.rb	/^      context "when the watch buffer doesn't exist" do$/;"	c
when the watch buffer exists	plugged/vdebug/spec/vdebug_spec.rb	/^      context "when the watch buffer exists" do$/;"	c
window	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def window(self, name):$/;"	m	class:Ui
window	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def window(self, name):$/;"	m	class:WindowManager
wordwrap	plugged/nova-vim/package-lock.json	/^        "wordwrap": "1.0.0"$/;"	s	object:dependencies.optionator.requires
wordwrap	plugged/nova-vim/package-lock.json	/^    "wordwrap": {$/;"	o	object:dependencies
wrapped.newsink	plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! wrapped.newsink(lines)$/;"	f
wrapper	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def wrapper(self, *args, **kwargs):$/;"	f	function:logmethod	file:
wrappy	plugged/nova-vim/package-lock.json	/^        "wrappy": "1.0.2"$/;"	s	object:dependencies.inflight.requires
wrappy	plugged/nova-vim/package-lock.json	/^        "wrappy": "1.0.2"$/;"	s	object:dependencies.once.requires
wrappy	plugged/nova-vim/package-lock.json	/^    "wrappy": {$/;"	o	object:dependencies
write	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^    def write(self, line):$/;"	m	class:RedirectStream
write	plugged/nova-vim/package-lock.json	/^        "write": "0.2.1"$/;"	s	object:dependencies.flat-cache.requires
write	plugged/nova-vim/package-lock.json	/^    "write": {$/;"	o	object:dependencies
write	plugged/vdebug/pythonx/vdebug/ui/interface.py	/^    def write(self, msg):$/;"	m	class:Window
write	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def write(self, msg, return_focus, after):$/;"	m	class:HiddenBuffer
write	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def write(self, msg, return_focus, after_callback):$/;"	m	class:VimBuffer
write	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def write(self, msg, return_focus=True):$/;"	m	class:LogWindow
write	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def write(self, msg, return_focus=True):$/;"	m	class:StackWindow
write	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def write(self, msg, return_focus=True):$/;"	m	class:WatchWindow
write	plugged/vdebug/pythonx/vdebug/ui/vimui.py	/^    def write(self, msg, return_focus=True, after="normal G"):$/;"	m	class:Window
write_lock_file!	plugged/vdebug/rubylib/vdebug.rb	/^  def write_lock_file!$/;"	f	class:Vdebug
writelines	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^    def writelines(self, lines):$/;"	m	class:RedirectStream
xtend	plugged/nova-vim/package-lock.json	/^        "xtend": "4.0.1"$/;"	s	object:dependencies.is-my-json-valid.requires
xtend	plugged/nova-vim/package-lock.json	/^    "xtend": {$/;"	o	object:dependencies
